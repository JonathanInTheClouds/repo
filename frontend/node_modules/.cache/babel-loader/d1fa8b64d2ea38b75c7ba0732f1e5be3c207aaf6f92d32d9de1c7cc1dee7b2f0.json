{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandowdell/Workstation/React/million-pixel-app/src/pages/CanvasPage.jsx\",\n  _import$meta,\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport imageSrc from \"../Banner Hi Rez.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || ((_import$meta = import.meta) === null || _import$meta === void 0 ? void 0 : _import$meta.env) && import.meta.env.VITE_API_BASE || \"http://localhost:3001\";\nconst socket = io(API_BASE, {\n  transports: [\"websocket\"],\n  autoConnect: true\n});\nconst CANVAS_WIDTH = 1495;\nconst CANVAS_HEIGHT = 1024;\nconst GRID_COLUMNS = 200;\nconst GRID_ROWS = 200;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\nconst pulseDurationMs = 4500;\n\n/* persistent tint */\nconst DESIRED_TINT = \"#f59e0b\";\nconst TINT_ALPHA = 0.65;\nconst TINT_PERSIST_MS = 0; // 0=infinite\nconst TINT_INSET = 1;\nconst TINT_RADIUS = 2;\nlet cachedGrayCanvas = null;\nfunction buildGrayBase(img) {\n  if (cachedGrayCanvas) return cachedGrayCanvas;\n  const off = document.createElement(\"canvas\");\n  off.width = CANVAS_WIDTH;\n  off.height = CANVAS_HEIGHT;\n  const octx = off.getContext(\"2d\");\n  octx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const data = octx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const a = data.data;\n  for (let i = 0; i < a.length; i += 4) {\n    const avg = (a[i] + a[i + 1] + a[i + 2]) / 3;\n    a[i] = avg;\n    a[i + 1] = avg;\n    a[i + 2] = avg;\n  }\n  octx.putImageData(data, 0, 0);\n  cachedGrayCanvas = off;\n  return off;\n}\nconst k = (x, y) => `${x},${y}`;\nfunction drawRoundedRect(ctx, x, y, w, h, r) {\n  const rr = Math.min(r, w / 2, h / 2);\n  ctx.beginPath();\n  ctx.moveTo(x + rr, y);\n  ctx.arcTo(x + w, y, x + w, y + h, rr);\n  ctx.arcTo(x + w, y + h, x, y + h, rr);\n  ctx.arcTo(x, y + h, x, y, rr);\n  ctx.arcTo(x, y, x + w, y, rr);\n  ctx.closePath();\n}\nexport default function CanvasPage() {\n  _s();\n  const canvasRef = useRef(null);\n\n  // logical state (for hover/metadata); never used to \"erase\" pixels\n  const [cells, setCells] = useState([]); // [{x,y,amountCents?,message?,ts?}]\n  const cellsMapRef = useRef(new Map()); // k -> cell\n\n  // image + layers\n  const imgRef = useRef(null);\n  const [imgReady, setImgReady] = useState(false);\n  const tilesCanvasRef = useRef(null); // offscreen layer with colored tiles\n  const tilesCtxRef = useRef(null);\n  const tilesKeysRef = useRef(new Set()); // keys already drawn to offscreen\n  const pendingDrawQueueRef = useRef([]); // queue cells until image is ready\n\n  // hover\n  const [hover, setHover] = useState(null);\n\n  // effects\n  const pulsesRef = useRef(new Map()); // k -> t0\n  const tintsRef = useRef(new Map()); // k -> {color, t0}\n  const rafRef = useRef(0);\n\n  // UI bubble\n  const bubbleTimerRef = useRef(null);\n  const [bubble, setBubble] = useState(null);\n\n  // reconcile burst\n  const reconcileTimersRef = useRef([]);\n\n  // NEW: grouping for messages across all cells of a purchase\n  const cellToGroupRef = useRef(new Map()); // k -> groupId\n  const groupMetaRef = useRef(new Map()); // groupId -> { message, amountCents }\n\n  const totalCells = GRID_COLUMNS * GRID_ROWS;\n\n  /* image */\n  useEffect(() => {\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      imgRef.current = img;\n      buildGrayBase(img);\n      ensureOffscreen();\n      flushPendingToOffscreen();\n      setImgReady(true);\n      draw();\n    };\n  }, []);\n  function ensureOffscreen() {\n    if (!tilesCanvasRef.current) {\n      const off = document.createElement(\"canvas\");\n      off.width = CANVAS_WIDTH;\n      off.height = CANVAS_HEIGHT;\n      tilesCanvasRef.current = off;\n      tilesCtxRef.current = off.getContext(\"2d\");\n    }\n  }\n  function blitCellsToOffscreen(cellsArr) {\n    const img = imgRef.current;\n    const ctx = tilesCtxRef.current;\n    if (!img || !ctx) {\n      // queue until ready\n      pendingDrawQueueRef.current.push(...cellsArr);\n      return;\n    }\n    for (const {\n      x,\n      y\n    } of cellsArr) {\n      const kk = k(x, y);\n      if (tilesKeysRef.current.has(kk)) continue;\n      tilesKeysRef.current.add(kk);\n      ctx.drawImage(img, x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT, x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    }\n  }\n  function flushPendingToOffscreen() {\n    if (pendingDrawQueueRef.current.length) {\n      const arr = pendingDrawQueueRef.current.splice(0);\n      blitCellsToOffscreen(arr);\n    }\n  }\n\n  /* helpers for logical state */\n  const setCellsAndMap = updater => {\n    setCells(prev => {\n      const next = typeof updater === \"function\" ? updater(prev) : updater;\n      // monotonic guard: never shrink\n      if (next.length < prev.length) return prev;\n      const m = new Map();\n      for (const c of next) m.set(k(c.x, c.y), c);\n      cellsMapRef.current = m;\n      return next;\n    });\n  };\n  const mergeCells = incoming => {\n    if (!(incoming !== null && incoming !== void 0 && incoming.length)) return;\n    // compute \"added\" against current map (before state set)\n    const newOnes = [];\n    for (const c of incoming) {\n      const kk = k(c.x, c.y);\n      if (!cellsMapRef.current.has(kk)) newOnes.push(c);\n    }\n    // update logical state (union)\n    setCellsAndMap(prev => {\n      const out = prev.slice();\n      const have = new Set(prev.map(c => k(c.x, c.y)));\n      for (const c of incoming) {\n        const kk = k(c.x, c.y);\n        if (!have.has(kk)) {\n          out.push(c);\n          have.add(kk);\n        } else {\n          const idx = out.findIndex(p => p.x === c.x && p.y === c.y);\n          if (idx >= 0) out[idx] = {\n            ...out[idx],\n            ...c\n          };\n        }\n      }\n      return out;\n    });\n    // paint the new ones immediately to offscreen\n    if (newOnes.length) blitCellsToOffscreen(newOnes);\n  };\n  const reconcileFromServer = async () => {\n    try {\n      const r = await fetch(`${API_BASE}/state`);\n      const {\n        cells: serverCells\n      } = await r.json();\n      if (!Array.isArray(serverCells)) return;\n      // union into logical state\n      mergeCells(serverCells);\n      draw(); // immediate repaint\n    } catch {\n      /* ignore */\n    }\n  };\n  const scheduleReconcileBurst = () => {\n    for (const t of reconcileTimersRef.current) clearTimeout(t);\n    reconcileTimersRef.current = [];\n    for (const ms of [300, 1200, 3000]) {\n      reconcileTimersRef.current.push(setTimeout(reconcileFromServer, ms));\n    }\n  };\n\n  /* bootstrap + sockets */\n  useEffect(() => {\n    reconcileFromServer(); // initial union\n\n    const onCells = payload => {\n      const {\n        cells,\n        message,\n        amountCents,\n        orderId\n      } = payload || {};\n      // assign a group id (prefer Stripe event id)\n      const gid = orderId || `grp_${Date.now()}_${Math.random().toString(36).slice(2, 8)}`;\n\n      // persist group meta\n      if (message || typeof amountCents === \"number\") {\n        groupMetaRef.current.set(gid, {\n          message,\n          amountCents\n        });\n      }\n\n      // map every cell -> groupId\n      if (Array.isArray(cells)) {\n        for (const c of cells) {\n          cellToGroupRef.current.set(k(c.x, c.y), gid);\n        }\n      }\n\n      // also put message/amount onto each cell object (so hover works even without lookup)\n      const enriched = Array.isArray(cells) && (message || typeof amountCents === \"number\") ? cells.map(c => ({\n        ...c,\n        message,\n        amountCents\n      })) : cells;\n\n      // optimistic union + offscreen blit\n      mergeCells(enriched);\n\n      // visuals\n      const t0 = performance.now();\n      for (const c of cells || []) {\n        const kk = k(c.x, c.y);\n        pulsesRef.current.set(kk, t0);\n        tintsRef.current.set(kk, {\n          color: DESIRED_TINT,\n          t0\n        });\n      }\n      kickPulse();\n      if (message) showBubbleForCells(cells || [], message, amountCents);\n\n      // heal any races\n      scheduleReconcileBurst();\n    };\n    const onBootstrap = ({\n      cells\n    }) => {\n      // union only; never replace\n      mergeCells(cells);\n    };\n    socket.on(\"bootstrap\", onBootstrap);\n    socket.on(\"cells_revealed\", onCells);\n    socket.on(\"donation_message\", ({\n      message,\n      amountCents,\n      orderId\n    }) => {\n      // message-only (no cells)\n      const gid = orderId || `grp_${Date.now()}_${Math.random().toString(36).slice(2, 8)}`;\n      groupMetaRef.current.set(gid, {\n        message,\n        amountCents\n      });\n      if (message) showBubbleForCells([], message, amountCents);\n    });\n    const iv = setInterval(reconcileFromServer, 20000);\n    return () => {\n      socket.off(\"bootstrap\", onBootstrap);\n      socket.off(\"cells_revealed\", onCells);\n      socket.off(\"donation_message\");\n      clearInterval(iv);\n      for (const t of reconcileTimersRef.current) clearTimeout(t);\n      reconcileTimersRef.current = [];\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    draw();\n  }, [cells, imgReady]);\n\n  /* draw */\n  function draw(now = performance.now()) {\n    const canvas = canvasRef.current;\n    const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n    const img = imgRef.current;\n    const tiles = tilesCanvasRef.current;\n    if (!canvas || !ctx || !img || !tiles) return;\n    const gray = buildGrayBase(img);\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.drawImage(gray, 0, 0);\n\n    // composite persistent tiles layer (never cleared)\n    ctx.drawImage(tiles, 0, 0);\n\n    // persistent tints\n    if (tintsRef.current.size) {\n      ctx.save();\n      ctx.globalCompositeOperation = \"overlay\";\n      ctx.globalAlpha = TINT_ALPHA;\n      for (const [keyStr, meta] of tintsRef.current) {\n        if (TINT_PERSIST_MS > 0 && now - meta.t0 > TINT_PERSIST_MS) {\n          tintsRef.current.delete(keyStr);\n          continue;\n        }\n        const [xs, ys] = keyStr.split(\",\");\n        const x = +xs,\n          y = +ys;\n        const px = x * CELL_WIDTH + TINT_INSET;\n        const py = y * CELL_HEIGHT + TINT_INSET;\n        const pw = CELL_WIDTH - TINT_INSET * 2;\n        const ph = CELL_HEIGHT - TINT_INSET * 2;\n        drawRoundedRect(ctx, px, py, pw, ph, TINT_RADIUS);\n        ctx.fillStyle = meta.color || DESIRED_TINT;\n        ctx.fill();\n      }\n      ctx.restore();\n    }\n\n    // pulse outline\n    let anyAlive = false;\n    pulsesRef.current.forEach((t0, keyStr) => {\n      const age = now - t0;\n      const life = age / pulseDurationMs;\n      if (life >= 1) {\n        pulsesRef.current.delete(keyStr);\n        return;\n      }\n      anyAlive = true;\n      const [xs, ys] = keyStr.split(\",\");\n      const x = +xs,\n        y = +ys;\n      const alpha = 1 - life;\n      ctx.save();\n      ctx.globalAlpha = Math.max(0, alpha) * 0.95;\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"rgba(34,197,94,1)\";\n      ctx.strokeRect(Math.floor(x * CELL_WIDTH) + 0.5, Math.floor(y * CELL_HEIGHT) + 0.5, Math.floor(CELL_WIDTH) - 1, Math.floor(CELL_HEIGHT) - 1);\n      ctx.restore();\n    });\n    drawGrid(ctx);\n    if (anyAlive || TINT_PERSIST_MS > 0 && tintsRef.current.size) {\n      rafRef.current = requestAnimationFrame(draw);\n    } else if (rafRef.current) {\n      cancelAnimationFrame(rafRef.current);\n      rafRef.current = 0;\n    }\n  }\n  function kickPulse() {\n    if (!rafRef.current) rafRef.current = requestAnimationFrame(draw);\n  }\n  function drawGrid(ctx) {\n    ctx.save();\n    ctx.strokeStyle = \"rgba(255,255,255,0.06)\";\n    ctx.lineWidth = 1;\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  /* hover */\n  function onMouseMove(e) {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = CANVAS_WIDTH / rect.width;\n    const scaleY = CANVAS_HEIGHT / rect.height;\n    const px = (e.clientX - rect.left) * scaleX;\n    const py = (e.clientY - rect.top) * scaleY;\n    const x = Math.floor(px / CELL_WIDTH);\n    const y = Math.floor(py / CELL_HEIGHT);\n    if (x < 0 || y < 0 || x >= GRID_COLUMNS || y >= GRID_ROWS) {\n      setHover(null);\n      return;\n    }\n    const keyStr = k(x, y);\n    const cell = cellsMapRef.current.get(keyStr);\n    if (!cell) {\n      setHover(null);\n      return;\n    }\n\n    // resolve message: per-cell OR group-level\n    let hoverMsg = cell.message;\n    let hoverAmt = cell.amountCents;\n    if (!hoverMsg || typeof hoverAmt !== \"number\") {\n      const gid = cellToGroupRef.current.get(keyStr);\n      const meta = gid ? groupMetaRef.current.get(gid) : null;\n      if (meta) {\n        hoverMsg = hoverMsg || meta.message;\n        hoverAmt = typeof hoverAmt === \"number\" ? hoverAmt : meta.amountCents;\n      }\n    }\n    setHover({\n      clientX: e.clientX,\n      clientY: e.clientY,\n      cell: {\n        ...cell,\n        message: hoverMsg,\n        amountCents: hoverAmt\n      }\n    });\n  }\n  function onMouseLeave() {\n    setHover(null);\n  }\n\n  /* bubble */\n  function showBubbleForCells(cellsArr, message, amountCents) {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    let left = rect.left + rect.width / 2;\n    let top = rect.top + 24;\n    const first = cellsArr === null || cellsArr === void 0 ? void 0 : cellsArr[0];\n    if (first) {\n      left = rect.left + (first.x + 0.5) * (rect.width / GRID_COLUMNS);\n      top = rect.top + (first.y + 0.5) * (rect.height / GRID_ROWS) - 8;\n    }\n    setBubble({\n      left,\n      top,\n      message,\n      amountCents,\n      until: Date.now() + 9000\n    });\n    if (bubbleTimerRef.current) clearTimeout(bubbleTimerRef.current);\n    bubbleTimerRef.current = setTimeout(() => setBubble(null), 5000);\n  }\n  const remaining = useMemo(() => Math.max(totalCells - cells.length, 0), [cells.length, totalCells]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Style, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-shell\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hud\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hud-title\",\n          children: \"Million Pixel Reveal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hud-sub\",\n          children: [\"Remaining: \", remaining.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        className: \"canvas\",\n        onMouseMove: onMouseMove,\n        onMouseLeave: onMouseLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), (hover === null || hover === void 0 ? void 0 : hover.cell) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tip\",\n        style: {\n          left: hover.clientX + 14,\n          top: hover.clientY + 14\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Cell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), \" (\", hover.cell.x, \",\", hover.cell.y, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this), typeof hover.cell.amountCents === \"number\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }, this), \" $\", (hover.cell.amountCents / 100).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 15\n        }, this), hover.cell.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip-row msg\",\n          children: [\"\\u201C\", hover.cell.message, \"\\u201D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this), bubble && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble\",\n        style: {\n          left: bubble.left,\n          top: bubble.top\n        },\n        children: [typeof bubble.amountCents === \"number\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble-amt\",\n          children: [\"$\", (bubble.amountCents / 100).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 15\n        }, this), bubble.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble-msg\",\n          children: [\"\\u201C\", bubble.message, \"\\u201D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this);\n}\n\n/* styles */\n_s(CanvasPage, \"H5zkqbIeq3Z7jpAbTKoXK48uUMk=\");\n_c = CanvasPage;\nfunction Style() {\n  return /*#__PURE__*/_jsxDEV(\"style\", {\n    children: `\n:root{\n  --bg: #0b1220;\n  --line: #334155;\n  --text: #e2e8f0;\n  --muted: #94a3b8;\n  --hud-bg: rgba(2,6,23,.7);\n}\n.canvas-wrap{\n  min-height: 100vh;\n  background: radial-gradient(1000px 600px at 20% -10%, #19324b 0%, transparent 40%),\n              radial-gradient(800px 500px at 100% 0%, #1b2d24 0%, transparent 35%),\n              var(--bg);\n  display: flex; justify-content: center; align-items: flex-start;\n  padding: 24px 16px 64px;\n}\n@media (min-height: 820px){ .canvas-wrap{ align-items: center; } }\n.canvas-shell{ width: min(100%, 1500px); position: relative; }\n.canvas{\n  display: block; width: 100%; height: auto; margin: 12px auto 0;\n  border: 2px solid var(--line); border-radius: 14px;\n  box-shadow: 0 14px 40px rgba(0,0,0,.35), 0 2px 10px rgba(0,0,0,.25);\n  background: #0e1624;\n}\n.hud{\n  position: absolute; top: 14px; left: 14px; z-index: 2;\n  background: var(--hud-bg); color: var(--text);\n  border: 1px solid rgba(148,163,184,.35);\n  border-radius: 8px; padding: 10px 12px;\n  backdrop-filter: blur(6px); -webkit-backdrop-filter: blur(6px);\n}\n.hud-title{ font-weight: 800; font-size: 14px; line-height: 1.1; }\n.hud-sub{ color: var(--muted); font-size: 12px; margin-top: 2px; }\n.tip{\n  position: fixed; z-index: 10; max-width: 320px;\n  background: rgba(15,23,42,.95); color: var(--text);\n  border: 1px solid rgba(51,65,85,.9); border-radius: 10px; padding: 10px 12px;\n  box-shadow: 0 10px 30px rgba(0,0,0,.35); pointer-events: none; font-size: 13px;\n}\n.tip-row{ margin: 2px 0; }\n.tip-row.msg{ color: var(--muted); font-style: italic; }\n.bubble{\n  position: fixed; z-index: 11;\n  transform: translate(-50%, -100%);\n  background: rgba(2,6,23,.92); border: 1px solid rgba(51,65,85,.9);\n  color: var(--text); border-radius: 12px; padding: 10px 12px;\n  box-shadow: 0 12px 36px rgba(0,0,0,.45);\n  animation: bubble-in .2s ease-out, bubble-out .25s ease-in 4.75s forwards;\n  max-width: min(70vw, 420px);\n}\n.bubble-amt{ font-weight: 800; margin-bottom: 2px; }\n.bubble-msg{ color: var(--muted); font-style: italic; }\n@keyframes bubble-in { from{ opacity: 0; transform: translate(-50%,-90%) scale(.98);} to{opacity:1; transform: translate(-50%,-100%) scale(1);} }\n@keyframes bubble-out { to{ opacity: 0; transform: translate(-50%,-100%) scale(.98);} }\n    `\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 522,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Style;\nvar _c, _c2;\n$RefreshReg$(_c, \"CanvasPage\");\n$RefreshReg$(_c2, \"Style\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","io","imageSrc","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","_import$meta","import","meta","VITE_API_BASE","socket","transports","autoConnect","CANVAS_WIDTH","CANVAS_HEIGHT","GRID_COLUMNS","GRID_ROWS","CELL_WIDTH","CELL_HEIGHT","pulseDurationMs","DESIRED_TINT","TINT_ALPHA","TINT_PERSIST_MS","TINT_INSET","TINT_RADIUS","cachedGrayCanvas","buildGrayBase","img","off","document","createElement","width","height","octx","getContext","drawImage","data","getImageData","a","i","length","avg","putImageData","k","x","y","drawRoundedRect","ctx","w","h","r","rr","Math","min","beginPath","moveTo","arcTo","closePath","CanvasPage","_s","canvasRef","cells","setCells","cellsMapRef","Map","imgRef","imgReady","setImgReady","tilesCanvasRef","tilesCtxRef","tilesKeysRef","Set","pendingDrawQueueRef","hover","setHover","pulsesRef","tintsRef","rafRef","bubbleTimerRef","bubble","setBubble","reconcileTimersRef","cellToGroupRef","groupMetaRef","totalCells","Image","src","onload","current","ensureOffscreen","flushPendingToOffscreen","draw","blitCellsToOffscreen","cellsArr","push","kk","has","add","arr","splice","setCellsAndMap","updater","prev","next","m","c","set","mergeCells","incoming","newOnes","out","slice","have","map","idx","findIndex","p","reconcileFromServer","fetch","serverCells","json","Array","isArray","scheduleReconcileBurst","t","clearTimeout","ms","setTimeout","onCells","payload","message","amountCents","orderId","gid","Date","now","random","toString","enriched","t0","performance","color","kickPulse","showBubbleForCells","onBootstrap","on","iv","setInterval","clearInterval","canvas","tiles","gray","clearRect","size","save","globalCompositeOperation","globalAlpha","keyStr","delete","xs","ys","split","px","py","pw","ph","fillStyle","fill","restore","anyAlive","forEach","age","life","alpha","max","lineWidth","strokeStyle","strokeRect","floor","drawGrid","requestAnimationFrame","cancelAnimationFrame","lineTo","stroke","j","onMouseMove","e","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","cell","get","hoverMsg","hoverAmt","onMouseLeave","first","until","remaining","className","children","Style","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","ref","style","toFixed","_c","_c2","$RefreshReg$"],"sources":["/Users/jonathandowdell/Workstation/React/million-pixel-app/src/pages/CanvasPage.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport imageSrc from \"../Banner Hi Rez.png\";\n\nconst API_BASE =\n  process.env.REACT_APP_API_BASE ||\n  (import.meta?.env && import.meta.env.VITE_API_BASE) ||\n  \"http://localhost:3001\";\nconst socket = io(API_BASE, { transports: [\"websocket\"], autoConnect: true });\n\nconst CANVAS_WIDTH = 1495;\nconst CANVAS_HEIGHT = 1024;\nconst GRID_COLUMNS = 200;\nconst GRID_ROWS = 200;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\nconst pulseDurationMs = 4500;\n\n/* persistent tint */\nconst DESIRED_TINT = \"#f59e0b\";\nconst TINT_ALPHA = 0.65;\nconst TINT_PERSIST_MS = 0; // 0=infinite\nconst TINT_INSET = 1;\nconst TINT_RADIUS = 2;\n\nlet cachedGrayCanvas = null;\nfunction buildGrayBase(img) {\n  if (cachedGrayCanvas) return cachedGrayCanvas;\n  const off = document.createElement(\"canvas\");\n  off.width = CANVAS_WIDTH;\n  off.height = CANVAS_HEIGHT;\n  const octx = off.getContext(\"2d\");\n  octx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const data = octx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const a = data.data;\n  for (let i = 0; i < a.length; i += 4) {\n    const avg = (a[i] + a[i + 1] + a[i + 2]) / 3;\n    a[i] = avg;\n    a[i + 1] = avg;\n    a[i + 2] = avg;\n  }\n  octx.putImageData(data, 0, 0);\n  cachedGrayCanvas = off;\n  return off;\n}\n\nconst k = (x, y) => `${x},${y}`;\n\nfunction drawRoundedRect(ctx, x, y, w, h, r) {\n  const rr = Math.min(r, w / 2, h / 2);\n  ctx.beginPath();\n  ctx.moveTo(x + rr, y);\n  ctx.arcTo(x + w, y, x + w, y + h, rr);\n  ctx.arcTo(x + w, y + h, x, y + h, rr);\n  ctx.arcTo(x, y + h, x, y, rr);\n  ctx.arcTo(x, y, x + w, y, rr);\n  ctx.closePath();\n}\n\nexport default function CanvasPage() {\n  const canvasRef = useRef(null);\n\n  // logical state (for hover/metadata); never used to \"erase\" pixels\n  const [cells, setCells] = useState([]); // [{x,y,amountCents?,message?,ts?}]\n  const cellsMapRef = useRef(new Map()); // k -> cell\n\n  // image + layers\n  const imgRef = useRef(null);\n  const [imgReady, setImgReady] = useState(false);\n  const tilesCanvasRef = useRef(null); // offscreen layer with colored tiles\n  const tilesCtxRef = useRef(null);\n  const tilesKeysRef = useRef(new Set()); // keys already drawn to offscreen\n  const pendingDrawQueueRef = useRef([]); // queue cells until image is ready\n\n  // hover\n  const [hover, setHover] = useState(null);\n\n  // effects\n  const pulsesRef = useRef(new Map()); // k -> t0\n  const tintsRef = useRef(new Map()); // k -> {color, t0}\n  const rafRef = useRef(0);\n\n  // UI bubble\n  const bubbleTimerRef = useRef(null);\n  const [bubble, setBubble] = useState(null);\n\n  // reconcile burst\n  const reconcileTimersRef = useRef([]);\n\n  // NEW: grouping for messages across all cells of a purchase\n  const cellToGroupRef = useRef(new Map()); // k -> groupId\n  const groupMetaRef = useRef(new Map()); // groupId -> { message, amountCents }\n\n  const totalCells = GRID_COLUMNS * GRID_ROWS;\n\n  /* image */\n  useEffect(() => {\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      imgRef.current = img;\n      buildGrayBase(img);\n      ensureOffscreen();\n      flushPendingToOffscreen();\n      setImgReady(true);\n      draw();\n    };\n  }, []);\n\n  function ensureOffscreen() {\n    if (!tilesCanvasRef.current) {\n      const off = document.createElement(\"canvas\");\n      off.width = CANVAS_WIDTH;\n      off.height = CANVAS_HEIGHT;\n      tilesCanvasRef.current = off;\n      tilesCtxRef.current = off.getContext(\"2d\");\n    }\n  }\n\n  function blitCellsToOffscreen(cellsArr) {\n    const img = imgRef.current;\n    const ctx = tilesCtxRef.current;\n    if (!img || !ctx) {\n      // queue until ready\n      pendingDrawQueueRef.current.push(...cellsArr);\n      return;\n    }\n    for (const { x, y } of cellsArr) {\n      const kk = k(x, y);\n      if (tilesKeysRef.current.has(kk)) continue;\n      tilesKeysRef.current.add(kk);\n      ctx.drawImage(\n        img,\n        x * CELL_WIDTH,\n        y * CELL_HEIGHT,\n        CELL_WIDTH,\n        CELL_HEIGHT,\n        x * CELL_WIDTH,\n        y * CELL_HEIGHT,\n        CELL_WIDTH,\n        CELL_HEIGHT\n      );\n    }\n  }\n\n  function flushPendingToOffscreen() {\n    if (pendingDrawQueueRef.current.length) {\n      const arr = pendingDrawQueueRef.current.splice(0);\n      blitCellsToOffscreen(arr);\n    }\n  }\n\n  /* helpers for logical state */\n  const setCellsAndMap = (updater) => {\n    setCells((prev) => {\n      const next = typeof updater === \"function\" ? updater(prev) : updater;\n      // monotonic guard: never shrink\n      if (next.length < prev.length) return prev;\n      const m = new Map();\n      for (const c of next) m.set(k(c.x, c.y), c);\n      cellsMapRef.current = m;\n      return next;\n    });\n  };\n\n  const mergeCells = (incoming) => {\n    if (!incoming?.length) return;\n    // compute \"added\" against current map (before state set)\n    const newOnes = [];\n    for (const c of incoming) {\n      const kk = k(c.x, c.y);\n      if (!cellsMapRef.current.has(kk)) newOnes.push(c);\n    }\n    // update logical state (union)\n    setCellsAndMap((prev) => {\n      const out = prev.slice();\n      const have = new Set(prev.map((c) => k(c.x, c.y)));\n      for (const c of incoming) {\n        const kk = k(c.x, c.y);\n        if (!have.has(kk)) {\n          out.push(c);\n          have.add(kk);\n        } else {\n          const idx = out.findIndex((p) => p.x === c.x && p.y === c.y);\n          if (idx >= 0) out[idx] = { ...out[idx], ...c };\n        }\n      }\n      return out;\n    });\n    // paint the new ones immediately to offscreen\n    if (newOnes.length) blitCellsToOffscreen(newOnes);\n  };\n\n  const reconcileFromServer = async () => {\n    try {\n      const r = await fetch(`${API_BASE}/state`);\n      const { cells: serverCells } = await r.json();\n      if (!Array.isArray(serverCells)) return;\n      // union into logical state\n      mergeCells(serverCells);\n      draw(); // immediate repaint\n    } catch {\n      /* ignore */\n    }\n  };\n\n  const scheduleReconcileBurst = () => {\n    for (const t of reconcileTimersRef.current) clearTimeout(t);\n    reconcileTimersRef.current = [];\n    for (const ms of [300, 1200, 3000]) {\n      reconcileTimersRef.current.push(setTimeout(reconcileFromServer, ms));\n    }\n  };\n\n  /* bootstrap + sockets */\n  useEffect(() => {\n    reconcileFromServer(); // initial union\n\n    const onCells = (payload) => {\n      const { cells, message, amountCents, orderId } = payload || {};\n      // assign a group id (prefer Stripe event id)\n      const gid =\n        orderId ||\n        `grp_${Date.now()}_${Math.random().toString(36).slice(2, 8)}`;\n\n      // persist group meta\n      if (message || typeof amountCents === \"number\") {\n        groupMetaRef.current.set(gid, { message, amountCents });\n      }\n\n      // map every cell -> groupId\n      if (Array.isArray(cells)) {\n        for (const c of cells) {\n          cellToGroupRef.current.set(k(c.x, c.y), gid);\n        }\n      }\n\n      // also put message/amount onto each cell object (so hover works even without lookup)\n      const enriched =\n        Array.isArray(cells) && (message || typeof amountCents === \"number\")\n          ? cells.map((c) => ({ ...c, message, amountCents }))\n          : cells;\n\n      // optimistic union + offscreen blit\n      mergeCells(enriched);\n\n      // visuals\n      const t0 = performance.now();\n      for (const c of cells || []) {\n        const kk = k(c.x, c.y);\n        pulsesRef.current.set(kk, t0);\n        tintsRef.current.set(kk, { color: DESIRED_TINT, t0 });\n      }\n      kickPulse();\n      if (message) showBubbleForCells(cells || [], message, amountCents);\n\n      // heal any races\n      scheduleReconcileBurst();\n    };\n\n    const onBootstrap = ({ cells }) => {\n      // union only; never replace\n      mergeCells(cells);\n    };\n\n    socket.on(\"bootstrap\", onBootstrap);\n    socket.on(\"cells_revealed\", onCells);\n    socket.on(\"donation_message\", ({ message, amountCents, orderId }) => {\n      // message-only (no cells)\n      const gid =\n        orderId ||\n        `grp_${Date.now()}_${Math.random().toString(36).slice(2, 8)}`;\n      groupMetaRef.current.set(gid, { message, amountCents });\n      if (message) showBubbleForCells([], message, amountCents);\n    });\n\n    const iv = setInterval(reconcileFromServer, 20000);\n\n    return () => {\n      socket.off(\"bootstrap\", onBootstrap);\n      socket.off(\"cells_revealed\", onCells);\n      socket.off(\"donation_message\");\n      clearInterval(iv);\n      for (const t of reconcileTimersRef.current) clearTimeout(t);\n      reconcileTimersRef.current = [];\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [cells, imgReady]);\n\n  /* draw */\n  function draw(now = performance.now()) {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext(\"2d\");\n    const img = imgRef.current;\n    const tiles = tilesCanvasRef.current;\n    if (!canvas || !ctx || !img || !tiles) return;\n\n    const gray = buildGrayBase(img);\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.drawImage(gray, 0, 0);\n\n    // composite persistent tiles layer (never cleared)\n    ctx.drawImage(tiles, 0, 0);\n\n    // persistent tints\n    if (tintsRef.current.size) {\n      ctx.save();\n      ctx.globalCompositeOperation = \"overlay\";\n      ctx.globalAlpha = TINT_ALPHA;\n      for (const [keyStr, meta] of tintsRef.current) {\n        if (TINT_PERSIST_MS > 0 && now - meta.t0 > TINT_PERSIST_MS) {\n          tintsRef.current.delete(keyStr);\n          continue;\n        }\n        const [xs, ys] = keyStr.split(\",\");\n        const x = +xs,\n          y = +ys;\n        const px = x * CELL_WIDTH + TINT_INSET;\n        const py = y * CELL_HEIGHT + TINT_INSET;\n        const pw = CELL_WIDTH - TINT_INSET * 2;\n        const ph = CELL_HEIGHT - TINT_INSET * 2;\n        drawRoundedRect(ctx, px, py, pw, ph, TINT_RADIUS);\n        ctx.fillStyle = meta.color || DESIRED_TINT;\n        ctx.fill();\n      }\n      ctx.restore();\n    }\n\n    // pulse outline\n    let anyAlive = false;\n    pulsesRef.current.forEach((t0, keyStr) => {\n      const age = now - t0;\n      const life = age / pulseDurationMs;\n      if (life >= 1) {\n        pulsesRef.current.delete(keyStr);\n        return;\n      }\n      anyAlive = true;\n      const [xs, ys] = keyStr.split(\",\");\n      const x = +xs,\n        y = +ys;\n      const alpha = 1 - life;\n      ctx.save();\n      ctx.globalAlpha = Math.max(0, alpha) * 0.95;\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"rgba(34,197,94,1)\";\n      ctx.strokeRect(\n        Math.floor(x * CELL_WIDTH) + 0.5,\n        Math.floor(y * CELL_HEIGHT) + 0.5,\n        Math.floor(CELL_WIDTH) - 1,\n        Math.floor(CELL_HEIGHT) - 1\n      );\n      ctx.restore();\n    });\n\n    drawGrid(ctx);\n\n    if (anyAlive || (TINT_PERSIST_MS > 0 && tintsRef.current.size)) {\n      rafRef.current = requestAnimationFrame(draw);\n    } else if (rafRef.current) {\n      cancelAnimationFrame(rafRef.current);\n      rafRef.current = 0;\n    }\n  }\n\n  function kickPulse() {\n    if (!rafRef.current) rafRef.current = requestAnimationFrame(draw);\n  }\n\n  function drawGrid(ctx) {\n    ctx.save();\n    ctx.strokeStyle = \"rgba(255,255,255,0.06)\";\n    ctx.lineWidth = 1;\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  /* hover */\n  function onMouseMove(e) {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = CANVAS_WIDTH / rect.width;\n    const scaleY = CANVAS_HEIGHT / rect.height;\n    const px = (e.clientX - rect.left) * scaleX;\n    const py = (e.clientY - rect.top) * scaleY;\n    const x = Math.floor(px / CELL_WIDTH);\n    const y = Math.floor(py / CELL_HEIGHT);\n    if (x < 0 || y < 0 || x >= GRID_COLUMNS || y >= GRID_ROWS) {\n      setHover(null);\n      return;\n    }\n    const keyStr = k(x, y);\n    const cell = cellsMapRef.current.get(keyStr);\n    if (!cell) {\n      setHover(null);\n      return;\n    }\n\n    // resolve message: per-cell OR group-level\n    let hoverMsg = cell.message;\n    let hoverAmt = cell.amountCents;\n    if (!hoverMsg || typeof hoverAmt !== \"number\") {\n      const gid = cellToGroupRef.current.get(keyStr);\n      const meta = gid ? groupMetaRef.current.get(gid) : null;\n      if (meta) {\n        hoverMsg = hoverMsg || meta.message;\n        hoverAmt = typeof hoverAmt === \"number\" ? hoverAmt : meta.amountCents;\n      }\n    }\n\n    setHover({\n      clientX: e.clientX,\n      clientY: e.clientY,\n      cell: { ...cell, message: hoverMsg, amountCents: hoverAmt },\n    });\n  }\n  function onMouseLeave() {\n    setHover(null);\n  }\n\n  /* bubble */\n  function showBubbleForCells(cellsArr, message, amountCents) {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    let left = rect.left + rect.width / 2;\n    let top = rect.top + 24;\n\n    const first = cellsArr?.[0];\n    if (first) {\n      left = rect.left + (first.x + 0.5) * (rect.width / GRID_COLUMNS);\n      top = rect.top + (first.y + 0.5) * (rect.height / GRID_ROWS) - 8;\n    }\n\n    setBubble({ left, top, message, amountCents, until: Date.now() + 9000 });\n\n    if (bubbleTimerRef.current) clearTimeout(bubbleTimerRef.current);\n    bubbleTimerRef.current = setTimeout(() => setBubble(null), 5000);\n  }\n\n  const remaining = useMemo(\n    () => Math.max(totalCells - cells.length, 0),\n    [cells.length, totalCells]\n  );\n\n  return (\n    <div className=\"canvas-wrap\">\n      <Style />\n      <div className=\"canvas-shell\">\n        <div className=\"hud\">\n          <div className=\"hud-title\">Million Pixel Reveal</div>\n          <div className=\"hud-sub\">Remaining: {remaining.toLocaleString()}</div>\n        </div>\n\n        <canvas\n          ref={canvasRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          className=\"canvas\"\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        />\n\n        {hover?.cell && (\n          <div\n            className=\"tip\"\n            style={{ left: hover.clientX + 14, top: hover.clientY + 14 }}\n          >\n            <div className=\"tip-row\">\n              <b>Cell</b> ({hover.cell.x},{hover.cell.y})\n            </div>\n            {typeof hover.cell.amountCents === \"number\" && (\n              <div className=\"tip-row\">\n                <b>Amount</b> ${(hover.cell.amountCents / 100).toFixed(2)}\n              </div>\n            )}\n            {hover.cell.message && (\n              <div className=\"tip-row msg\">“{hover.cell.message}”</div>\n            )}\n          </div>\n        )}\n\n        {bubble && (\n          <div\n            className=\"bubble\"\n            style={{ left: bubble.left, top: bubble.top }}\n          >\n            {typeof bubble.amountCents === \"number\" && (\n              <div className=\"bubble-amt\">\n                ${(bubble.amountCents / 100).toFixed(2)}\n              </div>\n            )}\n            {bubble.message && (\n              <div className=\"bubble-msg\">“{bubble.message}”</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/* styles */\nfunction Style() {\n  return (\n    <style>{`\n:root{\n  --bg: #0b1220;\n  --line: #334155;\n  --text: #e2e8f0;\n  --muted: #94a3b8;\n  --hud-bg: rgba(2,6,23,.7);\n}\n.canvas-wrap{\n  min-height: 100vh;\n  background: radial-gradient(1000px 600px at 20% -10%, #19324b 0%, transparent 40%),\n              radial-gradient(800px 500px at 100% 0%, #1b2d24 0%, transparent 35%),\n              var(--bg);\n  display: flex; justify-content: center; align-items: flex-start;\n  padding: 24px 16px 64px;\n}\n@media (min-height: 820px){ .canvas-wrap{ align-items: center; } }\n.canvas-shell{ width: min(100%, 1500px); position: relative; }\n.canvas{\n  display: block; width: 100%; height: auto; margin: 12px auto 0;\n  border: 2px solid var(--line); border-radius: 14px;\n  box-shadow: 0 14px 40px rgba(0,0,0,.35), 0 2px 10px rgba(0,0,0,.25);\n  background: #0e1624;\n}\n.hud{\n  position: absolute; top: 14px; left: 14px; z-index: 2;\n  background: var(--hud-bg); color: var(--text);\n  border: 1px solid rgba(148,163,184,.35);\n  border-radius: 8px; padding: 10px 12px;\n  backdrop-filter: blur(6px); -webkit-backdrop-filter: blur(6px);\n}\n.hud-title{ font-weight: 800; font-size: 14px; line-height: 1.1; }\n.hud-sub{ color: var(--muted); font-size: 12px; margin-top: 2px; }\n.tip{\n  position: fixed; z-index: 10; max-width: 320px;\n  background: rgba(15,23,42,.95); color: var(--text);\n  border: 1px solid rgba(51,65,85,.9); border-radius: 10px; padding: 10px 12px;\n  box-shadow: 0 10px 30px rgba(0,0,0,.35); pointer-events: none; font-size: 13px;\n}\n.tip-row{ margin: 2px 0; }\n.tip-row.msg{ color: var(--muted); font-style: italic; }\n.bubble{\n  position: fixed; z-index: 11;\n  transform: translate(-50%, -100%);\n  background: rgba(2,6,23,.92); border: 1px solid rgba(51,65,85,.9);\n  color: var(--text); border-radius: 12px; padding: 10px 12px;\n  box-shadow: 0 12px 36px rgba(0,0,0,.45);\n  animation: bubble-in .2s ease-out, bubble-out .25s ease-in 4.75s forwards;\n  max-width: min(70vw, 420px);\n}\n.bubble-amt{ font-weight: 800; margin-bottom: 2px; }\n.bubble-msg{ color: var(--muted); font-style: italic; }\n@keyframes bubble-in { from{ opacity: 0; transform: translate(-50%,-90%) scale(.98);} to{opacity:1; transform: translate(-50%,-100%) scale(1);} }\n@keyframes bubble-out { to{ opacity: 0; transform: translate(-50%,-100%) scale(.98);} }\n    `}</style>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}