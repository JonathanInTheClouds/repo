{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandowdell/Workstation/React/million-pixel-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport imageSrc from \"./booker-t-washington.jpg\"; // Place 1080p image here\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GRID_COLUMNS = 100; // Width divisions\nconst GRID_ROWS = 100; // Height divisions\nconst CANVAS_WIDTH = 1920;\nconst CANVAS_HEIGHT = 1080;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [mockClaims, setMockClaims] = useState(generateMockClaims());\n  useEffect(() => {\n    drawCanvas();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mockClaims, hoveredCell]);\n  const drawCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      drawGrid(ctx);\n      drawClaims(ctx);\n      if (hoveredCell) {\n        highlightHoveredCell(ctx, hoveredCell);\n      }\n    };\n  };\n  const drawGrid = ctx => {\n    ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n  };\n  const drawClaims = ctx => {\n    mockClaims.forEach(({\n      x,\n      y\n    }) => {\n      ctx.fillStyle = \"rgba(218,165,32,0.5)\"; // gold color for respect\n      ctx.fillRect(x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    });\n  };\n  const highlightHoveredCell = (ctx, cell) => {\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.15)\";\n    ctx.fillRect(cell.x * CELL_WIDTH, cell.y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n  };\n  const handleMouseMove = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = Math.floor((e.clientX - rect.left) / CELL_WIDTH);\n    const y = Math.floor((e.clientY - rect.top) / CELL_HEIGHT);\n    setHoveredCell({\n      x,\n      y\n    });\n    setMousePosition({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n  const handleClick = () => {\n    if (hoveredCell) {\n      const isClaimed = mockClaims.some(cell => cell.x === hoveredCell.x && cell.y === hoveredCell.y);\n      alert(`Cell (${hoveredCell.x}, ${hoveredCell.y}) is ${isClaimed ? \"CLAIMED\" : \"AVAILABLE\"}`);\n    }\n  };\n  const getClaimInfo = cell => {\n    return mockClaims.find(claim => claim.x === cell.x && claim.y === cell.y);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Million Pixel Booker T. Washington\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        display: \"inline-block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        onMouseMove: handleMouseMove,\n        onClick: handleClick,\n        style: {\n          border: \"1px solid black\",\n          maxWidth: \"100%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), hoveredCell && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: mousePosition.y + 10,\n          left: mousePosition.x + 10,\n          backgroundColor: \"white\",\n          border: \"1px solid black\",\n          padding: \"5px\",\n          pointerEvents: \"none\",\n          maxWidth: \"200px\"\n        },\n        children: (() => {\n          const claim = getClaimInfo(hoveredCell);\n          if (claim) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Claimed by:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this), \" \", claim.name || \"Anonymous\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), claim.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: [\"\\\"\", claim.message, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Cell: (\", hoveredCell.x, \", \", hoveredCell.y, \") - Available\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this);\n          }\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"txBbngkIdHtFXSMEKLQrDLakdPU=\");\n_c = App;\nfunction generateMockClaims() {\n  const claims = [];\n  for (let i = 0; i < 300; i++) {\n    claims.push({\n      x: Math.floor(Math.random() * GRID_COLUMNS),\n      y: Math.floor(Math.random() * GRID_ROWS),\n      name: Math.random() > 0.5 ? `Donor ${i}` : null,\n      message: Math.random() > 0.7 ? \"Supporting the legacy!\" : null\n    });\n  }\n  return claims;\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","imageSrc","jsxDEV","_jsxDEV","Fragment","_Fragment","GRID_COLUMNS","GRID_ROWS","CANVAS_WIDTH","CANVAS_HEIGHT","CELL_WIDTH","CELL_HEIGHT","App","_s","canvasRef","hoveredCell","setHoveredCell","mousePosition","setMousePosition","x","y","mockClaims","setMockClaims","generateMockClaims","drawCanvas","canvas","current","ctx","getContext","img","Image","src","onload","clearRect","drawImage","drawGrid","drawClaims","highlightHoveredCell","strokeStyle","i","beginPath","moveTo","lineTo","stroke","j","forEach","fillStyle","fillRect","cell","handleMouseMove","e","rect","getBoundingClientRect","Math","floor","clientX","left","clientY","top","handleClick","isClaimed","some","alert","getClaimInfo","find","claim","style","textAlign","marginTop","position","children","fileName","_jsxFileName","lineNumber","columnNumber","display","ref","width","height","onMouseMove","onClick","border","maxWidth","backgroundColor","padding","pointerEvents","name","message","_c","claims","push","random","$RefreshReg$"],"sources":["/Users/jonathandowdell/Workstation/React/million-pixel-app/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport imageSrc from \"./booker-t-washington.jpg\"; // Place 1080p image here\n\nconst GRID_COLUMNS = 100; // Width divisions\nconst GRID_ROWS = 100; // Height divisions\nconst CANVAS_WIDTH = 1920;\nconst CANVAS_HEIGHT = 1080;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [mockClaims, setMockClaims] = useState(generateMockClaims());\n\n  useEffect(() => {\n    drawCanvas();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mockClaims, hoveredCell]);\n\n  const drawCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      drawGrid(ctx);\n      drawClaims(ctx);\n      if (hoveredCell) {\n        highlightHoveredCell(ctx, hoveredCell);\n      }\n    };\n  };\n\n  const drawGrid = (ctx) => {\n    ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n  };\n\n  const drawClaims = (ctx) => {\n    mockClaims.forEach(({ x, y }) => {\n      ctx.fillStyle = \"rgba(218,165,32,0.5)\"; // gold color for respect\n      ctx.fillRect(x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    });\n  };\n\n  const highlightHoveredCell = (ctx, cell) => {\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.15)\";\n    ctx.fillRect(\n      cell.x * CELL_WIDTH,\n      cell.y * CELL_HEIGHT,\n      CELL_WIDTH,\n      CELL_HEIGHT\n    );\n  };\n\n  const handleMouseMove = (e) => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = Math.floor((e.clientX - rect.left) / CELL_WIDTH);\n    const y = Math.floor((e.clientY - rect.top) / CELL_HEIGHT);\n    setHoveredCell({ x, y });\n    setMousePosition({ x: e.clientX - rect.left, y: e.clientY - rect.top });\n  };\n\n  const handleClick = () => {\n    if (hoveredCell) {\n      const isClaimed = mockClaims.some(\n        (cell) => cell.x === hoveredCell.x && cell.y === hoveredCell.y\n      );\n      alert(\n        `Cell (${hoveredCell.x}, ${hoveredCell.y}) is ${\n          isClaimed ? \"CLAIMED\" : \"AVAILABLE\"\n        }`\n      );\n    }\n  };\n\n  const getClaimInfo = (cell) => {\n    return mockClaims.find((claim) => claim.x === cell.x && claim.y === cell.y);\n  };\n\n  return (\n    <div\n      style={{ textAlign: \"center\", marginTop: \"20px\", position: \"relative\" }}\n    >\n      <h1>Million Pixel Booker T. Washington</h1>\n      <div style={{ position: \"relative\", display: \"inline-block\" }}>\n        <canvas\n          ref={canvasRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          onMouseMove={handleMouseMove}\n          onClick={handleClick}\n          style={{\n            border: \"1px solid black\",\n            maxWidth: \"100%\",\n            height: \"auto\",\n          }}\n        />\n        {hoveredCell && (\n          <div\n            style={{\n              position: \"absolute\",\n              top: mousePosition.y + 10,\n              left: mousePosition.x + 10,\n              backgroundColor: \"white\",\n              border: \"1px solid black\",\n              padding: \"5px\",\n              pointerEvents: \"none\",\n              maxWidth: \"200px\",\n            }}\n          >\n            {(() => {\n              const claim = getClaimInfo(hoveredCell);\n              if (claim) {\n                return (\n                  <>\n                    <div>\n                      <strong>Claimed by:</strong> {claim.name || \"Anonymous\"}\n                    </div>\n                    {claim.message && (\n                      <div>\n                        <em>\"{claim.message}\"</em>\n                      </div>\n                    )}\n                  </>\n                );\n              } else {\n                return (\n                  <div>\n                    Cell: ({hoveredCell.x}, {hoveredCell.y}) - Available\n                  </div>\n                );\n              }\n            })()}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction generateMockClaims() {\n  const claims = [];\n  for (let i = 0; i < 300; i++) {\n    claims.push({\n      x: Math.floor(Math.random() * GRID_COLUMNS),\n      y: Math.floor(Math.random() * GRID_ROWS),\n      name: Math.random() > 0.5 ? `Donor ${i}` : null,\n      message: Math.random() > 0.7 ? \"Supporting the legacy!\" : null,\n    });\n  }\n  return claims;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}