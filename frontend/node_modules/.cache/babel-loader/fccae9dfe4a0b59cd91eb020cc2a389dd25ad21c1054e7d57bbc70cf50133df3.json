{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandowdell/Workstation/React/million-pixel-app/src/pages/SimulatePage.js\",\n  _import$meta,\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || ((_import$meta = import.meta) === null || _import$meta === void 0 ? void 0 : _import$meta.env) && import.meta.env.VITE_API_BASE || \"http://localhost:3001\";\nasync function postSim(batches, staggerMs = 0) {\n  const res = await fetch(`${API_BASE}/simulate`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      batches,\n      staggerMs,\n      messagePrefix: \"Sim \"\n    })\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.error || \"simulate failed\");\n  return data;\n}\nexport default function SimulatePage() {\n  _s();\n  const [staggerMs, setStaggerMs] = useState(0);\n  const [lastResult, setLastResult] = useState(null);\n  const [busy, setBusy] = useState(false);\n  async function run(batches) {\n    try {\n      setBusy(true);\n      const res = await postSim(batches, Number(staggerMs) || 0);\n      setLastResult(res);\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setBusy(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 720,\n      margin: \"24px auto\",\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Simulator (dev)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: 13,\n        opacity: 0.8,\n        marginBottom: 12\n      },\n      children: [\"Sends fake \\u201Cpurchases\\u201D through the same allocation pipeline and Socket.IO broadcast. Requires \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"ENABLE_SIMULATOR=1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 39\n      }, this), \" on the backend.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 12\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Stagger (ms between events)\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          step: \"10\",\n          value: staggerMs,\n          onChange: e => setStaggerMs(e.target.value),\n          style: {\n            marginLeft: 8,\n            padding: 6,\n            borderRadius: 8,\n            border: \"1px solid #334155\",\n            width: 120\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gap: 8,\n        gridTemplateColumns: \"repeat(2, minmax(0, 1fr))\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: busy,\n        onClick: () => run([{\n          count: 100,\n          amountCents: 2500\n        }]),\n        style: btn,\n        children: \"100 \\xD7 $25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: busy,\n        onClick: () => run([{\n          count: 100,\n          amountCents: 5000\n        }]),\n        style: btn,\n        children: \"100 \\xD7 $50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: busy,\n        onClick: () => run([{\n          count: 100,\n          amountCents: 10000\n        }]),\n        style: btn,\n        children: \"100 \\xD7 $100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: busy,\n        onClick: () => run([{\n          count: 100,\n          amountCents: 2500\n        }, {\n          count: 100,\n          amountCents: 5000\n        }, {\n          count: 100,\n          amountCents: 10000\n        }]),\n        style: btn,\n        children: \"100 \\xD7 ($25 + $50 + $100)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), lastResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16,\n        padding: 12,\n        border: \"1px solid #334155\",\n        borderRadius: 10,\n        background: \"rgba(15,23,42,0.35)\",\n        color: \"#e2e8f0\",\n        fontSize: 14\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Events: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: lastResult.events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Cells allocated: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: lastResult.cells\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(SimulatePage, \"y1xysGlK9suWXbQMRzs8SM4rO6E=\");\n_c = SimulatePage;\nconst btn = {\n  padding: \"10px 14px\",\n  borderRadius: 10,\n  background: \"#1f2937\",\n  color: \"#e2e8f0\",\n  border: \"1px solid #334155\",\n  cursor: \"pointer\"\n};\nvar _c;\n$RefreshReg$(_c, \"SimulatePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","_import$meta","import","meta","VITE_API_BASE","postSim","batches","staggerMs","res","fetch","method","headers","body","JSON","stringify","messagePrefix","data","json","ok","Error","error","SimulatePage","_s","setStaggerMs","lastResult","setLastResult","busy","setBusy","run","Number","e","alert","message","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","opacity","marginBottom","type","min","step","value","onChange","target","marginLeft","borderRadius","border","width","display","gap","gridTemplateColumns","disabled","onClick","count","amountCents","btn","marginTop","background","color","events","cells","_c","cursor","$RefreshReg$"],"sources":["/Users/jonathandowdell/Workstation/React/million-pixel-app/src/pages/SimulatePage.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst API_BASE =\n  process.env.REACT_APP_API_BASE ||\n  (import.meta?.env && import.meta.env.VITE_API_BASE) ||\n  \"http://localhost:3001\";\n\nasync function postSim(batches, staggerMs = 0) {\n  const res = await fetch(`${API_BASE}/simulate`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ batches, staggerMs, messagePrefix: \"Sim \" }),\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.error || \"simulate failed\");\n  return data;\n}\n\nexport default function SimulatePage() {\n  const [staggerMs, setStaggerMs] = useState(0);\n  const [lastResult, setLastResult] = useState(null);\n  const [busy, setBusy] = useState(false);\n\n  async function run(batches) {\n    try {\n      setBusy(true);\n      const res = await postSim(batches, Number(staggerMs) || 0);\n      setLastResult(res);\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setBusy(false);\n    }\n  }\n\n  return (\n    <div style={{ maxWidth: 720, margin: \"24px auto\", padding: 16 }}>\n      <h2>Simulator (dev)</h2>\n      <div style={{ fontSize: 13, opacity: 0.8, marginBottom: 12 }}>\n        Sends fake “purchases” through the same allocation pipeline and\n        Socket.IO broadcast. Requires <code>ENABLE_SIMULATOR=1</code> on the\n        backend.\n      </div>\n\n      <div style={{ marginBottom: 12 }}>\n        <label>\n          Stagger (ms between events){\" \"}\n          <input\n            type=\"number\"\n            min=\"0\"\n            step=\"10\"\n            value={staggerMs}\n            onChange={(e) => setStaggerMs(e.target.value)}\n            style={{\n              marginLeft: 8,\n              padding: 6,\n              borderRadius: 8,\n              border: \"1px solid #334155\",\n              width: 120,\n            }}\n          />\n        </label>\n      </div>\n\n      <div\n        style={{\n          display: \"grid\",\n          gap: 8,\n          gridTemplateColumns: \"repeat(2, minmax(0, 1fr))\",\n        }}\n      >\n        <button\n          disabled={busy}\n          onClick={() => run([{ count: 100, amountCents: 2500 }])}\n          style={btn}\n        >\n          100 × $25\n        </button>\n        <button\n          disabled={busy}\n          onClick={() => run([{ count: 100, amountCents: 5000 }])}\n          style={btn}\n        >\n          100 × $50\n        </button>\n        <button\n          disabled={busy}\n          onClick={() => run([{ count: 100, amountCents: 10000 }])}\n          style={btn}\n        >\n          100 × $100\n        </button>\n        <button\n          disabled={busy}\n          onClick={() =>\n            run([\n              { count: 100, amountCents: 2500 },\n              { count: 100, amountCents: 5000 },\n              { count: 100, amountCents: 10000 },\n            ])\n          }\n          style={btn}\n        >\n          100 × ($25 + $50 + $100)\n        </button>\n      </div>\n\n      {lastResult && (\n        <div\n          style={{\n            marginTop: 16,\n            padding: 12,\n            border: \"1px solid #334155\",\n            borderRadius: 10,\n            background: \"rgba(15,23,42,0.35)\",\n            color: \"#e2e8f0\",\n            fontSize: 14,\n          }}\n        >\n          <div>\n            Events: <b>{lastResult.events}</b>\n          </div>\n          <div>\n            Cells allocated: <b>{lastResult.cells}</b>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst btn = {\n  padding: \"10px 14px\",\n  borderRadius: 10,\n  background: \"#1f2937\",\n  color: \"#e2e8f0\",\n  border: \"1px solid #334155\",\n  cursor: \"pointer\",\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}