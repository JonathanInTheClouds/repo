{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandowdell/Workstation/React/million-pixel-app/src/pages/CanvasPage.jsx\",\n  _import$meta,\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo } from \"react\";\nimport { io } from \"socket.io-client\";\nimport imageSrc from \"../Banner Hi Rez.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || ((_import$meta = import.meta) === null || _import$meta === void 0 ? void 0 : _import$meta.env) && import.meta.env.VITE_API_BASE || \"http://localhost:3001\";\nconst CANVAS_WIDTH = 1495;\nconst CANVAS_HEIGHT = 1024;\nconst GRID_COLUMNS = 200;\nconst GRID_ROWS = 200;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\n// highlight lifetime in ms\nconst HIGHLIGHT_MS = 12000; // if you used Option A earlier; adjust as desired\n\nexport default function CanvasPage() {\n  _s();\n  const canvasRef = useRef(null);\n  const wrapperRef = useRef(null);\n  const imgRef = useRef(null);\n  const rafRef = useRef(0);\n  const [imgReady, setImgReady] = useState(false);\n  const [revealedCells, setRevealedCells] = useState([]);\n  const [highlights, setHighlights] = useState([]); // { id, cells, centroid, message, amountCents, t0 }\n\n  // hover state\n  const [hoverCell, setHoverCell] = useState(null); // {x,y} or null\n  const [hoverPos, setHoverPos] = useState(null); // {left, top} relative to wrapper\n  const [hoverInfo, setHoverInfo] = useState(null); // server response\n  const infoCacheRef = useRef(new Map()); // \"x,y\" -> info\n\n  const revealedKeySet = useMemo(() => {\n    const s = new Set();\n    for (const c of revealedCells) s.add(`${c.x},${c.y}`);\n    return s;\n  }, [revealedCells]);\n\n  // load image once\n  useEffect(() => {\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      imgRef.current = img;\n      setImgReady(true);\n    };\n    img.onerror = () => console.error(\"Failed to load canvas image\");\n  }, []);\n\n  // sockets + bootstrap\n  useEffect(() => {\n    const socket = io(API_BASE, {\n      transports: [\"websocket\"]\n    });\n    const merge = incoming => setRevealedCells(prev => {\n      const seen = new Set(prev.map(c => `${c.x},${c.y}`));\n      const out = [...prev];\n      for (const c of incoming) if (!seen.has(`${c.x},${c.y}`)) out.push(c);\n      return out;\n    });\n    fetch(`${API_BASE}/state`).then(r => r.json()).then(({\n      cells\n    }) => merge(cells)).catch(() => {});\n    socket.on(\"bootstrap\", ({\n      cells\n    }) => merge(cells));\n    socket.on(\"cells_revealed\", ({\n      cells,\n      message,\n      amountCents,\n      centroid,\n      cellsCount\n    }) => {\n      merge(cells || []);\n      const id = Math.random().toString(36).slice(2);\n      setHighlights(h => [...h, {\n        id,\n        cells: cells || [],\n        centroid: centroid || null,\n        message: message || \"\",\n        amountCents: amountCents !== null && amountCents !== void 0 ? amountCents : 0,\n        t0: performance.now()\n      }]);\n    });\n    return () => {\n      socket.off(\"bootstrap\");\n      socket.off(\"cells_revealed\");\n      socket.disconnect();\n    };\n  }, []);\n\n  // animation loop\n  useEffect(() => {\n    const step = () => {\n      draw();\n      rafRef.current = requestAnimationFrame(step);\n    };\n    rafRef.current = requestAnimationFrame(step);\n    return () => cancelAnimationFrame(rafRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imgReady, revealedCells, highlights]);\n  const totalCells = GRID_COLUMNS * GRID_ROWS;\n  const remaining = Math.max(totalCells - revealedCells.length, 0);\n  function draw() {\n    const canvas = canvasRef.current;\n    const img = imgRef.current;\n    if (!canvas || !img) return;\n    const ctx = canvas.getContext(\"2d\");\n\n    // base grayscale\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    const imageData = ctx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    const data = imageData.data;\n    for (let i = 0; i < data.length; i += 4) {\n      const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n      data[i] = avg;\n      data[i + 1] = avg;\n      data[i + 2] = avg;\n    }\n    ctx.putImageData(imageData, 0, 0);\n\n    // paint colored revealed cells\n    for (let k = 0; k < revealedCells.length; k++) {\n      const {\n        x,\n        y\n      } = revealedCells[k];\n      ctx.drawImage(img, x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT, x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    }\n\n    // pulse overlay for highlights\n    const now = performance.now();\n    const active = [];\n    for (const h of highlights) {\n      const age = now - h.t0;\n      if (age < HIGHLIGHT_MS) {\n        active.push(h);\n        const t = age / HIGHLIGHT_MS;\n        const pulse = Math.sin(Math.PI * t);\n        const alpha = 0.35 * pulse;\n        if (h.cells && h.cells.length) {\n          ctx.save();\n          ctx.globalAlpha = alpha;\n          ctx.fillStyle = \"#22c55e\";\n          for (const c of h.cells) {\n            ctx.fillRect(c.x * CELL_WIDTH, c.y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n          }\n          ctx.restore();\n        }\n        if (h.centroid) {\n          var _h$cells;\n          const cx = (h.centroid.x + 0.5) * CELL_WIDTH;\n          const cy = (h.centroid.y + 0.5) * CELL_HEIGHT;\n          ctx.save();\n          ctx.lineWidth = 3;\n          ctx.strokeStyle = `rgba(34,197,94,${0.6 * pulse})`;\n          const radius = 14 + 6 * pulse;\n          ctx.beginPath();\n          ctx.arc(cx, cy, radius, 0, Math.PI * 2);\n          ctx.stroke();\n          ctx.restore();\n          const cellsCount = ((_h$cells = h.cells) === null || _h$cells === void 0 ? void 0 : _h$cells.length) || 0;\n          const amount = h.amountCents ? `$${(h.amountCents / 100).toFixed(2)}` : \"\";\n          const text = h.message ? `${h.message}${cellsCount ? ` (+${cellsCount} ${cellsCount === 1 ? \"cell\" : \"cells\"})` : \"\"}` : cellsCount ? `+${cellsCount} ${cellsCount === 1 ? \"cell\" : \"cells\"}` : amount || \"Thanks!\";\n          drawBubble(ctx, cx, cy - 28, text, 8, 0.92);\n        }\n      }\n    }\n    if (active.length !== highlights.length) setHighlights(active);\n\n    // grid overlay\n    ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n\n    // header\n    ctx.save();\n    ctx.fillStyle = \"rgba(15,23,42,0.75)\";\n    ctx.fillRect(10, 10, 220, 44);\n    ctx.fillStyle = \"#e2e8f0\";\n    ctx.font = \"bold 16px system-ui, -apple-system, Segoe UI, Roboto\";\n    ctx.fillText(\"Million Pixel Reveal\", 20, 32);\n    ctx.font = \"12px system-ui, -apple-system, Segoe UI, Roboto\";\n    ctx.fillText(`Remaining: ${remaining}`, 20, 48);\n    ctx.restore();\n  }\n  function drawBubble(ctx, x, y, text, pad = 8, alpha = 0.92, center = false) {\n    ctx.save();\n    ctx.font = \"12px system-ui, -apple-system, Segoe UI, Roboto\";\n    const maxWidth = 420;\n    const words = String(text).slice(0, 120).split(/\\s+/);\n    const lines = [];\n    let line = \"\";\n    for (const w of words) {\n      const test = line ? line + \" \" + w : w;\n      if (ctx.measureText(test).width > maxWidth) {\n        lines.push(line);\n        line = w;\n      } else line = test;\n    }\n    if (line) lines.push(line);\n    const lineHeight = 16;\n    const w = Math.min(Math.max(...lines.map(l => ctx.measureText(l).width)) + pad * 2, maxWidth + pad * 2) || 80;\n    const h = lines.length * lineHeight + pad * 2;\n    const left = center ? x - w / 2 : x - w / 2;\n    const top = y - h;\n    ctx.globalAlpha = alpha;\n    ctx.fillStyle = \"rgba(15,23,42,0.96)\";\n    roundRect(ctx, left, top, w, h, 10);\n    ctx.fill();\n    ctx.globalAlpha = 1;\n    ctx.strokeStyle = \"rgba(51,65,85,1)\";\n    ctx.lineWidth = 1;\n    roundRect(ctx, left, top, w, h, 10);\n    ctx.stroke();\n    ctx.fillStyle = \"#e2e8f0\";\n    for (let i = 0; i < lines.length; i++) {\n      ctx.fillText(lines[i], left + pad, top + pad + (i + 1) * lineHeight - 4);\n    }\n    ctx.restore();\n  }\n  function roundRect(ctx, x, y, w, h, r) {\n    const rr = Math.min(r, w / 2, h / 2);\n    ctx.beginPath();\n    ctx.moveTo(x + rr, y);\n    ctx.arcTo(x + w, y, x + w, y + h, rr);\n    ctx.arcTo(x + w, y + h, x, y + h, rr);\n    ctx.arcTo(x, y + h, x, y, rr);\n    ctx.arcTo(x, y, x + w, y, rr);\n    ctx.closePath();\n  }\n\n  // --------- hover handlers ----------\n  function onMouseMove(e) {\n    const canvas = canvasRef.current;\n    const wrapper = wrapperRef.current;\n    if (!canvas || !wrapper) return;\n    const rect = canvas.getBoundingClientRect();\n    const wRect = wrapper.getBoundingClientRect();\n\n    // scale for CSS sizing\n    const scaleX = CANVAS_WIDTH / rect.width;\n    const scaleY = CANVAS_HEIGHT / rect.height;\n    const px = (e.clientX - rect.left) * scaleX;\n    const py = (e.clientY - rect.top) * scaleY;\n    const x = Math.floor(px / CELL_WIDTH);\n    const y = Math.floor(py / CELL_HEIGHT);\n    if (x < 0 || y < 0 || x >= GRID_COLUMNS || y >= GRID_ROWS) {\n      setHoverCell(null);\n      setHoverInfo(null);\n      return;\n    }\n\n    // tooltip pos relative to wrapper\n    const left = e.clientX - wRect.left + 12;\n    const top = e.clientY - wRect.top + 12;\n    setHoverPos({\n      left,\n      top\n    });\n    const key = `${x},${y}`;\n    setHoverCell({\n      x,\n      y\n    });\n\n    // only fetch if revealed\n    if (!revealedKeySet.has(key)) {\n      setHoverInfo(null);\n      return;\n    }\n    const cached = infoCacheRef.current.get(key);\n    if (cached) {\n      setHoverInfo(cached);\n      return;\n    }\n\n    // debounce-ish: schedule microtask fetch; avoid spamming\n    // (simple guard: only fetch latest hovered cell)\n    const currentKey = key;\n    window.clearTimeout(onMouseMove._t);\n    onMouseMove._t = window.setTimeout(async () => {\n      if (`${hoverCell === null || hoverCell === void 0 ? void 0 : hoverCell.x},${hoverCell === null || hoverCell === void 0 ? void 0 : hoverCell.y}` !== currentKey) return;\n      try {\n        const res = await fetch(`${API_BASE}/cell/${x}/${y}`);\n        const info = await res.json();\n        infoCacheRef.current.set(currentKey, info);\n        if (`${hoverCell === null || hoverCell === void 0 ? void 0 : hoverCell.x},${hoverCell === null || hoverCell === void 0 ? void 0 : hoverCell.y}` === currentKey) {\n          setHoverInfo(info);\n        }\n      } catch {}\n    }, 120);\n  }\n  function onMouseLeave() {\n    setHoverCell(null);\n    setHoverInfo(null);\n  }\n  function formatUsd(cents) {\n    if (cents == null) return \"\";\n    return `$${(cents / 100).toFixed(2)}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    style: {\n      position: \"relative\",\n      display: \"grid\",\n      placeItems: \"center\",\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      onMouseMove: onMouseMove,\n      onMouseLeave: onMouseLeave,\n      style: {\n        border: \"2px solid #334155\",\n        borderRadius: 12,\n        boxShadow: \"0 4px 12px rgba(0,0,0,0.5)\",\n        maxWidth: \"100%\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), hoverCell && hoverPos && (hoverInfo === null || hoverInfo === void 0 ? void 0 : hoverInfo.exists) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: hoverPos.left,\n        top: hoverPos.top,\n        transform: \"translate(0, 0)\",\n        background: \"rgba(15,23,42,0.96)\",\n        color: \"#e2e8f0\",\n        border: \"1px solid #334155\",\n        borderRadius: 10,\n        padding: \"8px 10px\",\n        fontSize: 12,\n        maxWidth: 280,\n        pointerEvents: \"none\",\n        boxShadow: \"0 6px 24px rgba(0,0,0,0.35)\",\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          opacity: 0.85,\n          marginBottom: 4\n        },\n        children: [\"Cell: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: hoverCell.x\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 19\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: hoverCell.y\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), hoverInfo.amountCents != null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Amount: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: formatUsd(hoverInfo.amountCents)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 13\n      }, this), hoverInfo.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 4,\n          opacity: 0.95\n        },\n        children: [\"\\u201C\", String(hoverInfo.message).slice(0, 140), \"\\u201D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }, this), hoverInfo.revealedAt && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 4,\n          opacity: 0.7\n        },\n        children: [\"Revealed: \", new Date(hoverInfo.revealedAt + \"Z\").toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n}\n_s(CanvasPage, \"M4v1W+enOFMwLdn0rDrEOdNMVoc=\");\n_c = CanvasPage;\nvar _c;\n$RefreshReg$(_c, \"CanvasPage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","io","imageSrc","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","_import$meta","import","meta","VITE_API_BASE","CANVAS_WIDTH","CANVAS_HEIGHT","GRID_COLUMNS","GRID_ROWS","CELL_WIDTH","CELL_HEIGHT","HIGHLIGHT_MS","CanvasPage","_s","canvasRef","wrapperRef","imgRef","rafRef","imgReady","setImgReady","revealedCells","setRevealedCells","highlights","setHighlights","hoverCell","setHoverCell","hoverPos","setHoverPos","hoverInfo","setHoverInfo","infoCacheRef","Map","revealedKeySet","s","Set","c","add","x","y","img","Image","src","onload","current","onerror","console","error","socket","transports","merge","incoming","prev","seen","map","out","has","push","fetch","then","r","json","cells","catch","on","message","amountCents","centroid","cellsCount","id","Math","random","toString","slice","h","t0","performance","now","off","disconnect","step","draw","requestAnimationFrame","cancelAnimationFrame","totalCells","remaining","max","length","canvas","ctx","getContext","clearRect","drawImage","imageData","getImageData","data","i","avg","putImageData","k","active","age","t","pulse","sin","PI","alpha","save","globalAlpha","fillStyle","fillRect","restore","_h$cells","cx","cy","lineWidth","strokeStyle","radius","beginPath","arc","stroke","amount","toFixed","text","drawBubble","moveTo","lineTo","j","font","fillText","pad","center","maxWidth","words","String","split","lines","line","w","test","measureText","width","lineHeight","min","l","left","top","roundRect","fill","rr","arcTo","closePath","onMouseMove","e","wrapper","rect","getBoundingClientRect","wRect","scaleX","scaleY","height","px","clientX","py","clientY","floor","key","cached","get","currentKey","window","clearTimeout","_t","setTimeout","res","info","set","onMouseLeave","formatUsd","cents","ref","style","position","display","placeItems","padding","children","border","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","exists","transform","background","color","fontSize","pointerEvents","zIndex","opacity","marginBottom","marginTop","revealedAt","Date","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/jonathandowdell/Workstation/React/million-pixel-app/src/pages/CanvasPage.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from \"react\";\nimport { io } from \"socket.io-client\";\nimport imageSrc from \"../Banner Hi Rez.png\";\n\nconst API_BASE =\n  process.env.REACT_APP_API_BASE ||\n  (import.meta?.env && import.meta.env.VITE_API_BASE) ||\n  \"http://localhost:3001\";\n\nconst CANVAS_WIDTH = 1495;\nconst CANVAS_HEIGHT = 1024;\nconst GRID_COLUMNS = 200;\nconst GRID_ROWS = 200;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\n// highlight lifetime in ms\nconst HIGHLIGHT_MS = 12000; // if you used Option A earlier; adjust as desired\n\nexport default function CanvasPage() {\n  const canvasRef = useRef(null);\n  const wrapperRef = useRef(null);\n  const imgRef = useRef(null);\n  const rafRef = useRef(0);\n\n  const [imgReady, setImgReady] = useState(false);\n  const [revealedCells, setRevealedCells] = useState([]);\n  const [highlights, setHighlights] = useState([]); // { id, cells, centroid, message, amountCents, t0 }\n\n  // hover state\n  const [hoverCell, setHoverCell] = useState(null); // {x,y} or null\n  const [hoverPos, setHoverPos] = useState(null); // {left, top} relative to wrapper\n  const [hoverInfo, setHoverInfo] = useState(null); // server response\n  const infoCacheRef = useRef(new Map()); // \"x,y\" -> info\n\n  const revealedKeySet = useMemo(() => {\n    const s = new Set();\n    for (const c of revealedCells) s.add(`${c.x},${c.y}`);\n    return s;\n  }, [revealedCells]);\n\n  // load image once\n  useEffect(() => {\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      imgRef.current = img;\n      setImgReady(true);\n    };\n    img.onerror = () => console.error(\"Failed to load canvas image\");\n  }, []);\n\n  // sockets + bootstrap\n  useEffect(() => {\n    const socket = io(API_BASE, { transports: [\"websocket\"] });\n\n    const merge = (incoming) =>\n      setRevealedCells((prev) => {\n        const seen = new Set(prev.map((c) => `${c.x},${c.y}`));\n        const out = [...prev];\n        for (const c of incoming) if (!seen.has(`${c.x},${c.y}`)) out.push(c);\n        return out;\n      });\n\n    fetch(`${API_BASE}/state`)\n      .then((r) => r.json())\n      .then(({ cells }) => merge(cells))\n      .catch(() => {});\n\n    socket.on(\"bootstrap\", ({ cells }) => merge(cells));\n    socket.on(\n      \"cells_revealed\",\n      ({ cells, message, amountCents, centroid, cellsCount }) => {\n        merge(cells || []);\n        const id = Math.random().toString(36).slice(2);\n        setHighlights((h) => [\n          ...h,\n          {\n            id,\n            cells: cells || [],\n            centroid: centroid || null,\n            message: message || \"\",\n            amountCents: amountCents ?? 0,\n            t0: performance.now(),\n          },\n        ]);\n      }\n    );\n\n    return () => {\n      socket.off(\"bootstrap\");\n      socket.off(\"cells_revealed\");\n      socket.disconnect();\n    };\n  }, []);\n\n  // animation loop\n  useEffect(() => {\n    const step = () => {\n      draw();\n      rafRef.current = requestAnimationFrame(step);\n    };\n    rafRef.current = requestAnimationFrame(step);\n    return () => cancelAnimationFrame(rafRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imgReady, revealedCells, highlights]);\n\n  const totalCells = GRID_COLUMNS * GRID_ROWS;\n  const remaining = Math.max(totalCells - revealedCells.length, 0);\n\n  function draw() {\n    const canvas = canvasRef.current;\n    const img = imgRef.current;\n    if (!canvas || !img) return;\n    const ctx = canvas.getContext(\"2d\");\n\n    // base grayscale\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    const imageData = ctx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    const data = imageData.data;\n    for (let i = 0; i < data.length; i += 4) {\n      const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n      data[i] = avg;\n      data[i + 1] = avg;\n      data[i + 2] = avg;\n    }\n    ctx.putImageData(imageData, 0, 0);\n\n    // paint colored revealed cells\n    for (let k = 0; k < revealedCells.length; k++) {\n      const { x, y } = revealedCells[k];\n      ctx.drawImage(\n        img,\n        x * CELL_WIDTH,\n        y * CELL_HEIGHT,\n        CELL_WIDTH,\n        CELL_HEIGHT,\n        x * CELL_WIDTH,\n        y * CELL_HEIGHT,\n        CELL_WIDTH,\n        CELL_HEIGHT\n      );\n    }\n\n    // pulse overlay for highlights\n    const now = performance.now();\n    const active = [];\n    for (const h of highlights) {\n      const age = now - h.t0;\n      if (age < HIGHLIGHT_MS) {\n        active.push(h);\n        const t = age / HIGHLIGHT_MS;\n        const pulse = Math.sin(Math.PI * t);\n        const alpha = 0.35 * pulse;\n\n        if (h.cells && h.cells.length) {\n          ctx.save();\n          ctx.globalAlpha = alpha;\n          ctx.fillStyle = \"#22c55e\";\n          for (const c of h.cells) {\n            ctx.fillRect(\n              c.x * CELL_WIDTH,\n              c.y * CELL_HEIGHT,\n              CELL_WIDTH,\n              CELL_HEIGHT\n            );\n          }\n          ctx.restore();\n        }\n\n        if (h.centroid) {\n          const cx = (h.centroid.x + 0.5) * CELL_WIDTH;\n          const cy = (h.centroid.y + 0.5) * CELL_HEIGHT;\n          ctx.save();\n          ctx.lineWidth = 3;\n          ctx.strokeStyle = `rgba(34,197,94,${0.6 * pulse})`;\n          const radius = 14 + 6 * pulse;\n          ctx.beginPath();\n          ctx.arc(cx, cy, radius, 0, Math.PI * 2);\n          ctx.stroke();\n          ctx.restore();\n\n          const cellsCount = h.cells?.length || 0;\n          const amount = h.amountCents\n            ? `$${(h.amountCents / 100).toFixed(2)}`\n            : \"\";\n          const text = h.message\n            ? `${h.message}${\n                cellsCount\n                  ? ` (+${cellsCount} ${cellsCount === 1 ? \"cell\" : \"cells\"})`\n                  : \"\"\n              }`\n            : cellsCount\n            ? `+${cellsCount} ${cellsCount === 1 ? \"cell\" : \"cells\"}`\n            : amount || \"Thanks!\";\n          drawBubble(ctx, cx, cy - 28, text, 8, 0.92);\n        }\n      }\n    }\n    if (active.length !== highlights.length) setHighlights(active);\n\n    // grid overlay\n    ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n\n    // header\n    ctx.save();\n    ctx.fillStyle = \"rgba(15,23,42,0.75)\";\n    ctx.fillRect(10, 10, 220, 44);\n    ctx.fillStyle = \"#e2e8f0\";\n    ctx.font = \"bold 16px system-ui, -apple-system, Segoe UI, Roboto\";\n    ctx.fillText(\"Million Pixel Reveal\", 20, 32);\n    ctx.font = \"12px system-ui, -apple-system, Segoe UI, Roboto\";\n    ctx.fillText(`Remaining: ${remaining}`, 20, 48);\n    ctx.restore();\n  }\n\n  function drawBubble(ctx, x, y, text, pad = 8, alpha = 0.92, center = false) {\n    ctx.save();\n    ctx.font = \"12px system-ui, -apple-system, Segoe UI, Roboto\";\n    const maxWidth = 420;\n    const words = String(text).slice(0, 120).split(/\\s+/);\n    const lines = [];\n    let line = \"\";\n    for (const w of words) {\n      const test = line ? line + \" \" + w : w;\n      if (ctx.measureText(test).width > maxWidth) {\n        lines.push(line);\n        line = w;\n      } else line = test;\n    }\n    if (line) lines.push(line);\n\n    const lineHeight = 16;\n    const w =\n      Math.min(\n        Math.max(...lines.map((l) => ctx.measureText(l).width)) + pad * 2,\n        maxWidth + pad * 2\n      ) || 80;\n    const h = lines.length * lineHeight + pad * 2;\n\n    const left = center ? x - w / 2 : x - w / 2;\n    const top = y - h;\n\n    ctx.globalAlpha = alpha;\n    ctx.fillStyle = \"rgba(15,23,42,0.96)\";\n    roundRect(ctx, left, top, w, h, 10);\n    ctx.fill();\n    ctx.globalAlpha = 1;\n    ctx.strokeStyle = \"rgba(51,65,85,1)\";\n    ctx.lineWidth = 1;\n    roundRect(ctx, left, top, w, h, 10);\n    ctx.stroke();\n\n    ctx.fillStyle = \"#e2e8f0\";\n    for (let i = 0; i < lines.length; i++) {\n      ctx.fillText(lines[i], left + pad, top + pad + (i + 1) * lineHeight - 4);\n    }\n    ctx.restore();\n  }\n\n  function roundRect(ctx, x, y, w, h, r) {\n    const rr = Math.min(r, w / 2, h / 2);\n    ctx.beginPath();\n    ctx.moveTo(x + rr, y);\n    ctx.arcTo(x + w, y, x + w, y + h, rr);\n    ctx.arcTo(x + w, y + h, x, y + h, rr);\n    ctx.arcTo(x, y + h, x, y, rr);\n    ctx.arcTo(x, y, x + w, y, rr);\n    ctx.closePath();\n  }\n\n  // --------- hover handlers ----------\n  function onMouseMove(e) {\n    const canvas = canvasRef.current;\n    const wrapper = wrapperRef.current;\n    if (!canvas || !wrapper) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const wRect = wrapper.getBoundingClientRect();\n\n    // scale for CSS sizing\n    const scaleX = CANVAS_WIDTH / rect.width;\n    const scaleY = CANVAS_HEIGHT / rect.height;\n\n    const px = (e.clientX - rect.left) * scaleX;\n    const py = (e.clientY - rect.top) * scaleY;\n\n    const x = Math.floor(px / CELL_WIDTH);\n    const y = Math.floor(py / CELL_HEIGHT);\n\n    if (x < 0 || y < 0 || x >= GRID_COLUMNS || y >= GRID_ROWS) {\n      setHoverCell(null);\n      setHoverInfo(null);\n      return;\n    }\n\n    // tooltip pos relative to wrapper\n    const left = e.clientX - wRect.left + 12;\n    const top = e.clientY - wRect.top + 12;\n    setHoverPos({ left, top });\n\n    const key = `${x},${y}`;\n    setHoverCell({ x, y });\n\n    // only fetch if revealed\n    if (!revealedKeySet.has(key)) {\n      setHoverInfo(null);\n      return;\n    }\n\n    const cached = infoCacheRef.current.get(key);\n    if (cached) {\n      setHoverInfo(cached);\n      return;\n    }\n\n    // debounce-ish: schedule microtask fetch; avoid spamming\n    // (simple guard: only fetch latest hovered cell)\n    const currentKey = key;\n    window.clearTimeout(onMouseMove._t);\n    onMouseMove._t = window.setTimeout(async () => {\n      if (`${hoverCell?.x},${hoverCell?.y}` !== currentKey) return;\n      try {\n        const res = await fetch(`${API_BASE}/cell/${x}/${y}`);\n        const info = await res.json();\n        infoCacheRef.current.set(currentKey, info);\n        if (`${hoverCell?.x},${hoverCell?.y}` === currentKey) {\n          setHoverInfo(info);\n        }\n      } catch {}\n    }, 120);\n  }\n  function onMouseLeave() {\n    setHoverCell(null);\n    setHoverInfo(null);\n  }\n\n  function formatUsd(cents) {\n    if (cents == null) return \"\";\n    return `$${(cents / 100).toFixed(2)}`;\n  }\n\n  return (\n    <div\n      ref={wrapperRef}\n      style={{\n        position: \"relative\",\n        display: \"grid\",\n        placeItems: \"center\",\n        padding: 20,\n      }}\n    >\n      <canvas\n        ref={canvasRef}\n        width={CANVAS_WIDTH}\n        height={CANVAS_HEIGHT}\n        onMouseMove={onMouseMove}\n        onMouseLeave={onMouseLeave}\n        style={{\n          border: \"2px solid #334155\",\n          borderRadius: 12,\n          boxShadow: \"0 4px 12px rgba(0,0,0,0.5)\",\n          maxWidth: \"100%\",\n          height: \"auto\",\n        }}\n      />\n\n      {/* hover tooltip */}\n      {hoverCell && hoverPos && hoverInfo?.exists && (\n        <div\n          style={{\n            position: \"absolute\",\n            left: hoverPos.left,\n            top: hoverPos.top,\n            transform: \"translate(0, 0)\",\n            background: \"rgba(15,23,42,0.96)\",\n            color: \"#e2e8f0\",\n            border: \"1px solid #334155\",\n            borderRadius: 10,\n            padding: \"8px 10px\",\n            fontSize: 12,\n            maxWidth: 280,\n            pointerEvents: \"none\",\n            boxShadow: \"0 6px 24px rgba(0,0,0,0.35)\",\n            zIndex: 1000,\n          }}\n        >\n          <div style={{ opacity: 0.85, marginBottom: 4 }}>\n            Cell: <b>{hoverCell.x}</b>, <b>{hoverCell.y}</b>\n          </div>\n          {hoverInfo.amountCents != null && (\n            <div>\n              Amount: <b>{formatUsd(hoverInfo.amountCents)}</b>\n            </div>\n          )}\n          {hoverInfo.message && (\n            <div style={{ marginTop: 4, opacity: 0.95 }}>\n              “{String(hoverInfo.message).slice(0, 140)}”\n            </div>\n          )}\n          {hoverInfo.revealedAt && (\n            <div style={{ marginTop: 4, opacity: 0.7 }}>\n              Revealed: {new Date(hoverInfo.revealedAt + \"Z\").toLocaleString()}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACnE,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GACZC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAC7B,EAAAC,YAAA,GAAAC,MAAM,CAACC,IAAI,cAAAF,YAAA,uBAAXA,YAAA,CAAaF,GAAG,KAAIG,MAAM,CAACC,IAAI,CAACJ,GAAG,CAACK,aAAc,IACnD,uBAAuB;AAEzB,MAAMC,YAAY,GAAG,IAAI;AACzB,MAAMC,aAAa,GAAG,IAAI;AAC1B,MAAMC,YAAY,GAAG,GAAG;AACxB,MAAMC,SAAS,GAAG,GAAG;AACrB,MAAMC,UAAU,GAAGJ,YAAY,GAAGE,YAAY;AAC9C,MAAMG,WAAW,GAAGJ,aAAa,GAAGE,SAAS;;AAE7C;AACA,MAAMG,YAAY,GAAG,KAAK,CAAC,CAAC;;AAE5B,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,SAAS,GAAGzB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM0B,UAAU,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM2B,MAAM,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM4B,MAAM,GAAG5B,MAAM,CAAC,CAAC,CAAC;EAExB,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC+B,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElD;EACA,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAMuC,YAAY,GAAGzC,MAAM,CAAC,IAAI0C,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExC,MAAMC,cAAc,GAAGxC,OAAO,CAAC,MAAM;IACnC,MAAMyC,CAAC,GAAG,IAAIC,GAAG,CAAC,CAAC;IACnB,KAAK,MAAMC,CAAC,IAAIf,aAAa,EAAEa,CAAC,CAACG,GAAG,CAAC,GAAGD,CAAC,CAACE,CAAC,IAAIF,CAAC,CAACG,CAAC,EAAE,CAAC;IACrD,OAAOL,CAAC;EACV,CAAC,EAAE,CAACb,aAAa,CAAC,CAAC;;EAEnB;EACA9B,SAAS,CAAC,MAAM;IACd,MAAMiD,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAG/C,QAAQ;IAClB6C,GAAG,CAACG,MAAM,GAAG,MAAM;MACjB1B,MAAM,CAAC2B,OAAO,GAAGJ,GAAG;MACpBpB,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC;IACDoB,GAAG,CAACK,OAAO,GAAG,MAAMC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAxD,SAAS,CAAC,MAAM;IACd,MAAMyD,MAAM,GAAGtD,EAAE,CAACI,QAAQ,EAAE;MAAEmD,UAAU,EAAE,CAAC,WAAW;IAAE,CAAC,CAAC;IAE1D,MAAMC,KAAK,GAAIC,QAAQ,IACrB7B,gBAAgB,CAAE8B,IAAI,IAAK;MACzB,MAAMC,IAAI,GAAG,IAAIlB,GAAG,CAACiB,IAAI,CAACE,GAAG,CAAElB,CAAC,IAAK,GAAGA,CAAC,CAACE,CAAC,IAAIF,CAAC,CAACG,CAAC,EAAE,CAAC,CAAC;MACtD,MAAMgB,GAAG,GAAG,CAAC,GAAGH,IAAI,CAAC;MACrB,KAAK,MAAMhB,CAAC,IAAIe,QAAQ,EAAE,IAAI,CAACE,IAAI,CAACG,GAAG,CAAC,GAAGpB,CAAC,CAACE,CAAC,IAAIF,CAAC,CAACG,CAAC,EAAE,CAAC,EAAEgB,GAAG,CAACE,IAAI,CAACrB,CAAC,CAAC;MACrE,OAAOmB,GAAG;IACZ,CAAC,CAAC;IAEJG,KAAK,CAAC,GAAG5D,QAAQ,QAAQ,CAAC,CACvB6D,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAAC,CAAC;MAAEG;IAAM,CAAC,KAAKZ,KAAK,CAACY,KAAK,CAAC,CAAC,CACjCC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAElBf,MAAM,CAACgB,EAAE,CAAC,WAAW,EAAE,CAAC;MAAEF;IAAM,CAAC,KAAKZ,KAAK,CAACY,KAAK,CAAC,CAAC;IACnDd,MAAM,CAACgB,EAAE,CACP,gBAAgB,EAChB,CAAC;MAAEF,KAAK;MAAEG,OAAO;MAAEC,WAAW;MAAEC,QAAQ;MAAEC;IAAW,CAAC,KAAK;MACzDlB,KAAK,CAACY,KAAK,IAAI,EAAE,CAAC;MAClB,MAAMO,EAAE,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;MAC9CjD,aAAa,CAAEkD,CAAC,IAAK,CACnB,GAAGA,CAAC,EACJ;QACEL,EAAE;QACFP,KAAK,EAAEA,KAAK,IAAI,EAAE;QAClBK,QAAQ,EAAEA,QAAQ,IAAI,IAAI;QAC1BF,OAAO,EAAEA,OAAO,IAAI,EAAE;QACtBC,WAAW,EAAEA,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,CAAC;QAC7BS,EAAE,EAAEC,WAAW,CAACC,GAAG,CAAC;MACtB,CAAC,CACF,CAAC;IACJ,CACF,CAAC;IAED,OAAO,MAAM;MACX7B,MAAM,CAAC8B,GAAG,CAAC,WAAW,CAAC;MACvB9B,MAAM,CAAC8B,GAAG,CAAC,gBAAgB,CAAC;MAC5B9B,MAAM,CAAC+B,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAxF,SAAS,CAAC,MAAM;IACd,MAAMyF,IAAI,GAAGA,CAAA,KAAM;MACjBC,IAAI,CAAC,CAAC;MACN/D,MAAM,CAAC0B,OAAO,GAAGsC,qBAAqB,CAACF,IAAI,CAAC;IAC9C,CAAC;IACD9D,MAAM,CAAC0B,OAAO,GAAGsC,qBAAqB,CAACF,IAAI,CAAC;IAC5C,OAAO,MAAMG,oBAAoB,CAACjE,MAAM,CAAC0B,OAAO,CAAC;IACjD;EACF,CAAC,EAAE,CAACzB,QAAQ,EAAEE,aAAa,EAAEE,UAAU,CAAC,CAAC;EAEzC,MAAM6D,UAAU,GAAG5E,YAAY,GAAGC,SAAS;EAC3C,MAAM4E,SAAS,GAAGf,IAAI,CAACgB,GAAG,CAACF,UAAU,GAAG/D,aAAa,CAACkE,MAAM,EAAE,CAAC,CAAC;EAEhE,SAASN,IAAIA,CAAA,EAAG;IACd,MAAMO,MAAM,GAAGzE,SAAS,CAAC6B,OAAO;IAChC,MAAMJ,GAAG,GAAGvB,MAAM,CAAC2B,OAAO;IAC1B,IAAI,CAAC4C,MAAM,IAAI,CAAChD,GAAG,EAAE;IACrB,MAAMiD,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACAD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAErF,YAAY,EAAEC,aAAa,CAAC;IAChDkF,GAAG,CAACG,SAAS,CAACpD,GAAG,EAAE,CAAC,EAAE,CAAC,EAAElC,YAAY,EAAEC,aAAa,CAAC;IAErD,MAAMsF,SAAS,GAAGJ,GAAG,CAACK,YAAY,CAAC,CAAC,EAAE,CAAC,EAAExF,YAAY,EAAEC,aAAa,CAAC;IACrE,MAAMwF,IAAI,GAAGF,SAAS,CAACE,IAAI;IAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACR,MAAM,EAAES,CAAC,IAAI,CAAC,EAAE;MACvC,MAAMC,GAAG,GAAG,CAACF,IAAI,CAACC,CAAC,CAAC,GAAGD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;MACrDD,IAAI,CAACC,CAAC,CAAC,GAAGC,GAAG;MACbF,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGC,GAAG;MACjBF,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGC,GAAG;IACnB;IACAR,GAAG,CAACS,YAAY,CAACL,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;;IAEjC;IACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9E,aAAa,CAACkE,MAAM,EAAEY,CAAC,EAAE,EAAE;MAC7C,MAAM;QAAE7D,CAAC;QAAEC;MAAE,CAAC,GAAGlB,aAAa,CAAC8E,CAAC,CAAC;MACjCV,GAAG,CAACG,SAAS,CACXpD,GAAG,EACHF,CAAC,GAAG5B,UAAU,EACd6B,CAAC,GAAG5B,WAAW,EACfD,UAAU,EACVC,WAAW,EACX2B,CAAC,GAAG5B,UAAU,EACd6B,CAAC,GAAG5B,WAAW,EACfD,UAAU,EACVC,WACF,CAAC;IACH;;IAEA;IACA,MAAMkE,GAAG,GAAGD,WAAW,CAACC,GAAG,CAAC,CAAC;IAC7B,MAAMuB,MAAM,GAAG,EAAE;IACjB,KAAK,MAAM1B,CAAC,IAAInD,UAAU,EAAE;MAC1B,MAAM8E,GAAG,GAAGxB,GAAG,GAAGH,CAAC,CAACC,EAAE;MACtB,IAAI0B,GAAG,GAAGzF,YAAY,EAAE;QACtBwF,MAAM,CAAC3C,IAAI,CAACiB,CAAC,CAAC;QACd,MAAM4B,CAAC,GAAGD,GAAG,GAAGzF,YAAY;QAC5B,MAAM2F,KAAK,GAAGjC,IAAI,CAACkC,GAAG,CAAClC,IAAI,CAACmC,EAAE,GAAGH,CAAC,CAAC;QACnC,MAAMI,KAAK,GAAG,IAAI,GAAGH,KAAK;QAE1B,IAAI7B,CAAC,CAACZ,KAAK,IAAIY,CAAC,CAACZ,KAAK,CAACyB,MAAM,EAAE;UAC7BE,GAAG,CAACkB,IAAI,CAAC,CAAC;UACVlB,GAAG,CAACmB,WAAW,GAAGF,KAAK;UACvBjB,GAAG,CAACoB,SAAS,GAAG,SAAS;UACzB,KAAK,MAAMzE,CAAC,IAAIsC,CAAC,CAACZ,KAAK,EAAE;YACvB2B,GAAG,CAACqB,QAAQ,CACV1E,CAAC,CAACE,CAAC,GAAG5B,UAAU,EAChB0B,CAAC,CAACG,CAAC,GAAG5B,WAAW,EACjBD,UAAU,EACVC,WACF,CAAC;UACH;UACA8E,GAAG,CAACsB,OAAO,CAAC,CAAC;QACf;QAEA,IAAIrC,CAAC,CAACP,QAAQ,EAAE;UAAA,IAAA6C,QAAA;UACd,MAAMC,EAAE,GAAG,CAACvC,CAAC,CAACP,QAAQ,CAAC7B,CAAC,GAAG,GAAG,IAAI5B,UAAU;UAC5C,MAAMwG,EAAE,GAAG,CAACxC,CAAC,CAACP,QAAQ,CAAC5B,CAAC,GAAG,GAAG,IAAI5B,WAAW;UAC7C8E,GAAG,CAACkB,IAAI,CAAC,CAAC;UACVlB,GAAG,CAAC0B,SAAS,GAAG,CAAC;UACjB1B,GAAG,CAAC2B,WAAW,GAAG,kBAAkB,GAAG,GAAGb,KAAK,GAAG;UAClD,MAAMc,MAAM,GAAG,EAAE,GAAG,CAAC,GAAGd,KAAK;UAC7Bd,GAAG,CAAC6B,SAAS,CAAC,CAAC;UACf7B,GAAG,CAAC8B,GAAG,CAACN,EAAE,EAAEC,EAAE,EAAEG,MAAM,EAAE,CAAC,EAAE/C,IAAI,CAACmC,EAAE,GAAG,CAAC,CAAC;UACvChB,GAAG,CAAC+B,MAAM,CAAC,CAAC;UACZ/B,GAAG,CAACsB,OAAO,CAAC,CAAC;UAEb,MAAM3C,UAAU,GAAG,EAAA4C,QAAA,GAAAtC,CAAC,CAACZ,KAAK,cAAAkD,QAAA,uBAAPA,QAAA,CAASzB,MAAM,KAAI,CAAC;UACvC,MAAMkC,MAAM,GAAG/C,CAAC,CAACR,WAAW,GACxB,IAAI,CAACQ,CAAC,CAACR,WAAW,GAAG,GAAG,EAAEwD,OAAO,CAAC,CAAC,CAAC,EAAE,GACtC,EAAE;UACN,MAAMC,IAAI,GAAGjD,CAAC,CAACT,OAAO,GAClB,GAAGS,CAAC,CAACT,OAAO,GACVG,UAAU,GACN,MAAMA,UAAU,IAAIA,UAAU,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO,GAAG,GAC1D,EAAE,EACN,GACFA,UAAU,GACV,IAAIA,UAAU,IAAIA,UAAU,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO,EAAE,GACvDqD,MAAM,IAAI,SAAS;UACvBG,UAAU,CAACnC,GAAG,EAAEwB,EAAE,EAAEC,EAAE,GAAG,EAAE,EAAES,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC;QAC7C;MACF;IACF;IACA,IAAIvB,MAAM,CAACb,MAAM,KAAKhE,UAAU,CAACgE,MAAM,EAAE/D,aAAa,CAAC4E,MAAM,CAAC;;IAE9D;IACAX,GAAG,CAAC2B,WAAW,GAAG,uBAAuB;IACzC,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIxF,YAAY,EAAEwF,CAAC,EAAE,EAAE;MACtCP,GAAG,CAAC6B,SAAS,CAAC,CAAC;MACf7B,GAAG,CAACoC,MAAM,CAAC7B,CAAC,GAAGtF,UAAU,EAAE,CAAC,CAAC;MAC7B+E,GAAG,CAACqC,MAAM,CAAC9B,CAAC,GAAGtF,UAAU,EAAEH,aAAa,CAAC;MACzCkF,GAAG,CAAC+B,MAAM,CAAC,CAAC;IACd;IACA,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAItH,SAAS,EAAEsH,CAAC,EAAE,EAAE;MACnCtC,GAAG,CAAC6B,SAAS,CAAC,CAAC;MACf7B,GAAG,CAACoC,MAAM,CAAC,CAAC,EAAEE,CAAC,GAAGpH,WAAW,CAAC;MAC9B8E,GAAG,CAACqC,MAAM,CAACxH,YAAY,EAAEyH,CAAC,GAAGpH,WAAW,CAAC;MACzC8E,GAAG,CAAC+B,MAAM,CAAC,CAAC;IACd;;IAEA;IACA/B,GAAG,CAACkB,IAAI,CAAC,CAAC;IACVlB,GAAG,CAACoB,SAAS,GAAG,qBAAqB;IACrCpB,GAAG,CAACqB,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;IAC7BrB,GAAG,CAACoB,SAAS,GAAG,SAAS;IACzBpB,GAAG,CAACuC,IAAI,GAAG,sDAAsD;IACjEvC,GAAG,CAACwC,QAAQ,CAAC,sBAAsB,EAAE,EAAE,EAAE,EAAE,CAAC;IAC5CxC,GAAG,CAACuC,IAAI,GAAG,iDAAiD;IAC5DvC,GAAG,CAACwC,QAAQ,CAAC,cAAc5C,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC/CI,GAAG,CAACsB,OAAO,CAAC,CAAC;EACf;EAEA,SAASa,UAAUA,CAACnC,GAAG,EAAEnD,CAAC,EAAEC,CAAC,EAAEoF,IAAI,EAAEO,GAAG,GAAG,CAAC,EAAExB,KAAK,GAAG,IAAI,EAAEyB,MAAM,GAAG,KAAK,EAAE;IAC1E1C,GAAG,CAACkB,IAAI,CAAC,CAAC;IACVlB,GAAG,CAACuC,IAAI,GAAG,iDAAiD;IAC5D,MAAMI,QAAQ,GAAG,GAAG;IACpB,MAAMC,KAAK,GAAGC,MAAM,CAACX,IAAI,CAAC,CAAClD,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC8D,KAAK,CAAC,KAAK,CAAC;IACrD,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIC,IAAI,GAAG,EAAE;IACb,KAAK,MAAMC,CAAC,IAAIL,KAAK,EAAE;MACrB,MAAMM,IAAI,GAAGF,IAAI,GAAGA,IAAI,GAAG,GAAG,GAAGC,CAAC,GAAGA,CAAC;MACtC,IAAIjD,GAAG,CAACmD,WAAW,CAACD,IAAI,CAAC,CAACE,KAAK,GAAGT,QAAQ,EAAE;QAC1CI,KAAK,CAAC/E,IAAI,CAACgF,IAAI,CAAC;QAChBA,IAAI,GAAGC,CAAC;MACV,CAAC,MAAMD,IAAI,GAAGE,IAAI;IACpB;IACA,IAAIF,IAAI,EAAED,KAAK,CAAC/E,IAAI,CAACgF,IAAI,CAAC;IAE1B,MAAMK,UAAU,GAAG,EAAE;IACrB,MAAMJ,CAAC,GACLpE,IAAI,CAACyE,GAAG,CACNzE,IAAI,CAACgB,GAAG,CAAC,GAAGkD,KAAK,CAAClF,GAAG,CAAE0F,CAAC,IAAKvD,GAAG,CAACmD,WAAW,CAACI,CAAC,CAAC,CAACH,KAAK,CAAC,CAAC,GAAGX,GAAG,GAAG,CAAC,EACjEE,QAAQ,GAAGF,GAAG,GAAG,CACnB,CAAC,IAAI,EAAE;IACT,MAAMxD,CAAC,GAAG8D,KAAK,CAACjD,MAAM,GAAGuD,UAAU,GAAGZ,GAAG,GAAG,CAAC;IAE7C,MAAMe,IAAI,GAAGd,MAAM,GAAG7F,CAAC,GAAGoG,CAAC,GAAG,CAAC,GAAGpG,CAAC,GAAGoG,CAAC,GAAG,CAAC;IAC3C,MAAMQ,GAAG,GAAG3G,CAAC,GAAGmC,CAAC;IAEjBe,GAAG,CAACmB,WAAW,GAAGF,KAAK;IACvBjB,GAAG,CAACoB,SAAS,GAAG,qBAAqB;IACrCsC,SAAS,CAAC1D,GAAG,EAAEwD,IAAI,EAAEC,GAAG,EAAER,CAAC,EAAEhE,CAAC,EAAE,EAAE,CAAC;IACnCe,GAAG,CAAC2D,IAAI,CAAC,CAAC;IACV3D,GAAG,CAACmB,WAAW,GAAG,CAAC;IACnBnB,GAAG,CAAC2B,WAAW,GAAG,kBAAkB;IACpC3B,GAAG,CAAC0B,SAAS,GAAG,CAAC;IACjBgC,SAAS,CAAC1D,GAAG,EAAEwD,IAAI,EAAEC,GAAG,EAAER,CAAC,EAAEhE,CAAC,EAAE,EAAE,CAAC;IACnCe,GAAG,CAAC+B,MAAM,CAAC,CAAC;IAEZ/B,GAAG,CAACoB,SAAS,GAAG,SAAS;IACzB,KAAK,IAAIb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwC,KAAK,CAACjD,MAAM,EAAES,CAAC,EAAE,EAAE;MACrCP,GAAG,CAACwC,QAAQ,CAACO,KAAK,CAACxC,CAAC,CAAC,EAAEiD,IAAI,GAAGf,GAAG,EAAEgB,GAAG,GAAGhB,GAAG,GAAG,CAAClC,CAAC,GAAG,CAAC,IAAI8C,UAAU,GAAG,CAAC,CAAC;IAC1E;IACArD,GAAG,CAACsB,OAAO,CAAC,CAAC;EACf;EAEA,SAASoC,SAASA,CAAC1D,GAAG,EAAEnD,CAAC,EAAEC,CAAC,EAAEmG,CAAC,EAAEhE,CAAC,EAAEd,CAAC,EAAE;IACrC,MAAMyF,EAAE,GAAG/E,IAAI,CAACyE,GAAG,CAACnF,CAAC,EAAE8E,CAAC,GAAG,CAAC,EAAEhE,CAAC,GAAG,CAAC,CAAC;IACpCe,GAAG,CAAC6B,SAAS,CAAC,CAAC;IACf7B,GAAG,CAACoC,MAAM,CAACvF,CAAC,GAAG+G,EAAE,EAAE9G,CAAC,CAAC;IACrBkD,GAAG,CAAC6D,KAAK,CAAChH,CAAC,GAAGoG,CAAC,EAAEnG,CAAC,EAAED,CAAC,GAAGoG,CAAC,EAAEnG,CAAC,GAAGmC,CAAC,EAAE2E,EAAE,CAAC;IACrC5D,GAAG,CAAC6D,KAAK,CAAChH,CAAC,GAAGoG,CAAC,EAAEnG,CAAC,GAAGmC,CAAC,EAAEpC,CAAC,EAAEC,CAAC,GAAGmC,CAAC,EAAE2E,EAAE,CAAC;IACrC5D,GAAG,CAAC6D,KAAK,CAAChH,CAAC,EAAEC,CAAC,GAAGmC,CAAC,EAAEpC,CAAC,EAAEC,CAAC,EAAE8G,EAAE,CAAC;IAC7B5D,GAAG,CAAC6D,KAAK,CAAChH,CAAC,EAAEC,CAAC,EAAED,CAAC,GAAGoG,CAAC,EAAEnG,CAAC,EAAE8G,EAAE,CAAC;IAC7B5D,GAAG,CAAC8D,SAAS,CAAC,CAAC;EACjB;;EAEA;EACA,SAASC,WAAWA,CAACC,CAAC,EAAE;IACtB,MAAMjE,MAAM,GAAGzE,SAAS,CAAC6B,OAAO;IAChC,MAAM8G,OAAO,GAAG1I,UAAU,CAAC4B,OAAO;IAClC,IAAI,CAAC4C,MAAM,IAAI,CAACkE,OAAO,EAAE;IAEzB,MAAMC,IAAI,GAAGnE,MAAM,CAACoE,qBAAqB,CAAC,CAAC;IAC3C,MAAMC,KAAK,GAAGH,OAAO,CAACE,qBAAqB,CAAC,CAAC;;IAE7C;IACA,MAAME,MAAM,GAAGxJ,YAAY,GAAGqJ,IAAI,CAACd,KAAK;IACxC,MAAMkB,MAAM,GAAGxJ,aAAa,GAAGoJ,IAAI,CAACK,MAAM;IAE1C,MAAMC,EAAE,GAAG,CAACR,CAAC,CAACS,OAAO,GAAGP,IAAI,CAACV,IAAI,IAAIa,MAAM;IAC3C,MAAMK,EAAE,GAAG,CAACV,CAAC,CAACW,OAAO,GAAGT,IAAI,CAACT,GAAG,IAAIa,MAAM;IAE1C,MAAMzH,CAAC,GAAGgC,IAAI,CAAC+F,KAAK,CAACJ,EAAE,GAAGvJ,UAAU,CAAC;IACrC,MAAM6B,CAAC,GAAG+B,IAAI,CAAC+F,KAAK,CAACF,EAAE,GAAGxJ,WAAW,CAAC;IAEtC,IAAI2B,CAAC,GAAG,CAAC,IAAIC,CAAC,GAAG,CAAC,IAAID,CAAC,IAAI9B,YAAY,IAAI+B,CAAC,IAAI9B,SAAS,EAAE;MACzDiB,YAAY,CAAC,IAAI,CAAC;MAClBI,YAAY,CAAC,IAAI,CAAC;MAClB;IACF;;IAEA;IACA,MAAMmH,IAAI,GAAGQ,CAAC,CAACS,OAAO,GAAGL,KAAK,CAACZ,IAAI,GAAG,EAAE;IACxC,MAAMC,GAAG,GAAGO,CAAC,CAACW,OAAO,GAAGP,KAAK,CAACX,GAAG,GAAG,EAAE;IACtCtH,WAAW,CAAC;MAAEqH,IAAI;MAAEC;IAAI,CAAC,CAAC;IAE1B,MAAMoB,GAAG,GAAG,GAAGhI,CAAC,IAAIC,CAAC,EAAE;IACvBb,YAAY,CAAC;MAAEY,CAAC;MAAEC;IAAE,CAAC,CAAC;;IAEtB;IACA,IAAI,CAACN,cAAc,CAACuB,GAAG,CAAC8G,GAAG,CAAC,EAAE;MAC5BxI,YAAY,CAAC,IAAI,CAAC;MAClB;IACF;IAEA,MAAMyI,MAAM,GAAGxI,YAAY,CAACa,OAAO,CAAC4H,GAAG,CAACF,GAAG,CAAC;IAC5C,IAAIC,MAAM,EAAE;MACVzI,YAAY,CAACyI,MAAM,CAAC;MACpB;IACF;;IAEA;IACA;IACA,MAAME,UAAU,GAAGH,GAAG;IACtBI,MAAM,CAACC,YAAY,CAACnB,WAAW,CAACoB,EAAE,CAAC;IACnCpB,WAAW,CAACoB,EAAE,GAAGF,MAAM,CAACG,UAAU,CAAC,YAAY;MAC7C,IAAI,GAAGpJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEa,CAAC,IAAIb,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEc,CAAC,EAAE,KAAKkI,UAAU,EAAE;MACtD,IAAI;QACF,MAAMK,GAAG,GAAG,MAAMpH,KAAK,CAAC,GAAG5D,QAAQ,SAASwC,CAAC,IAAIC,CAAC,EAAE,CAAC;QACrD,MAAMwI,IAAI,GAAG,MAAMD,GAAG,CAACjH,IAAI,CAAC,CAAC;QAC7B9B,YAAY,CAACa,OAAO,CAACoI,GAAG,CAACP,UAAU,EAAEM,IAAI,CAAC;QAC1C,IAAI,GAAGtJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEa,CAAC,IAAIb,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEc,CAAC,EAAE,KAAKkI,UAAU,EAAE;UACpD3I,YAAY,CAACiJ,IAAI,CAAC;QACpB;MACF,CAAC,CAAC,MAAM,CAAC;IACX,CAAC,EAAE,GAAG,CAAC;EACT;EACA,SAASE,YAAYA,CAAA,EAAG;IACtBvJ,YAAY,CAAC,IAAI,CAAC;IAClBI,YAAY,CAAC,IAAI,CAAC;EACpB;EAEA,SAASoJ,SAASA,CAACC,KAAK,EAAE;IACxB,IAAIA,KAAK,IAAI,IAAI,EAAE,OAAO,EAAE;IAC5B,OAAO,IAAI,CAACA,KAAK,GAAG,GAAG,EAAEzD,OAAO,CAAC,CAAC,CAAC,EAAE;EACvC;EAEA,oBACE7H,OAAA;IACEuL,GAAG,EAAEpK,UAAW;IAChBqK,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,gBAEF7L,OAAA;MACEuL,GAAG,EAAErK,SAAU;MACf8H,KAAK,EAAEvI,YAAa;MACpB0J,MAAM,EAAEzJ,aAAc;MACtBiJ,WAAW,EAAEA,WAAY;MACzByB,YAAY,EAAEA,YAAa;MAC3BI,KAAK,EAAE;QACLM,MAAM,EAAE,mBAAmB;QAC3BC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAE,4BAA4B;QACvCzD,QAAQ,EAAE,MAAM;QAChB4B,MAAM,EAAE;MACV;IAAE;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGDxK,SAAS,IAAIE,QAAQ,KAAIE,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEqK,MAAM,kBACzCrM,OAAA;MACEwL,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBrC,IAAI,EAAEtH,QAAQ,CAACsH,IAAI;QACnBC,GAAG,EAAEvH,QAAQ,CAACuH,GAAG;QACjBiD,SAAS,EAAE,iBAAiB;QAC5BC,UAAU,EAAE,qBAAqB;QACjCC,KAAK,EAAE,SAAS;QAChBV,MAAM,EAAE,mBAAmB;QAC3BC,YAAY,EAAE,EAAE;QAChBH,OAAO,EAAE,UAAU;QACnBa,QAAQ,EAAE,EAAE;QACZlE,QAAQ,EAAE,GAAG;QACbmE,aAAa,EAAE,MAAM;QACrBV,SAAS,EAAE,6BAA6B;QACxCW,MAAM,EAAE;MACV,CAAE;MAAAd,QAAA,gBAEF7L,OAAA;QAAKwL,KAAK,EAAE;UAAEoB,OAAO,EAAE,IAAI;UAAEC,YAAY,EAAE;QAAE,CAAE;QAAAhB,QAAA,GAAC,QACxC,eAAA7L,OAAA;UAAA6L,QAAA,EAAIjK,SAAS,CAACa;QAAC;UAAAwJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,MAAE,eAAApM,OAAA;UAAA6L,QAAA,EAAIjK,SAAS,CAACc;QAAC;UAAAuJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EACLpK,SAAS,CAACqC,WAAW,IAAI,IAAI,iBAC5BrE,OAAA;QAAA6L,QAAA,GAAK,UACK,eAAA7L,OAAA;UAAA6L,QAAA,EAAIR,SAAS,CAACrJ,SAAS,CAACqC,WAAW;QAAC;UAAA4H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CACN,EACApK,SAAS,CAACoC,OAAO,iBAChBpE,OAAA;QAAKwL,KAAK,EAAE;UAAEsB,SAAS,EAAE,CAAC;UAAEF,OAAO,EAAE;QAAK,CAAE;QAAAf,QAAA,GAAC,QAC1C,EAACpD,MAAM,CAACzG,SAAS,CAACoC,OAAO,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,QAC5C;MAAA;QAAAqH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN,EACApK,SAAS,CAAC+K,UAAU,iBACnB/M,OAAA;QAAKwL,KAAK,EAAE;UAAEsB,SAAS,EAAE,CAAC;UAAEF,OAAO,EAAE;QAAI,CAAE;QAAAf,QAAA,GAAC,YAChC,EAAC,IAAImB,IAAI,CAAChL,SAAS,CAAC+K,UAAU,GAAG,GAAG,CAAC,CAACE,cAAc,CAAC,CAAC;MAAA;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnL,EAAA,CApZuBD,UAAU;AAAAkM,EAAA,GAAVlM,UAAU;AAAA,IAAAkM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}