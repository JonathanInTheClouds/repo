{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandowdell/Workstation/React/million-pixel-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport imageSrc from \"./booker-t-washington.jpg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GRID_COLUMNS = 100;\nconst GRID_ROWS = 100;\nconst CANVAS_WIDTH = 1920;\nconst CANVAS_HEIGHT = 1080;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [mockClaims, setMockClaims] = useState(generateMockClaims());\n  const [selectedClaim, setSelectedClaim] = useState(null);\n  const [showDetails, setShowDetails] = useState(true);\n  useEffect(() => {\n    drawCanvas();\n  }, [mockClaims, hoveredCell]);\n  const drawCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      drawGrid(ctx);\n      drawClaims(ctx);\n      if (hoveredCell) {\n        highlightHoveredCell(ctx, hoveredCell);\n      }\n    };\n  };\n  const drawGrid = ctx => {\n    ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n  };\n  const drawClaims = ctx => {\n    mockClaims.forEach(({\n      x,\n      y\n    }) => {\n      ctx.fillStyle = \"rgba(218,165,32,0.5)\";\n      ctx.fillRect(x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    });\n  };\n  const highlightHoveredCell = (ctx, cell) => {\n    if (!cell) return;\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.15)\";\n    ctx.fillRect(cell.x * CELL_WIDTH, cell.y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n  };\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const canvasX = (e.clientX - rect.left) * scaleX;\n    const canvasY = (e.clientY - rect.top) * scaleY;\n    const x = Math.floor(canvasX / CELL_WIDTH);\n    const y = Math.floor(canvasY / CELL_HEIGHT);\n    setHoveredCell({\n      x,\n      y\n    });\n    setMousePosition({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n  const handleClick = () => {\n    if (hoveredCell) {\n      const claim = getClaimInfo(hoveredCell);\n      setSelectedClaim(claim ? {\n        ...claim,\n        coords: hoveredCell\n      } : {\n        coords: hoveredCell,\n        name: null\n      });\n    }\n  };\n  const getClaimInfo = cell => {\n    return mockClaims.find(claim => claim.x === cell.x && claim.y === cell.y);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Million Pixel Booker T. Washington\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowDetails(!showDetails),\n      style: {\n        margin: \"10px\"\n      },\n      children: showDetails ? \"Hide Details\" : \"Show Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT,\n          onMouseMove: handleMouseMove,\n          onClick: handleClick,\n          style: {\n            border: \"1px solid black\",\n            maxWidth: \"100%\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), showDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"300px\",\n          marginLeft: \"20px\",\n          textAlign: \"left\",\n          borderLeft: \"1px solid #ccc\",\n          paddingLeft: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cell Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), selectedClaim ? selectedClaim.name ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Coordinates:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), \" (\", selectedClaim.coords.x, \",\", \" \", selectedClaim.coords.y, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Claimed by:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this), \" \", selectedClaim.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this), selectedClaim.message && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: [\"\\\"\", selectedClaim.message, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Coordinates: (\", selectedClaim.coords.x, \",\", \" \", selectedClaim.coords.y, \") - Available\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click a cell to see details here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9XPkq5GisE0YPiOF5mHKcQQVhyY=\");\n_c = App;\nfunction generateMockClaims() {\n  const claims = [];\n  for (let i = 0; i < 300; i++) {\n    claims.push({\n      x: Math.floor(Math.random() * GRID_COLUMNS),\n      y: Math.floor(Math.random() * GRID_ROWS),\n      name: `Donor ${i}`,\n      message: Math.random() > 0.7 ? \"Supporting the legacy!\" : null\n    });\n  }\n  return claims;\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","imageSrc","jsxDEV","_jsxDEV","Fragment","_Fragment","GRID_COLUMNS","GRID_ROWS","CANVAS_WIDTH","CANVAS_HEIGHT","CELL_WIDTH","CELL_HEIGHT","App","_s","canvasRef","hoveredCell","setHoveredCell","mousePosition","setMousePosition","x","y","mockClaims","setMockClaims","generateMockClaims","selectedClaim","setSelectedClaim","showDetails","setShowDetails","drawCanvas","canvas","current","ctx","getContext","img","Image","src","onload","clearRect","drawImage","drawGrid","drawClaims","highlightHoveredCell","strokeStyle","i","beginPath","moveTo","lineTo","stroke","j","forEach","fillStyle","fillRect","cell","handleMouseMove","e","rect","getBoundingClientRect","scaleX","width","scaleY","height","canvasX","clientX","left","canvasY","clientY","top","Math","floor","handleClick","claim","getClaimInfo","coords","name","find","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onClick","margin","display","flexDirection","marginTop","position","ref","onMouseMove","border","maxWidth","marginLeft","borderLeft","paddingLeft","message","_c","claims","push","random","$RefreshReg$"],"sources":["/Users/jonathandowdell/Workstation/React/million-pixel-app/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport imageSrc from \"./booker-t-washington.jpg\";\n\nconst GRID_COLUMNS = 100;\nconst GRID_ROWS = 100;\nconst CANVAS_WIDTH = 1920;\nconst CANVAS_HEIGHT = 1080;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [mockClaims, setMockClaims] = useState(generateMockClaims());\n  const [selectedClaim, setSelectedClaim] = useState(null);\n  const [showDetails, setShowDetails] = useState(true);\n\n  useEffect(() => {\n    drawCanvas();\n  }, [mockClaims, hoveredCell]);\n\n  const drawCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      drawGrid(ctx);\n      drawClaims(ctx);\n      if (hoveredCell) {\n        highlightHoveredCell(ctx, hoveredCell);\n      }\n    };\n  };\n\n  const drawGrid = (ctx) => {\n    ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n  };\n\n  const drawClaims = (ctx) => {\n    mockClaims.forEach(({ x, y }) => {\n      ctx.fillStyle = \"rgba(218,165,32,0.5)\";\n      ctx.fillRect(x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    });\n  };\n\n  const highlightHoveredCell = (ctx, cell) => {\n    if (!cell) return;\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.15)\";\n    ctx.fillRect(\n      cell.x * CELL_WIDTH,\n      cell.y * CELL_HEIGHT,\n      CELL_WIDTH,\n      CELL_HEIGHT\n    );\n  };\n\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    const canvasX = (e.clientX - rect.left) * scaleX;\n    const canvasY = (e.clientY - rect.top) * scaleY;\n\n    const x = Math.floor(canvasX / CELL_WIDTH);\n    const y = Math.floor(canvasY / CELL_HEIGHT);\n\n    setHoveredCell({ x, y });\n    setMousePosition({ x: e.clientX - rect.left, y: e.clientY - rect.top });\n  };\n\n  const handleClick = () => {\n    if (hoveredCell) {\n      const claim = getClaimInfo(hoveredCell);\n      setSelectedClaim(\n        claim\n          ? { ...claim, coords: hoveredCell }\n          : { coords: hoveredCell, name: null }\n      );\n    }\n  };\n\n  const getClaimInfo = (cell) => {\n    return mockClaims.find((claim) => claim.x === cell.x && claim.y === cell.y);\n  };\n\n  return (\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>\n        Million Pixel Booker T. Washington\n      </h1>\n      <button\n        onClick={() => setShowDetails(!showDetails)}\n        style={{ margin: \"10px\" }}\n      >\n        {showDetails ? \"Hide Details\" : \"Show Details\"}\n      </button>\n      <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"20px\" }}>\n        <div style={{ position: \"relative\" }}>\n          <canvas\n            ref={canvasRef}\n            width={CANVAS_WIDTH}\n            height={CANVAS_HEIGHT}\n            onMouseMove={handleMouseMove}\n            onClick={handleClick}\n            style={{\n              border: \"1px solid black\",\n              maxWidth: \"100%\",\n              height: \"auto\",\n            }}\n          />\n        </div>\n        {showDetails && (\n          <div\n            style={{\n              width: \"300px\",\n              marginLeft: \"20px\",\n              textAlign: \"left\",\n              borderLeft: \"1px solid #ccc\",\n              paddingLeft: \"10px\",\n            }}\n          >\n            <h2>Cell Details</h2>\n            {selectedClaim ? (\n              selectedClaim.name ? (\n                <>\n                  <p>\n                    <strong>Coordinates:</strong> ({selectedClaim.coords.x},{\" \"}\n                    {selectedClaim.coords.y})\n                  </p>\n                  <p>\n                    <strong>Claimed by:</strong> {selectedClaim.name}\n                  </p>\n                  {selectedClaim.message && (\n                    <p>\n                      <em>\"{selectedClaim.message}\"</em>\n                    </p>\n                  )}\n                </>\n              ) : (\n                <p>\n                  Coordinates: ({selectedClaim.coords.x},{\" \"}\n                  {selectedClaim.coords.y}) - Available\n                </p>\n              )\n            ) : (\n              <p>Click a cell to see details here.</p>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction generateMockClaims() {\n  const claims = [];\n  for (let i = 0; i < 300; i++) {\n    claims.push({\n      x: Math.floor(Math.random() * GRID_COLUMNS),\n      y: Math.floor(Math.random() * GRID_ROWS),\n      name: `Donor ${i}`,\n      message: Math.random() > 0.7 ? \"Supporting the legacy!\" : null,\n    });\n  }\n  return claims;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}