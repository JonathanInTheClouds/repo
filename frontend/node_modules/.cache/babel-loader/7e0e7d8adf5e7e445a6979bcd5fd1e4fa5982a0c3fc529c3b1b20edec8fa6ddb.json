{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandowdell/Workstation/React/million-pixel-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport imageSrc from \"./booker-t-washington.jpg\"; // Place 1080p image here\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GRID_COLUMNS = 100; // Width divisions\nconst GRID_ROWS = 100; // Height divisions\nconst CANVAS_WIDTH = 1920;\nconst CANVAS_HEIGHT = 1080;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [mockClaims, setMockClaims] = useState(generateMockClaims());\n  const [selectedClaim, setSelectedClaim] = useState(null);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  useEffect(() => {\n    drawCanvas();\n  }, [mockClaims, hoveredCell]);\n  const drawCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      drawGrid(ctx);\n      drawClaims(ctx);\n      if (hoveredCell) {\n        highlightHoveredCell(ctx, hoveredCell);\n      }\n    };\n  };\n  const drawGrid = ctx => {\n    ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n  };\n  const drawClaims = ctx => {\n    mockClaims.forEach(({\n      x,\n      y\n    }) => {\n      ctx.fillStyle = \"rgba(218,165,32,0.5)\";\n      ctx.fillRect(x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    });\n  };\n  const highlightHoveredCell = (ctx, cell) => {\n    const claim = getClaimInfo(cell);\n    ctx.fillStyle = claim ? \"rgba(255, 215, 0, 0.4)\" : \"rgba(0, 0, 0, 0.15)\";\n    ctx.fillRect(cell.x * CELL_WIDTH, cell.y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n  };\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const x = Math.floor((e.clientX - rect.left) * scaleX / CELL_WIDTH);\n    const y = Math.floor((e.clientY - rect.top) * scaleY / CELL_HEIGHT);\n    setHoveredCell({\n      x,\n      y\n    });\n    setMousePosition({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n  const handleClick = () => {\n    if (hoveredCell) {\n      const claim = getClaimInfo(hoveredCell);\n      setSelectedClaim(claim ? {\n        ...claim,\n        coords: hoveredCell\n      } : {\n        coords: hoveredCell\n      });\n    }\n  };\n  const getClaimInfo = cell => {\n    return mockClaims.find(claim => claim.x === cell.x && claim.y === cell.y);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      ref: containerRef,\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        onMouseMove: handleMouseMove,\n        onClick: handleClick,\n        style: {\n          border: \"1px solid black\",\n          maxWidth: \"100%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: sidebarOpen ? \"300px\" : \"50px\",\n        marginLeft: \"20px\",\n        textAlign: \"left\",\n        borderLeft: \"1px solid #ccc\",\n        paddingLeft: \"10px\",\n        transition: \"width 0.3s\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: () => setSidebarOpen(!sidebarOpen),\n        children: \"Cell Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), sidebarOpen && (selectedClaim ? selectedClaim.name ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Coordinates:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this), \" (\", selectedClaim.coords.x, \",\", \" \", selectedClaim.coords.y, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Claimed by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this), \" \", selectedClaim.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), selectedClaim.message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: [\"\\\"\", selectedClaim.message, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Coordinates: (\", selectedClaim.coords.x, \", \", selectedClaim.coords.y, \") - Available\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click a cell to see details here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xsa6i7ktEddR3CBBU69+yzkd8Po=\");\n_c = App;\nfunction generateMockClaims() {\n  const claims = [];\n  for (let i = 0; i < 300; i++) {\n    claims.push({\n      x: Math.floor(Math.random() * GRID_COLUMNS),\n      y: Math.floor(Math.random() * GRID_ROWS),\n      name: Math.random() > 0.5 ? `Donor ${i}` : null,\n      message: Math.random() > 0.7 ? \"Supporting the legacy!\" : null\n    });\n  }\n  return claims;\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","imageSrc","jsxDEV","_jsxDEV","Fragment","_Fragment","GRID_COLUMNS","GRID_ROWS","CANVAS_WIDTH","CANVAS_HEIGHT","CELL_WIDTH","CELL_HEIGHT","App","_s","canvasRef","containerRef","hoveredCell","setHoveredCell","mousePosition","setMousePosition","x","y","mockClaims","setMockClaims","generateMockClaims","selectedClaim","setSelectedClaim","sidebarOpen","setSidebarOpen","drawCanvas","canvas","current","ctx","getContext","img","Image","src","onload","clearRect","drawImage","drawGrid","drawClaims","highlightHoveredCell","strokeStyle","i","beginPath","moveTo","lineTo","stroke","j","forEach","fillStyle","fillRect","cell","claim","getClaimInfo","handleMouseMove","e","rect","getBoundingClientRect","scaleX","width","scaleY","height","Math","floor","clientX","left","clientY","top","handleClick","coords","find","style","display","flexDirection","marginTop","children","position","ref","onMouseMove","onClick","border","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","textAlign","borderLeft","paddingLeft","transition","cursor","name","message","_c","claims","push","random","$RefreshReg$"],"sources":["/Users/jonathandowdell/Workstation/React/million-pixel-app/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport imageSrc from \"./booker-t-washington.jpg\"; // Place 1080p image here\n\nconst GRID_COLUMNS = 100; // Width divisions\nconst GRID_ROWS = 100; // Height divisions\nconst CANVAS_WIDTH = 1920;\nconst CANVAS_HEIGHT = 1080;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [mockClaims, setMockClaims] = useState(generateMockClaims());\n  const [selectedClaim, setSelectedClaim] = useState(null);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n\n  useEffect(() => {\n    drawCanvas();\n  }, [mockClaims, hoveredCell]);\n\n  const drawCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      drawGrid(ctx);\n      drawClaims(ctx);\n      if (hoveredCell) {\n        highlightHoveredCell(ctx, hoveredCell);\n      }\n    };\n  };\n\n  const drawGrid = (ctx) => {\n    ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n  };\n\n  const drawClaims = (ctx) => {\n    mockClaims.forEach(({ x, y }) => {\n      ctx.fillStyle = \"rgba(218,165,32,0.5)\";\n      ctx.fillRect(x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    });\n  };\n\n  const highlightHoveredCell = (ctx, cell) => {\n    const claim = getClaimInfo(cell);\n    ctx.fillStyle = claim ? \"rgba(255, 215, 0, 0.4)\" : \"rgba(0, 0, 0, 0.15)\";\n    ctx.fillRect(\n      cell.x * CELL_WIDTH,\n      cell.y * CELL_HEIGHT,\n      CELL_WIDTH,\n      CELL_HEIGHT\n    );\n  };\n\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    const x = Math.floor(((e.clientX - rect.left) * scaleX) / CELL_WIDTH);\n    const y = Math.floor(((e.clientY - rect.top) * scaleY) / CELL_HEIGHT);\n\n    setHoveredCell({ x, y });\n    setMousePosition({ x: e.clientX - rect.left, y: e.clientY - rect.top });\n  };\n\n  const handleClick = () => {\n    if (hoveredCell) {\n      const claim = getClaimInfo(hoveredCell);\n      setSelectedClaim(\n        claim ? { ...claim, coords: hoveredCell } : { coords: hoveredCell }\n      );\n    }\n  };\n\n  const getClaimInfo = (cell) => {\n    return mockClaims.find((claim) => claim.x === cell.x && claim.y === cell.y);\n  };\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"20px\" }}>\n      <div style={{ position: \"relative\" }} ref={containerRef}>\n        <canvas\n          ref={canvasRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          onMouseMove={handleMouseMove}\n          onClick={handleClick}\n          style={{\n            border: \"1px solid black\",\n            maxWidth: \"100%\",\n            height: \"auto\",\n          }}\n        />\n      </div>\n      <div\n        style={{\n          width: sidebarOpen ? \"300px\" : \"50px\",\n          marginLeft: \"20px\",\n          textAlign: \"left\",\n          borderLeft: \"1px solid #ccc\",\n          paddingLeft: \"10px\",\n          transition: \"width 0.3s\",\n        }}\n      >\n        <h2\n          style={{ cursor: \"pointer\" }}\n          onClick={() => setSidebarOpen(!sidebarOpen)}\n        >\n          Cell Details\n        </h2>\n        {sidebarOpen &&\n          (selectedClaim ? (\n            selectedClaim.name ? (\n              <>\n                <p>\n                  <strong>Coordinates:</strong> ({selectedClaim.coords.x},{\" \"}\n                  {selectedClaim.coords.y})\n                </p>\n                <p>\n                  <strong>Claimed by:</strong> {selectedClaim.name}\n                </p>\n                {selectedClaim.message && (\n                  <p>\n                    <em>\"{selectedClaim.message}\"</em>\n                  </p>\n                )}\n              </>\n            ) : (\n              <p>\n                Coordinates: ({selectedClaim.coords.x}, {selectedClaim.coords.y}\n                ) - Available\n              </p>\n            )\n          ) : (\n            <p>Click a cell to see details here.</p>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nfunction generateMockClaims() {\n  const claims = [];\n  for (let i = 0; i < 300; i++) {\n    claims.push({\n      x: Math.floor(Math.random() * GRID_COLUMNS),\n      y: Math.floor(Math.random() * GRID_ROWS),\n      name: Math.random() > 0.5 ? `Donor ${i}` : null,\n      message: Math.random() > 0.7 ? \"Supporting the legacy!\" : null,\n    });\n  }\n  return claims;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}