{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandowdell/Workstation/React/million-pixel-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport imageSrc from \"./Banner Hi Rez.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1495;\nconst CANVAS_HEIGHT = 1024;\nconst GRID_COLUMNS = 50;\nconst GRID_ROWS = 50;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [revealedCells, setRevealedCells] = useState([]);\n  const [speed, setSpeed] = useState(50);\n  useEffect(() => {\n    drawCanvas();\n  }, [revealedCells]);\n  const drawCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      const imageData = ctx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      for (let i = 0; i < imageData.data.length; i += 4) {\n        const avg = (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3;\n        imageData.data[i] = avg;\n        imageData.data[i + 1] = avg;\n        imageData.data[i + 2] = avg;\n      }\n      ctx.putImageData(imageData, 0, 0);\n      revealedCells.forEach(({\n        x,\n        y\n      }) => {\n        ctx.drawImage(img, x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT, x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n      });\n      drawGrid(ctx);\n    };\n  };\n  const drawGrid = ctx => {\n    ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n  };\n  const simulateFill = () => {\n    const unrevealedCells = [];\n    for (let x = 0; x < GRID_COLUMNS; x++) {\n      for (let y = 0; y < GRID_ROWS; y++) {\n        if (!revealedCells.find(cell => cell.x === x && cell.y === y)) {\n          unrevealedCells.push({\n            x,\n            y\n          });\n        }\n      }\n    }\n    const interval = setInterval(() => {\n      if (unrevealedCells.length === 0) {\n        clearInterval(interval);\n        return;\n      }\n      const index = Math.floor(Math.random() * unrevealedCells.length);\n      const cell = unrevealedCells.splice(index, 1)[0];\n      setRevealedCells(prev => [...prev, cell]);\n    }, speed);\n  };\n  const handleCanvasClick = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const canvasX = (e.clientX - rect.left) * scaleX;\n    const canvasY = (e.clientY - rect.top) * scaleY;\n    const x = Math.floor(canvasX / CELL_WIDTH);\n    const y = Math.floor(canvasY / CELL_HEIGHT);\n    if (!revealedCells.find(cell => cell.x === x && cell.y === y)) {\n      setRevealedCells([...revealedCells, {\n        x,\n        y\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"Arial, sans-serif\",\n      backgroundColor: \"#1e293b\",\n      minHeight: \"100vh\",\n      color: \"#e2e8f0\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: \"2rem\",\n        marginBottom: \"1rem\"\n      },\n      children: \"Million Pixel Reveal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"12px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: simulateFill,\n        style: {\n          padding: \"10px 20px\",\n          borderRadius: \"8px\",\n          border: \"none\",\n          backgroundColor: \"#3b82f6\",\n          color: \"white\",\n          cursor: \"pointer\"\n        },\n        children: \"Simulate Fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Speed: \", speed, \"ms\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"200\",\n          step: \"10\",\n          value: speed,\n          onChange: e => setSpeed(Number(e.target.value)),\n          style: {\n            marginLeft: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#1e293b\",\n        padding: \"12px\",\n        borderRadius: \"16px\",\n        boxShadow: \"0 6px 20px rgba(0,0,0,0.5)\",\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        onClick: handleCanvasClick,\n        style: {\n          border: \"none\",\n          cursor: \"pointer\",\n          maxWidth: \"100%\",\n          height: \"auto\",\n          backgroundColor: \"#0f172a\",\n          display: \"block\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EeATzeKkHY3cjH9LSPD8ZHoVWhY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","imageSrc","jsxDEV","_jsxDEV","CANVAS_WIDTH","CANVAS_HEIGHT","GRID_COLUMNS","GRID_ROWS","CELL_WIDTH","CELL_HEIGHT","App","_s","canvasRef","revealedCells","setRevealedCells","speed","setSpeed","drawCanvas","canvas","current","ctx","getContext","img","Image","src","onload","drawImage","imageData","getImageData","i","data","length","avg","putImageData","forEach","x","y","drawGrid","strokeStyle","beginPath","moveTo","lineTo","stroke","j","simulateFill","unrevealedCells","find","cell","push","interval","setInterval","clearInterval","index","Math","floor","random","splice","prev","handleCanvasClick","e","rect","getBoundingClientRect","scaleX","width","scaleY","height","canvasX","clientX","left","canvasY","clientY","top","style","fontFamily","backgroundColor","minHeight","color","display","flexDirection","alignItems","padding","children","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","gap","onClick","borderRadius","border","cursor","type","min","max","step","value","onChange","Number","target","marginLeft","boxShadow","overflow","ref","maxWidth","_c","$RefreshReg$"],"sources":["/Users/jonathandowdell/Workstation/React/million-pixel-app/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport imageSrc from \"./Banner Hi Rez.png\";\n\nconst CANVAS_WIDTH = 1495;\nconst CANVAS_HEIGHT = 1024;\nconst GRID_COLUMNS = 50;\nconst GRID_ROWS = 50;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [revealedCells, setRevealedCells] = useState([]);\n  const [speed, setSpeed] = useState(50);\n\n  useEffect(() => {\n    drawCanvas();\n  }, [revealedCells]);\n\n  const drawCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n      const imageData = ctx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      for (let i = 0; i < imageData.data.length; i += 4) {\n        const avg =\n          (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) /\n          3;\n        imageData.data[i] = avg;\n        imageData.data[i + 1] = avg;\n        imageData.data[i + 2] = avg;\n      }\n      ctx.putImageData(imageData, 0, 0);\n\n      revealedCells.forEach(({ x, y }) => {\n        ctx.drawImage(\n          img,\n          x * CELL_WIDTH,\n          y * CELL_HEIGHT,\n          CELL_WIDTH,\n          CELL_HEIGHT,\n          x * CELL_WIDTH,\n          y * CELL_HEIGHT,\n          CELL_WIDTH,\n          CELL_HEIGHT\n        );\n      });\n\n      drawGrid(ctx);\n    };\n  };\n\n  const drawGrid = (ctx) => {\n    ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n  };\n\n  const simulateFill = () => {\n    const unrevealedCells = [];\n\n    for (let x = 0; x < GRID_COLUMNS; x++) {\n      for (let y = 0; y < GRID_ROWS; y++) {\n        if (!revealedCells.find((cell) => cell.x === x && cell.y === y)) {\n          unrevealedCells.push({ x, y });\n        }\n      }\n    }\n\n    const interval = setInterval(() => {\n      if (unrevealedCells.length === 0) {\n        clearInterval(interval);\n        return;\n      }\n\n      const index = Math.floor(Math.random() * unrevealedCells.length);\n      const cell = unrevealedCells.splice(index, 1)[0];\n\n      setRevealedCells((prev) => [...prev, cell]);\n    }, speed);\n  };\n\n  const handleCanvasClick = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    const canvasX = (e.clientX - rect.left) * scaleX;\n    const canvasY = (e.clientY - rect.top) * scaleY;\n\n    const x = Math.floor(canvasX / CELL_WIDTH);\n    const y = Math.floor(canvasY / CELL_HEIGHT);\n\n    if (!revealedCells.find((cell) => cell.x === x && cell.y === y)) {\n      setRevealedCells([...revealedCells, { x, y }]);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        fontFamily: \"Arial, sans-serif\",\n        backgroundColor: \"#1e293b\",\n        minHeight: \"100vh\",\n        color: \"#e2e8f0\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: \"20px\",\n      }}\n    >\n      <h1 style={{ fontSize: \"2rem\", marginBottom: \"1rem\" }}>\n        Million Pixel Reveal\n      </h1>\n      <div\n        style={{\n          marginBottom: \"20px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"12px\",\n        }}\n      >\n        <button\n          onClick={simulateFill}\n          style={{\n            padding: \"10px 20px\",\n            borderRadius: \"8px\",\n            border: \"none\",\n            backgroundColor: \"#3b82f6\",\n            color: \"white\",\n            cursor: \"pointer\",\n          }}\n        >\n          Simulate Fill\n        </button>\n        <label>\n          Speed: {speed}ms\n          <input\n            type=\"range\"\n            min=\"10\"\n            max=\"200\"\n            step=\"10\"\n            value={speed}\n            onChange={(e) => setSpeed(Number(e.target.value))}\n            style={{ marginLeft: \"10px\" }}\n          />\n        </label>\n      </div>\n      <div\n        style={{\n          backgroundColor: \"#1e293b\",\n          padding: \"12px\",\n          borderRadius: \"16px\",\n          boxShadow: \"0 6px 20px rgba(0,0,0,0.5)\",\n          overflow: \"hidden\",\n        }}\n      >\n        <canvas\n          ref={canvasRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          onClick={handleCanvasClick}\n          style={{\n            border: \"none\",\n            cursor: \"pointer\",\n            maxWidth: \"100%\",\n            height: \"auto\",\n            backgroundColor: \"#0f172a\",\n            display: \"block\",\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAG,IAAI;AACzB,MAAMC,aAAa,GAAG,IAAI;AAC1B,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,UAAU,GAAGJ,YAAY,GAAGE,YAAY;AAC9C,MAAMG,WAAW,GAAGJ,aAAa,GAAGE,SAAS;AAE7C,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdkB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EAEnB,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,MAAM,GAAGN,SAAS,CAACO,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEnC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAGvB,QAAQ;IAClBqB,GAAG,CAACG,MAAM,GAAG,MAAM;MACjBL,GAAG,CAACM,SAAS,CAACJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAElB,YAAY,EAAEC,aAAa,CAAC;MAErD,MAAMsB,SAAS,GAAGP,GAAG,CAACQ,YAAY,CAAC,CAAC,EAAE,CAAC,EAAExB,YAAY,EAAEC,aAAa,CAAC;MACrE,KAAK,IAAIwB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,IAAI,CAACC,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;QACjD,MAAMG,GAAG,GACP,CAACL,SAAS,CAACG,IAAI,CAACD,CAAC,CAAC,GAAGF,SAAS,CAACG,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGF,SAAS,CAACG,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,IAClE,CAAC;QACHF,SAAS,CAACG,IAAI,CAACD,CAAC,CAAC,GAAGG,GAAG;QACvBL,SAAS,CAACG,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGG,GAAG;QAC3BL,SAAS,CAACG,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGG,GAAG;MAC7B;MACAZ,GAAG,CAACa,YAAY,CAACN,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;MAEjCd,aAAa,CAACqB,OAAO,CAAC,CAAC;QAAEC,CAAC;QAAEC;MAAE,CAAC,KAAK;QAClChB,GAAG,CAACM,SAAS,CACXJ,GAAG,EACHa,CAAC,GAAG3B,UAAU,EACd4B,CAAC,GAAG3B,WAAW,EACfD,UAAU,EACVC,WAAW,EACX0B,CAAC,GAAG3B,UAAU,EACd4B,CAAC,GAAG3B,WAAW,EACfD,UAAU,EACVC,WACF,CAAC;MACH,CAAC,CAAC;MAEF4B,QAAQ,CAACjB,GAAG,CAAC;IACf,CAAC;EACH,CAAC;EAED,MAAMiB,QAAQ,GAAIjB,GAAG,IAAK;IACxBA,GAAG,CAACkB,WAAW,GAAG,uBAAuB;IACzC,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIvB,YAAY,EAAEuB,CAAC,EAAE,EAAE;MACtCT,GAAG,CAACmB,SAAS,CAAC,CAAC;MACfnB,GAAG,CAACoB,MAAM,CAACX,CAAC,GAAGrB,UAAU,EAAE,CAAC,CAAC;MAC7BY,GAAG,CAACqB,MAAM,CAACZ,CAAC,GAAGrB,UAAU,EAAEH,aAAa,CAAC;MACzCe,GAAG,CAACsB,MAAM,CAAC,CAAC;IACd;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIpC,SAAS,EAAEoC,CAAC,EAAE,EAAE;MACnCvB,GAAG,CAACmB,SAAS,CAAC,CAAC;MACfnB,GAAG,CAACoB,MAAM,CAAC,CAAC,EAAEG,CAAC,GAAGlC,WAAW,CAAC;MAC9BW,GAAG,CAACqB,MAAM,CAACrC,YAAY,EAAEuC,CAAC,GAAGlC,WAAW,CAAC;MACzCW,GAAG,CAACsB,MAAM,CAAC,CAAC;IACd;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,eAAe,GAAG,EAAE;IAE1B,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7B,YAAY,EAAE6B,CAAC,EAAE,EAAE;MACrC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7B,SAAS,EAAE6B,CAAC,EAAE,EAAE;QAClC,IAAI,CAACvB,aAAa,CAACiC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACZ,CAAC,KAAKA,CAAC,IAAIY,IAAI,CAACX,CAAC,KAAKA,CAAC,CAAC,EAAE;UAC/DS,eAAe,CAACG,IAAI,CAAC;YAAEb,CAAC;YAAEC;UAAE,CAAC,CAAC;QAChC;MACF;IACF;IAEA,MAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIL,eAAe,CAACd,MAAM,KAAK,CAAC,EAAE;QAChCoB,aAAa,CAACF,QAAQ,CAAC;QACvB;MACF;MAEA,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGV,eAAe,CAACd,MAAM,CAAC;MAChE,MAAMgB,IAAI,GAAGF,eAAe,CAACW,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAEhDtC,gBAAgB,CAAE2C,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEV,IAAI,CAAC,CAAC;IAC7C,CAAC,EAAEhC,KAAK,CAAC;EACX,CAAC;EAED,MAAM2C,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMzC,MAAM,GAAGN,SAAS,CAACO,OAAO;IAChC,MAAMyC,IAAI,GAAG1C,MAAM,CAAC2C,qBAAqB,CAAC,CAAC;IAC3C,MAAMC,MAAM,GAAG5C,MAAM,CAAC6C,KAAK,GAAGH,IAAI,CAACG,KAAK;IACxC,MAAMC,MAAM,GAAG9C,MAAM,CAAC+C,MAAM,GAAGL,IAAI,CAACK,MAAM;IAE1C,MAAMC,OAAO,GAAG,CAACP,CAAC,CAACQ,OAAO,GAAGP,IAAI,CAACQ,IAAI,IAAIN,MAAM;IAChD,MAAMO,OAAO,GAAG,CAACV,CAAC,CAACW,OAAO,GAAGV,IAAI,CAACW,GAAG,IAAIP,MAAM;IAE/C,MAAM7B,CAAC,GAAGkB,IAAI,CAACC,KAAK,CAACY,OAAO,GAAG1D,UAAU,CAAC;IAC1C,MAAM4B,CAAC,GAAGiB,IAAI,CAACC,KAAK,CAACe,OAAO,GAAG5D,WAAW,CAAC;IAE3C,IAAI,CAACI,aAAa,CAACiC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACZ,CAAC,KAAKA,CAAC,IAAIY,IAAI,CAACX,CAAC,KAAKA,CAAC,CAAC,EAAE;MAC/DtB,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE;QAAEsB,CAAC;QAAEC;MAAE,CAAC,CAAC,CAAC;IAChD;EACF,CAAC;EAED,oBACEjC,OAAA;IACEqE,KAAK,EAAE;MACLC,UAAU,EAAE,mBAAmB;MAC/BC,eAAe,EAAE,SAAS;MAC1BC,SAAS,EAAE,OAAO;MAClBC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,gBAEF9E,OAAA;MAAIqE,KAAK,EAAE;QAAEU,QAAQ,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAEvD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLpF,OAAA;MACEqE,KAAK,EAAE;QACLW,YAAY,EAAE,MAAM;QACpBN,OAAO,EAAE,MAAM;QACfE,UAAU,EAAE,QAAQ;QACpBS,GAAG,EAAE;MACP,CAAE;MAAAP,QAAA,gBAEF9E,OAAA;QACEsF,OAAO,EAAE7C,YAAa;QACtB4B,KAAK,EAAE;UACLQ,OAAO,EAAE,WAAW;UACpBU,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,MAAM;UACdjB,eAAe,EAAE,SAAS;UAC1BE,KAAK,EAAE,OAAO;UACdgB,MAAM,EAAE;QACV,CAAE;QAAAX,QAAA,EACH;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpF,OAAA;QAAA8E,QAAA,GAAO,SACE,EAAClE,KAAK,EAAC,IACd,eAAAZ,OAAA;UACE0F,IAAI,EAAC,OAAO;UACZC,GAAG,EAAC,IAAI;UACRC,GAAG,EAAC,KAAK;UACTC,IAAI,EAAC,IAAI;UACTC,KAAK,EAAElF,KAAM;UACbmF,QAAQ,EAAGvC,CAAC,IAAK3C,QAAQ,CAACmF,MAAM,CAACxC,CAAC,CAACyC,MAAM,CAACH,KAAK,CAAC,CAAE;UAClDzB,KAAK,EAAE;YAAE6B,UAAU,EAAE;UAAO;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNpF,OAAA;MACEqE,KAAK,EAAE;QACLE,eAAe,EAAE,SAAS;QAC1BM,OAAO,EAAE,MAAM;QACfU,YAAY,EAAE,MAAM;QACpBY,SAAS,EAAE,4BAA4B;QACvCC,QAAQ,EAAE;MACZ,CAAE;MAAAtB,QAAA,eAEF9E,OAAA;QACEqG,GAAG,EAAE5F,SAAU;QACfmD,KAAK,EAAE3D,YAAa;QACpB6D,MAAM,EAAE5D,aAAc;QACtBoF,OAAO,EAAE/B,iBAAkB;QAC3Bc,KAAK,EAAE;UACLmB,MAAM,EAAE,MAAM;UACdC,MAAM,EAAE,SAAS;UACjBa,QAAQ,EAAE,MAAM;UAChBxC,MAAM,EAAE,MAAM;UACdS,eAAe,EAAE,SAAS;UAC1BG,OAAO,EAAE;QACX;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5E,EAAA,CArLQD,GAAG;AAAAgG,EAAA,GAAHhG,GAAG;AAuLZ,eAAeA,GAAG;AAAC,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}