{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandowdell/Workstation/React/million-pixel-app/src/pages/CanvasPage.jsx\",\n  _import$meta,\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport imageSrc from \"../Banner Hi Rez.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || ((_import$meta = import.meta) === null || _import$meta === void 0 ? void 0 : _import$meta.env) && import.meta.env.VITE_API_BASE || \"http://localhost:3001\";\n\n// SINGLETON socket\nconst socket = io(API_BASE, {\n  transports: [\"websocket\"],\n  autoConnect: true\n});\nconst CANVAS_WIDTH = 1495;\nconst CANVAS_HEIGHT = 1024;\nconst GRID_COLUMNS = 200;\nconst GRID_ROWS = 200;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\nconst pulseDurationMs = 2500;\n\n/* persistent tint */\nconst DESIRED_TINT = \"#f59e0b\";\nconst TINT_ALPHA = 0.65;\nconst TINT_PERSIST_MS = 0; // 0=infinite\nconst TINT_INSET = 1;\nconst TINT_RADIUS = 2;\nlet cachedGrayCanvas = null;\nfunction buildGrayBase(img) {\n  if (cachedGrayCanvas) return cachedGrayCanvas;\n  const off = document.createElement(\"canvas\");\n  off.width = CANVAS_WIDTH;\n  off.height = CANVAS_HEIGHT;\n  const octx = off.getContext(\"2d\");\n  octx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const data = octx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const a = data.data;\n  for (let i = 0; i < a.length; i += 4) {\n    const avg = (a[i] + a[i + 1] + a[i + 2]) / 3;\n    a[i] = avg;\n    a[i + 1] = avg;\n    a[i + 2] = avg;\n  }\n  octx.putImageData(data, 0, 0);\n  cachedGrayCanvas = off;\n  return off;\n}\nconst k = (x, y) => `${x},${y}`;\nfunction drawRoundedRect(ctx, x, y, w, h, r) {\n  const rr = Math.min(r, w / 2, h / 2);\n  ctx.beginPath();\n  ctx.moveTo(x + rr, y);\n  ctx.arcTo(x + w, y, x + w, y + h, rr);\n  ctx.arcTo(x + w, y + h, x, y + h, rr);\n  ctx.arcTo(x, y + h, x, y, rr);\n  ctx.arcTo(x, y, x + w, y, rr);\n  ctx.closePath();\n}\nexport default function CanvasPage() {\n  _s();\n  const canvasRef = useRef(null);\n  const [cells, setCells] = useState([]); // [{x,y,amountCents?,message?,ts?}]\n  const cellsMapRef = useRef(new Map()); // k -> cell\n\n  const imgRef = useRef(null);\n  const [imgReady, setImgReady] = useState(false);\n  const [hover, setHover] = useState(null);\n  const pulsesRef = useRef(new Map()); // k -> t0\n  const tintsRef = useRef(new Map()); // k -> {color, t0}\n  const rafRef = useRef(0);\n  const bubbleTimerRef = useRef(null);\n  const [bubble, setBubble] = useState(null);\n  const reconcileTimersRef = useRef([]); // burst timers\n\n  const totalCells = GRID_COLUMNS * GRID_ROWS;\n\n  /* image */\n  useEffect(() => {\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      imgRef.current = img;\n      buildGrayBase(img);\n      setImgReady(true);\n      draw();\n    };\n  }, []);\n\n  /* state helpers */\n  const setCellsAndMap = updater => {\n    setCells(prev => {\n      const next = typeof updater === \"function\" ? updater(prev) : updater;\n      const m = new Map();\n      for (const c of next) m.set(k(c.x, c.y), c);\n      cellsMapRef.current = m;\n      return next;\n    });\n  };\n  const mergeCells = incoming => {\n    if (!(incoming !== null && incoming !== void 0 && incoming.length)) return;\n    setCellsAndMap(prev => {\n      const out = prev.slice();\n      const have = new Set(prev.map(c => k(c.x, c.y)));\n      for (const c of incoming) {\n        const kk = k(c.x, c.y);\n        if (!have.has(kk)) {\n          out.push(c);\n          have.add(kk);\n        } else {\n          const idx = out.findIndex(p => p.x === c.x && p.y === c.y);\n          if (idx >= 0) out[idx] = {\n            ...out[idx],\n            ...c\n          };\n        }\n      }\n      return out;\n    });\n  };\n  const reconcileFromServer = async () => {\n    try {\n      const r = await fetch(`${API_BASE}/state`);\n      const {\n        cells: serverCells\n      } = await r.json();\n      if (!Array.isArray(serverCells)) return;\n\n      // UNION: never discard local; overlay any server metadata\n      setCellsAndMap(prev => {\n        const byKey = new Map(prev.map(c => [k(c.x, c.y), c]));\n        for (const c of serverCells) {\n          const kk = k(c.x, c.y);\n          byKey.set(kk, {\n            ...byKey.get(kk),\n            ...c\n          });\n        }\n        return [...byKey.values()];\n      });\n      draw();\n    } catch {\n      /* noop */\n    }\n  };\n  const scheduleReconcileBurst = () => {\n    // clear old\n    for (const t of reconcileTimersRef.current) clearTimeout(t);\n    reconcileTimersRef.current = [];\n    // burst times (ms)\n    for (const ms of [300, 1500, 4000]) {\n      reconcileTimersRef.current.push(setTimeout(reconcileFromServer, ms));\n    }\n  };\n\n  /* bootstrap + sockets */\n  useEffect(() => {\n    // initial union\n    reconcileFromServer();\n    const onCells = ({\n      cells,\n      message,\n      amountCents\n    }) => {\n      // optimistic merge first\n      mergeCells(cells);\n\n      // visuals\n      const t0 = performance.now();\n      for (const c of cells) {\n        const kk = k(c.x, c.y);\n        pulsesRef.current.set(kk, t0);\n        tintsRef.current.set(kk, {\n          color: DESIRED_TINT,\n          t0\n        });\n      }\n      kickPulse();\n      if (message) showBubbleForCells(cells, message, amountCents);\n\n      // reconcile burst to heal any races\n      scheduleReconcileBurst();\n    };\n    const onBootstrap = ({\n      cells\n    }) => {\n      // UNION only — never replace local\n      mergeCells(cells);\n      // no need to reconcile here (we’ll also poll on interval)\n    };\n    socket.on(\"bootstrap\", onBootstrap);\n    socket.on(\"cells_revealed\", onCells);\n    socket.on(\"donation_message\", ({\n      message,\n      amountCents\n    }) => {\n      if (message) showBubbleForCells([], message, amountCents);\n    });\n\n    // optional: periodic gentle reconcile (every 20s) to stay honest\n    const iv = setInterval(reconcileFromServer, 20000);\n    return () => {\n      socket.off(\"bootstrap\", onBootstrap);\n      socket.off(\"cells_revealed\", onCells);\n      socket.off(\"donation_message\");\n      clearInterval(iv);\n      for (const t of reconcileTimersRef.current) clearTimeout(t);\n      reconcileTimersRef.current = [];\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    draw();\n  }, [cells, imgReady]);\n\n  /* draw */\n  function draw(now = performance.now()) {\n    const canvas = canvasRef.current;\n    const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n    const img = imgRef.current;\n    if (!canvas || !ctx || !img) return;\n    const gray = buildGrayBase(img);\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.drawImage(gray, 0, 0);\n\n    // tiles\n    for (let i = 0; i < cells.length; i++) {\n      const {\n        x,\n        y\n      } = cells[i];\n      ctx.drawImage(img, x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT, x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    }\n\n    // persistent tints\n    if (tintsRef.current.size) {\n      ctx.save();\n      ctx.globalCompositeOperation = \"overlay\";\n      ctx.globalAlpha = TINT_ALPHA;\n      for (const [keyStr, meta] of tintsRef.current) {\n        if (TINT_PERSIST_MS > 0 && now - meta.t0 > TINT_PERSIST_MS) {\n          tintsRef.current.delete(keyStr);\n          continue;\n        }\n        const [xs, ys] = keyStr.split(\",\");\n        const x = +xs,\n          y = +ys;\n        const px = x * CELL_WIDTH + TINT_INSET;\n        const py = y * CELL_HEIGHT + TINT_INSET;\n        const pw = CELL_WIDTH - TINT_INSET * 2;\n        const ph = CELL_HEIGHT - TINT_INSET * 2;\n        drawRoundedRect(ctx, px, py, pw, ph, TINT_RADIUS);\n        ctx.fillStyle = meta.color || DESIRED_TINT;\n        ctx.fill();\n      }\n      ctx.restore();\n    }\n\n    // pulse outline\n    let anyAlive = false;\n    pulsesRef.current.forEach((t0, keyStr) => {\n      const age = now - t0;\n      const life = age / pulseDurationMs;\n      if (life >= 1) {\n        pulsesRef.current.delete(keyStr);\n        return;\n      }\n      anyAlive = true;\n      const [xs, ys] = keyStr.split(\",\");\n      const x = +xs,\n        y = +ys;\n      const alpha = 1 - life;\n      ctx.save();\n      ctx.globalAlpha = Math.max(0, alpha) * 0.95;\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"rgba(34,197,94,1)\";\n      ctx.strokeRect(Math.floor(x * CELL_WIDTH) + 0.5, Math.floor(y * CELL_HEIGHT) + 0.5, Math.floor(CELL_WIDTH) - 1, Math.floor(CELL_HEIGHT) - 1);\n      ctx.restore();\n    });\n    drawGrid(ctx);\n    if (anyAlive || TINT_PERSIST_MS > 0 && tintsRef.current.size) {\n      rafRef.current = requestAnimationFrame(draw);\n    } else if (rafRef.current) {\n      cancelAnimationFrame(rafRef.current);\n      rafRef.current = 0;\n    }\n  }\n  function kickPulse() {\n    if (!rafRef.current) rafRef.current = requestAnimationFrame(draw);\n  }\n  function drawGrid(ctx) {\n    ctx.save();\n    ctx.strokeStyle = \"rgba(255,255,255,0.06)\";\n    ctx.lineWidth = 1;\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  /* hover */\n  function onMouseMove(e) {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = CANVAS_WIDTH / rect.width;\n    const scaleY = CANVAS_HEIGHT / rect.height;\n    const px = (e.clientX - rect.left) * scaleX;\n    const py = (e.clientY - rect.top) * scaleY;\n    const x = Math.floor(px / CELL_WIDTH);\n    const y = Math.floor(py / CELL_HEIGHT);\n    if (x < 0 || y < 0 || x >= GRID_COLUMNS || y >= GRID_ROWS) {\n      setHover(null);\n      return;\n    }\n    const cell = cellsMapRef.current.get(k(x, y));\n    if (!cell) {\n      setHover(null);\n      return;\n    }\n    setHover({\n      clientX: e.clientX,\n      clientY: e.clientY,\n      cell\n    });\n  }\n  function onMouseLeave() {\n    setHover(null);\n  }\n\n  /* bubble */\n  function showBubbleForCells(cellsArr, message, amountCents) {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    let left = rect.left + rect.width / 2;\n    let top = rect.top + 24;\n    const first = cellsArr === null || cellsArr === void 0 ? void 0 : cellsArr[0];\n    if (first) {\n      left = rect.left + (first.x + 0.5) * (rect.width / GRID_COLUMNS);\n      top = rect.top + (first.y + 0.5) * (rect.height / GRID_ROWS) - 8;\n    }\n    setBubble({\n      left,\n      top,\n      message,\n      amountCents,\n      until: Date.now() + 5000\n    });\n    if (bubbleTimerRef.current) clearTimeout(bubbleTimerRef.current);\n    bubbleTimerRef.current = setTimeout(() => setBubble(null), 5000);\n  }\n  const remaining = useMemo(() => Math.max(totalCells - cells.length, 0), [cells.length, totalCells]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Style, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-shell\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hud\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hud-title\",\n          children: \"Million Pixel Reveal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hud-sub\",\n          children: [\"Remaining: \", remaining.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        className: \"canvas\",\n        onMouseMove: onMouseMove,\n        onMouseLeave: onMouseLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), (hover === null || hover === void 0 ? void 0 : hover.cell) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tip\",\n        style: {\n          left: hover.clientX + 14,\n          top: hover.clientY + 14\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Cell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), \" (\", hover.cell.x, \",\", hover.cell.y, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), typeof hover.cell.amountCents === \"number\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this), \" $\", (hover.cell.amountCents / 100).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }, this), hover.cell.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip-row msg\",\n          children: [\"\\u201C\", hover.cell.message, \"\\u201D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), bubble && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble\",\n        style: {\n          left: bubble.left,\n          top: bubble.top\n        },\n        children: [typeof bubble.amountCents === \"number\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble-amt\",\n          children: [\"$\", (bubble.amountCents / 100).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }, this), bubble.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble-msg\",\n          children: [\"\\u201C\", bubble.message, \"\\u201D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n}\n\n/* styles */\n_s(CanvasPage, \"epHTj7M0cfHIabXLuhKlSJ+x+Dw=\");\n_c = CanvasPage;\nfunction Style() {\n  return /*#__PURE__*/_jsxDEV(\"style\", {\n    children: `\n:root{\n  --bg: #0b1220;\n  --line: #334155;\n  --text: #e2e8f0;\n  --muted: #94a3b8;\n  --hud-bg: rgba(2,6,23,.7);\n}\n.canvas-wrap{\n  min-height: 100vh;\n  background: radial-gradient(1000px 600px at 20% -10%, #19324b 0%, transparent 40%),\n              radial-gradient(800px 500px at 100% 0%, #1b2d24 0%, transparent 35%),\n              var(--bg);\n  display: flex; justify-content: center; align-items: flex-start;\n  padding: 24px 16px 64px;\n}\n@media (min-height: 820px){ .canvas-wrap{ align-items: center; } }\n.canvas-shell{ width: min(100%, 1500px); position: relative; }\n.canvas{\n  display: block; width: 100%; height: auto; margin: 12px auto 0;\n  border: 2px solid var(--line); border-radius: 14px;\n  box-shadow: 0 14px 40px rgba(0,0,0,.35), 0 2px 10px rgba(0,0,0,.25);\n  background: #0e1624;\n}\n.hud{\n  position: absolute; top: 14px; left: 14px; z-index: 2;\n  background: var(--hud-bg); color: var(--text);\n  border: 1px solid rgba(148,163,184,.35);\n  border-radius: 8px; padding: 10px 12px;\n  backdrop-filter: blur(6px); -webkit-backdrop-filter: blur(6px);\n}\n.hud-title{ font-weight: 800; font-size: 14px; line-height: 1.1; }\n.hud-sub{ color: var(--muted); font-size: 12px; margin-top: 2px; }\n.tip{\n  position: fixed; z-index: 10; max-width: 320px;\n  background: rgba(15,23,42,.95); color: var(--text);\n  border: 1px solid rgba(51,65,85,.9); border-radius: 10px; padding: 10px 12px;\n  box-shadow: 0 10px 30px rgba(0,0,0,.35); pointer-events: none; font-size: 13px;\n}\n.tip-row{ margin: 2px 0; }\n.tip-row.msg{ color: var(--muted); font-style: italic; }\n.bubble{\n  position: fixed; z-index: 11;\n  transform: translate(-50%, -100%);\n  background: rgba(2,6,23,.92); border: 1px solid rgba(51,65,85,.9);\n  color: var(--text); border-radius: 12px; padding: 10px 12px;\n  box-shadow: 0 12px 36px rgba(0,0,0,.45);\n  animation: bubble-in .2s ease-out, bubble-out .25s ease-in 4.75s forwards;\n  max-width: min(70vw, 420px);\n}\n.bubble-amt{ font-weight: 800; margin-bottom: 2px; }\n.bubble-msg{ color: var(--muted); font-style: italic; }\n@keyframes bubble-in { from{ opacity: 0; transform: translate(-50%,-90%) scale(.98);} to{opacity:1; transform: translate(-50%,-100%) scale(1);} }\n@keyframes bubble-out { to{ opacity: 0; transform: translate(-50%,-100%) scale(.98);} }\n    `\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Style;\nvar _c, _c2;\n$RefreshReg$(_c, \"CanvasPage\");\n$RefreshReg$(_c2, \"Style\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","io","imageSrc","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","_import$meta","import","meta","VITE_API_BASE","socket","transports","autoConnect","CANVAS_WIDTH","CANVAS_HEIGHT","GRID_COLUMNS","GRID_ROWS","CELL_WIDTH","CELL_HEIGHT","pulseDurationMs","DESIRED_TINT","TINT_ALPHA","TINT_PERSIST_MS","TINT_INSET","TINT_RADIUS","cachedGrayCanvas","buildGrayBase","img","off","document","createElement","width","height","octx","getContext","drawImage","data","getImageData","a","i","length","avg","putImageData","k","x","y","drawRoundedRect","ctx","w","h","r","rr","Math","min","beginPath","moveTo","arcTo","closePath","CanvasPage","_s","canvasRef","cells","setCells","cellsMapRef","Map","imgRef","imgReady","setImgReady","hover","setHover","pulsesRef","tintsRef","rafRef","bubbleTimerRef","bubble","setBubble","reconcileTimersRef","totalCells","Image","src","onload","current","draw","setCellsAndMap","updater","prev","next","m","c","set","mergeCells","incoming","out","slice","have","Set","map","kk","has","push","add","idx","findIndex","p","reconcileFromServer","fetch","serverCells","json","Array","isArray","byKey","get","values","scheduleReconcileBurst","t","clearTimeout","ms","setTimeout","onCells","message","amountCents","t0","performance","now","color","kickPulse","showBubbleForCells","onBootstrap","on","iv","setInterval","clearInterval","canvas","gray","clearRect","size","save","globalCompositeOperation","globalAlpha","keyStr","delete","xs","ys","split","px","py","pw","ph","fillStyle","fill","restore","anyAlive","forEach","age","life","alpha","max","lineWidth","strokeStyle","strokeRect","floor","drawGrid","requestAnimationFrame","cancelAnimationFrame","lineTo","stroke","j","onMouseMove","e","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","cell","onMouseLeave","cellsArr","first","until","Date","remaining","className","children","Style","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","ref","style","toFixed","_c","_c2","$RefreshReg$"],"sources":["/Users/jonathandowdell/Workstation/React/million-pixel-app/src/pages/CanvasPage.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport imageSrc from \"../Banner Hi Rez.png\";\n\nconst API_BASE =\n  process.env.REACT_APP_API_BASE ||\n  (import.meta?.env && import.meta.env.VITE_API_BASE) ||\n  \"http://localhost:3001\";\n\n// SINGLETON socket\nconst socket = io(API_BASE, { transports: [\"websocket\"], autoConnect: true });\n\nconst CANVAS_WIDTH = 1495;\nconst CANVAS_HEIGHT = 1024;\nconst GRID_COLUMNS = 200;\nconst GRID_ROWS = 200;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\nconst pulseDurationMs = 2500;\n\n/* persistent tint */\nconst DESIRED_TINT = \"#f59e0b\";\nconst TINT_ALPHA = 0.65;\nconst TINT_PERSIST_MS = 0; // 0=infinite\nconst TINT_INSET = 1;\nconst TINT_RADIUS = 2;\n\nlet cachedGrayCanvas = null;\nfunction buildGrayBase(img) {\n  if (cachedGrayCanvas) return cachedGrayCanvas;\n  const off = document.createElement(\"canvas\");\n  off.width = CANVAS_WIDTH;\n  off.height = CANVAS_HEIGHT;\n  const octx = off.getContext(\"2d\");\n  octx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const data = octx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const a = data.data;\n  for (let i = 0; i < a.length; i += 4) {\n    const avg = (a[i] + a[i + 1] + a[i + 2]) / 3;\n    a[i] = avg;\n    a[i + 1] = avg;\n    a[i + 2] = avg;\n  }\n  octx.putImageData(data, 0, 0);\n  cachedGrayCanvas = off;\n  return off;\n}\n\nconst k = (x, y) => `${x},${y}`;\n\nfunction drawRoundedRect(ctx, x, y, w, h, r) {\n  const rr = Math.min(r, w / 2, h / 2);\n  ctx.beginPath();\n  ctx.moveTo(x + rr, y);\n  ctx.arcTo(x + w, y, x + w, y + h, rr);\n  ctx.arcTo(x + w, y + h, x, y + h, rr);\n  ctx.arcTo(x, y + h, x, y, rr);\n  ctx.arcTo(x, y, x + w, y, rr);\n  ctx.closePath();\n}\n\nexport default function CanvasPage() {\n  const canvasRef = useRef(null);\n\n  const [cells, setCells] = useState([]); // [{x,y,amountCents?,message?,ts?}]\n  const cellsMapRef = useRef(new Map()); // k -> cell\n\n  const imgRef = useRef(null);\n  const [imgReady, setImgReady] = useState(false);\n\n  const [hover, setHover] = useState(null);\n\n  const pulsesRef = useRef(new Map()); // k -> t0\n  const tintsRef = useRef(new Map()); // k -> {color, t0}\n  const rafRef = useRef(0);\n\n  const bubbleTimerRef = useRef(null);\n  const [bubble, setBubble] = useState(null);\n\n  const reconcileTimersRef = useRef([]); // burst timers\n\n  const totalCells = GRID_COLUMNS * GRID_ROWS;\n\n  /* image */\n  useEffect(() => {\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      imgRef.current = img;\n      buildGrayBase(img);\n      setImgReady(true);\n      draw();\n    };\n  }, []);\n\n  /* state helpers */\n  const setCellsAndMap = (updater) => {\n    setCells((prev) => {\n      const next = typeof updater === \"function\" ? updater(prev) : updater;\n      const m = new Map();\n      for (const c of next) m.set(k(c.x, c.y), c);\n      cellsMapRef.current = m;\n      return next;\n    });\n  };\n\n  const mergeCells = (incoming) => {\n    if (!incoming?.length) return;\n    setCellsAndMap((prev) => {\n      const out = prev.slice();\n      const have = new Set(prev.map((c) => k(c.x, c.y)));\n      for (const c of incoming) {\n        const kk = k(c.x, c.y);\n        if (!have.has(kk)) {\n          out.push(c);\n          have.add(kk);\n        } else {\n          const idx = out.findIndex((p) => p.x === c.x && p.y === c.y);\n          if (idx >= 0) out[idx] = { ...out[idx], ...c };\n        }\n      }\n      return out;\n    });\n  };\n\n  const reconcileFromServer = async () => {\n    try {\n      const r = await fetch(`${API_BASE}/state`);\n      const { cells: serverCells } = await r.json();\n      if (!Array.isArray(serverCells)) return;\n\n      // UNION: never discard local; overlay any server metadata\n      setCellsAndMap((prev) => {\n        const byKey = new Map(prev.map((c) => [k(c.x, c.y), c]));\n        for (const c of serverCells) {\n          const kk = k(c.x, c.y);\n          byKey.set(kk, { ...byKey.get(kk), ...c });\n        }\n        return [...byKey.values()];\n      });\n      draw();\n    } catch {\n      /* noop */\n    }\n  };\n\n  const scheduleReconcileBurst = () => {\n    // clear old\n    for (const t of reconcileTimersRef.current) clearTimeout(t);\n    reconcileTimersRef.current = [];\n    // burst times (ms)\n    for (const ms of [300, 1500, 4000]) {\n      reconcileTimersRef.current.push(setTimeout(reconcileFromServer, ms));\n    }\n  };\n\n  /* bootstrap + sockets */\n  useEffect(() => {\n    // initial union\n    reconcileFromServer();\n\n    const onCells = ({ cells, message, amountCents }) => {\n      // optimistic merge first\n      mergeCells(cells);\n\n      // visuals\n      const t0 = performance.now();\n      for (const c of cells) {\n        const kk = k(c.x, c.y);\n        pulsesRef.current.set(kk, t0);\n        tintsRef.current.set(kk, { color: DESIRED_TINT, t0 });\n      }\n      kickPulse();\n      if (message) showBubbleForCells(cells, message, amountCents);\n\n      // reconcile burst to heal any races\n      scheduleReconcileBurst();\n    };\n\n    const onBootstrap = ({ cells }) => {\n      // UNION only — never replace local\n      mergeCells(cells);\n      // no need to reconcile here (we’ll also poll on interval)\n    };\n\n    socket.on(\"bootstrap\", onBootstrap);\n    socket.on(\"cells_revealed\", onCells);\n    socket.on(\"donation_message\", ({ message, amountCents }) => {\n      if (message) showBubbleForCells([], message, amountCents);\n    });\n\n    // optional: periodic gentle reconcile (every 20s) to stay honest\n    const iv = setInterval(reconcileFromServer, 20000);\n\n    return () => {\n      socket.off(\"bootstrap\", onBootstrap);\n      socket.off(\"cells_revealed\", onCells);\n      socket.off(\"donation_message\");\n      clearInterval(iv);\n      for (const t of reconcileTimersRef.current) clearTimeout(t);\n      reconcileTimersRef.current = [];\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [cells, imgReady]);\n\n  /* draw */\n  function draw(now = performance.now()) {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext(\"2d\");\n    const img = imgRef.current;\n    if (!canvas || !ctx || !img) return;\n\n    const gray = buildGrayBase(img);\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.drawImage(gray, 0, 0);\n\n    // tiles\n    for (let i = 0; i < cells.length; i++) {\n      const { x, y } = cells[i];\n      ctx.drawImage(\n        img,\n        x * CELL_WIDTH,\n        y * CELL_HEIGHT,\n        CELL_WIDTH,\n        CELL_HEIGHT,\n        x * CELL_WIDTH,\n        y * CELL_HEIGHT,\n        CELL_WIDTH,\n        CELL_HEIGHT\n      );\n    }\n\n    // persistent tints\n    if (tintsRef.current.size) {\n      ctx.save();\n      ctx.globalCompositeOperation = \"overlay\";\n      ctx.globalAlpha = TINT_ALPHA;\n      for (const [keyStr, meta] of tintsRef.current) {\n        if (TINT_PERSIST_MS > 0 && now - meta.t0 > TINT_PERSIST_MS) {\n          tintsRef.current.delete(keyStr);\n          continue;\n        }\n        const [xs, ys] = keyStr.split(\",\");\n        const x = +xs,\n          y = +ys;\n        const px = x * CELL_WIDTH + TINT_INSET;\n        const py = y * CELL_HEIGHT + TINT_INSET;\n        const pw = CELL_WIDTH - TINT_INSET * 2;\n        const ph = CELL_HEIGHT - TINT_INSET * 2;\n        drawRoundedRect(ctx, px, py, pw, ph, TINT_RADIUS);\n        ctx.fillStyle = meta.color || DESIRED_TINT;\n        ctx.fill();\n      }\n      ctx.restore();\n    }\n\n    // pulse outline\n    let anyAlive = false;\n    pulsesRef.current.forEach((t0, keyStr) => {\n      const age = now - t0;\n      const life = age / pulseDurationMs;\n      if (life >= 1) {\n        pulsesRef.current.delete(keyStr);\n        return;\n      }\n      anyAlive = true;\n      const [xs, ys] = keyStr.split(\",\");\n      const x = +xs,\n        y = +ys;\n      const alpha = 1 - life;\n      ctx.save();\n      ctx.globalAlpha = Math.max(0, alpha) * 0.95;\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"rgba(34,197,94,1)\";\n      ctx.strokeRect(\n        Math.floor(x * CELL_WIDTH) + 0.5,\n        Math.floor(y * CELL_HEIGHT) + 0.5,\n        Math.floor(CELL_WIDTH) - 1,\n        Math.floor(CELL_HEIGHT) - 1\n      );\n      ctx.restore();\n    });\n\n    drawGrid(ctx);\n\n    if (anyAlive || (TINT_PERSIST_MS > 0 && tintsRef.current.size)) {\n      rafRef.current = requestAnimationFrame(draw);\n    } else if (rafRef.current) {\n      cancelAnimationFrame(rafRef.current);\n      rafRef.current = 0;\n    }\n  }\n\n  function kickPulse() {\n    if (!rafRef.current) rafRef.current = requestAnimationFrame(draw);\n  }\n\n  function drawGrid(ctx) {\n    ctx.save();\n    ctx.strokeStyle = \"rgba(255,255,255,0.06)\";\n    ctx.lineWidth = 1;\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  /* hover */\n  function onMouseMove(e) {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = CANVAS_WIDTH / rect.width;\n    const scaleY = CANVAS_HEIGHT / rect.height;\n    const px = (e.clientX - rect.left) * scaleX;\n    const py = (e.clientY - rect.top) * scaleY;\n    const x = Math.floor(px / CELL_WIDTH);\n    const y = Math.floor(py / CELL_HEIGHT);\n    if (x < 0 || y < 0 || x >= GRID_COLUMNS || y >= GRID_ROWS) {\n      setHover(null);\n      return;\n    }\n    const cell = cellsMapRef.current.get(k(x, y));\n    if (!cell) {\n      setHover(null);\n      return;\n    }\n    setHover({ clientX: e.clientX, clientY: e.clientY, cell });\n  }\n  function onMouseLeave() {\n    setHover(null);\n  }\n\n  /* bubble */\n  function showBubbleForCells(cellsArr, message, amountCents) {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    let left = rect.left + rect.width / 2;\n    let top = rect.top + 24;\n\n    const first = cellsArr?.[0];\n    if (first) {\n      left = rect.left + (first.x + 0.5) * (rect.width / GRID_COLUMNS);\n      top = rect.top + (first.y + 0.5) * (rect.height / GRID_ROWS) - 8;\n    }\n\n    setBubble({ left, top, message, amountCents, until: Date.now() + 5000 });\n\n    if (bubbleTimerRef.current) clearTimeout(bubbleTimerRef.current);\n    bubbleTimerRef.current = setTimeout(() => setBubble(null), 5000);\n  }\n\n  const remaining = useMemo(\n    () => Math.max(totalCells - cells.length, 0),\n    [cells.length, totalCells]\n  );\n\n  return (\n    <div className=\"canvas-wrap\">\n      <Style />\n      <div className=\"canvas-shell\">\n        <div className=\"hud\">\n          <div className=\"hud-title\">Million Pixel Reveal</div>\n          <div className=\"hud-sub\">Remaining: {remaining.toLocaleString()}</div>\n        </div>\n        <canvas\n          ref={canvasRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          className=\"canvas\"\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        />\n        {hover?.cell && (\n          <div\n            className=\"tip\"\n            style={{ left: hover.clientX + 14, top: hover.clientY + 14 }}\n          >\n            <div className=\"tip-row\">\n              <b>Cell</b> ({hover.cell.x},{hover.cell.y})\n            </div>\n            {typeof hover.cell.amountCents === \"number\" && (\n              <div className=\"tip-row\">\n                <b>Amount</b> ${(hover.cell.amountCents / 100).toFixed(2)}\n              </div>\n            )}\n            {hover.cell.message && (\n              <div className=\"tip-row msg\">“{hover.cell.message}”</div>\n            )}\n          </div>\n        )}\n        {bubble && (\n          <div\n            className=\"bubble\"\n            style={{ left: bubble.left, top: bubble.top }}\n          >\n            {typeof bubble.amountCents === \"number\" && (\n              <div className=\"bubble-amt\">\n                ${(bubble.amountCents / 100).toFixed(2)}\n              </div>\n            )}\n            {bubble.message && (\n              <div className=\"bubble-msg\">“{bubble.message}”</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/* styles */\nfunction Style() {\n  return (\n    <style>{`\n:root{\n  --bg: #0b1220;\n  --line: #334155;\n  --text: #e2e8f0;\n  --muted: #94a3b8;\n  --hud-bg: rgba(2,6,23,.7);\n}\n.canvas-wrap{\n  min-height: 100vh;\n  background: radial-gradient(1000px 600px at 20% -10%, #19324b 0%, transparent 40%),\n              radial-gradient(800px 500px at 100% 0%, #1b2d24 0%, transparent 35%),\n              var(--bg);\n  display: flex; justify-content: center; align-items: flex-start;\n  padding: 24px 16px 64px;\n}\n@media (min-height: 820px){ .canvas-wrap{ align-items: center; } }\n.canvas-shell{ width: min(100%, 1500px); position: relative; }\n.canvas{\n  display: block; width: 100%; height: auto; margin: 12px auto 0;\n  border: 2px solid var(--line); border-radius: 14px;\n  box-shadow: 0 14px 40px rgba(0,0,0,.35), 0 2px 10px rgba(0,0,0,.25);\n  background: #0e1624;\n}\n.hud{\n  position: absolute; top: 14px; left: 14px; z-index: 2;\n  background: var(--hud-bg); color: var(--text);\n  border: 1px solid rgba(148,163,184,.35);\n  border-radius: 8px; padding: 10px 12px;\n  backdrop-filter: blur(6px); -webkit-backdrop-filter: blur(6px);\n}\n.hud-title{ font-weight: 800; font-size: 14px; line-height: 1.1; }\n.hud-sub{ color: var(--muted); font-size: 12px; margin-top: 2px; }\n.tip{\n  position: fixed; z-index: 10; max-width: 320px;\n  background: rgba(15,23,42,.95); color: var(--text);\n  border: 1px solid rgba(51,65,85,.9); border-radius: 10px; padding: 10px 12px;\n  box-shadow: 0 10px 30px rgba(0,0,0,.35); pointer-events: none; font-size: 13px;\n}\n.tip-row{ margin: 2px 0; }\n.tip-row.msg{ color: var(--muted); font-style: italic; }\n.bubble{\n  position: fixed; z-index: 11;\n  transform: translate(-50%, -100%);\n  background: rgba(2,6,23,.92); border: 1px solid rgba(51,65,85,.9);\n  color: var(--text); border-radius: 12px; padding: 10px 12px;\n  box-shadow: 0 12px 36px rgba(0,0,0,.45);\n  animation: bubble-in .2s ease-out, bubble-out .25s ease-in 4.75s forwards;\n  max-width: min(70vw, 420px);\n}\n.bubble-amt{ font-weight: 800; margin-bottom: 2px; }\n.bubble-msg{ color: var(--muted); font-style: italic; }\n@keyframes bubble-in { from{ opacity: 0; transform: translate(-50%,-90%) scale(.98);} to{opacity:1; transform: translate(-50%,-100%) scale(1);} }\n@keyframes bubble-out { to{ opacity: 0; transform: translate(-50%,-100%) scale(.98);} }\n    `}</style>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}