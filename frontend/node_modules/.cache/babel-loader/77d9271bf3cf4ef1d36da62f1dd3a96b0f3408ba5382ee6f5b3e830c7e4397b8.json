{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandowdell/Workstation/React/million-pixel-app/src/pages/CanvasPage.jsx\",\n  _import$meta,\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport imageSrc from \"../Banner Hi Rez.png\"; // <-- adjust to your path if needed\n\n// ---- endpoints/socket ----\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || ((_import$meta = import.meta) === null || _import$meta === void 0 ? void 0 : _import$meta.env) && import.meta.env.VITE_API_BASE || \"http://localhost:3001\";\nconst socket = io(API_BASE, {\n  transports: [\"websocket\"]\n});\n\n// ---- grid/canvas ----\nconst CANVAS_WIDTH = 1495;\nconst CANVAS_HEIGHT = 1024;\nconst GRID_COLUMNS = 200; // 200x200 = 40,000 cells\nconst GRID_ROWS = 200;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\n// ---- utils ----\nconst k = (x, y) => `${x},${y}`;\n\n// cache for grayscale base\nlet cachedGrayCanvas = null;\nfunction buildGrayBase(img) {\n  if (cachedGrayCanvas) return cachedGrayCanvas;\n  const off = document.createElement(\"canvas\");\n  off.width = CANVAS_WIDTH;\n  off.height = CANVAS_HEIGHT;\n  const octx = off.getContext(\"2d\");\n  octx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const data = octx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const a = data.data;\n  for (let i = 0; i < a.length; i += 4) {\n    const avg = (a[i] + a[i + 1] + a[i + 2]) / 3;\n    a[i] = avg;\n    a[i + 1] = avg;\n    a[i + 2] = avg;\n  }\n  octx.putImageData(data, 0, 0);\n  cachedGrayCanvas = off;\n  return off;\n}\nexport default function CanvasPage() {\n  _s();\n  const canvasRef = useRef(null);\n\n  // reveal state (can include optional metadata from backend)\n  const [cells, setCells] = useState([]); // [{x,y, amountCents?, message?, buyer?, ts?}]\n  const cellsMapRef = useRef(new Map()); // k(x,y) -> cell (for O(1) hover)\n  const totalCells = GRID_COLUMNS * GRID_ROWS;\n\n  // image cache\n  const imgRef = useRef(null);\n  const [imgReady, setImgReady] = useState(false);\n\n  // hover tooltip state\n  const [hover, setHover] = useState(null); // { clientX, clientY, cell }\n\n  // ----- init: image -----\n  useEffect(() => {\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      imgRef.current = img;\n      buildGrayBase(img); // prime\n      setImgReady(true);\n      draw(); // first paint\n    };\n  }, []);\n\n  // ----- init: bootstrap + live updates -----\n  useEffect(() => {\n    const merge = incoming => {\n      setCells(prev => {\n        if (!(incoming !== null && incoming !== void 0 && incoming.length)) return prev;\n        const out = [...prev];\n        const seen = new Set(prev.map(c => k(c.x, c.y)));\n        for (const c of incoming) {\n          const key = k(c.x, c.y);\n          if (!seen.has(key)) {\n            out.push(c);\n            seen.add(key);\n            cellsMapRef.current.set(key, c);\n          } else {\n            // update any new metadata\n            const idx = out.findIndex(p => p.x === c.x && p.y === c.y);\n            if (idx >= 0) out[idx] = {\n              ...out[idx],\n              ...c\n            };\n            cellsMapRef.current.set(key, {\n              ...cellsMapRef.current.get(key),\n              ...c\n            });\n          }\n        }\n        return out;\n      });\n    };\n    fetch(`${API_BASE}/state`).then(r => r.json()).then(({\n      cells\n    }) => merge(cells)).catch(() => {});\n    socket.on(\"bootstrap\", ({\n      cells\n    }) => merge(cells));\n    socket.on(\"cells_revealed\", ({\n      cells\n    }) => merge(cells));\n    return () => {\n      socket.off(\"bootstrap\");\n      socket.off(\"cells_revealed\");\n    };\n  }, []);\n\n  // ----- draw on changes -----\n  useEffect(() => {\n    draw();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cells, imgReady]);\n\n  // ----- draw -----\n  function draw() {\n    const canvas = canvasRef.current;\n    const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n    const img = imgRef.current;\n    if (!canvas || !ctx || !img) return;\n\n    // base (grayscale cached)\n    const gray = buildGrayBase(img);\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.drawImage(gray, 0, 0);\n\n    // revealed cells -> draw real image tile\n    for (let i = 0; i < cells.length; i++) {\n      const {\n        x,\n        y\n      } = cells[i];\n      ctx.drawImage(img, x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT, x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    }\n\n    // grid\n    drawGrid(ctx);\n  }\n  function drawGrid(ctx) {\n    ctx.save();\n    ctx.strokeStyle = \"rgba(255,255,255,0.06)\";\n    ctx.lineWidth = 1;\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  // ----- hover handling (DOM tooltip) -----\n  function onMouseMove(e) {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = CANVAS_WIDTH / rect.width;\n    const scaleY = CANVAS_HEIGHT / rect.height;\n    const px = (e.clientX - rect.left) * scaleX;\n    const py = (e.clientY - rect.top) * scaleY;\n    const x = Math.floor(px / CELL_WIDTH);\n    const y = Math.floor(py / CELL_HEIGHT);\n    if (x < 0 || y < 0 || x >= GRID_COLUMNS || y >= GRID_ROWS) {\n      setHover(null);\n      return;\n    }\n    const cell = cellsMapRef.current.get(k(x, y));\n    if (!cell) {\n      setHover(null);\n      return;\n    }\n    setHover({\n      clientX: e.clientX,\n      clientY: e.clientY,\n      cell\n    });\n  }\n  function onMouseLeave() {\n    setHover(null);\n  }\n  const remaining = useMemo(() => Math.max(totalCells - cells.length, 0), [cells.length, totalCells]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Style, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-shell\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hud\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hud-title\",\n          children: \"Million Pixel Reveal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hud-sub\",\n          children: [\"Remaining: \", remaining]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        className: \"canvas\",\n        onMouseMove: onMouseMove,\n        onMouseLeave: onMouseLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), (hover === null || hover === void 0 ? void 0 : hover.cell) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tip\",\n        style: {\n          left: hover.clientX + 14,\n          top: hover.clientY + 14\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Cell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), \" (\", hover.cell.x, \",\", hover.cell.y, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), typeof hover.cell.amountCents === \"number\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), \" $\", (hover.cell.amountCents / 100).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this), hover.cell.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip-row msg\",\n          children: [\"\\u201C\", hover.cell.message, \"\\u201D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), hover.cell.buyer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), \" \", hover.cell.buyer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n\n/* ---------- scoped styles ---------- */\n_s(CanvasPage, \"JbOBwneWAP+/rdkagA5rCLVysxQ=\");\n_c = CanvasPage;\nfunction Style() {\n  return /*#__PURE__*/_jsxDEV(\"style\", {\n    children: `\n:root{\n  --bg: #0b1220;\n  --line: #334155;\n  --text: #e2e8f0;\n  --muted: #94a3b8;\n  --hud-bg: rgba(2,6,23,.7);\n}\n\n.canvas-wrap{\n  min-height: 100vh;\n  background: radial-gradient(1000px 600px at 20% -10%, #19324b 0%, transparent 40%),\n              radial-gradient(800px 500px at 100% 0%, #1b2d24 0%, transparent 35%),\n              var(--bg);\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 24px 16px 64px;\n}\n@media (min-height: 820px){\n  .canvas-wrap{ align-items: center; }\n}\n\n.canvas-shell{\n  width: min(100%, 1500px);\n  position: relative; /* for HUD & tooltip positioning */\n}\n\n.canvas{\n  display: block;\n  width: 100%;\n  height: auto;\n  margin: 12px auto 0;\n  border: 2px solid var(--line);\n  border-radius: 14px;\n  box-shadow: 0 14px 40px rgba(0,0,0,.35), 0 2px 10px rgba(0,0,0,.25);\n  background: #0e1624;\n}\n\n/* HUD pinned inside shell, not painted on canvas */\n.hud{\n  position: absolute;\n  top: 14px;\n  left: 14px;\n  z-index: 2;\n  background: var(--hud-bg);\n  color: var(--text);\n  border: 1px solid rgba(148,163,184,.35);\n  border-radius: 8px;\n  padding: 10px 12px;\n  backdrop-filter: blur(6px);\n  -webkit-backdrop-filter: blur(6px);\n}\n.hud-title{ font-weight: 800; font-size: 14px; line-height: 1.1; }\n.hud-sub{ color: var(--muted); font-size: 12px; margin-top: 2px; }\n\n/* Hover tooltip */\n.tip{\n  position: fixed; /* follow cursor anywhere on page */\n  z-index: 10;\n  max-width: 320px;\n  background: rgba(15,23,42,.95);\n  color: var(--text);\n  border: 1px solid rgba(51,65,85,.9);\n  border-radius: 10px;\n  padding: 10px 12px;\n  box-shadow: 0 10px 30px rgba(0,0,0,.35);\n  pointer-events: none;\n  font-size: 13px;\n}\n.tip-row{ margin: 2px 0; }\n.tip-row.msg{ color: var(--muted); font-style: italic; }\n    `\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Style;\nvar _c, _c2;\n$RefreshReg$(_c, \"CanvasPage\");\n$RefreshReg$(_c2, \"Style\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","io","imageSrc","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","_import$meta","import","meta","VITE_API_BASE","socket","transports","CANVAS_WIDTH","CANVAS_HEIGHT","GRID_COLUMNS","GRID_ROWS","CELL_WIDTH","CELL_HEIGHT","k","x","y","cachedGrayCanvas","buildGrayBase","img","off","document","createElement","width","height","octx","getContext","drawImage","data","getImageData","a","i","length","avg","putImageData","CanvasPage","_s","canvasRef","cells","setCells","cellsMapRef","Map","totalCells","imgRef","imgReady","setImgReady","hover","setHover","Image","src","onload","current","draw","merge","incoming","prev","out","seen","Set","map","c","key","has","push","add","set","idx","findIndex","p","get","fetch","then","r","json","catch","on","canvas","ctx","gray","clearRect","drawGrid","save","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","j","restore","onMouseMove","e","rect","getBoundingClientRect","scaleX","scaleY","px","clientX","left","py","clientY","top","Math","floor","cell","onMouseLeave","remaining","max","className","children","Style","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","amountCents","toFixed","message","buyer","_c","_c2","$RefreshReg$"],"sources":["/Users/jonathandowdell/Workstation/React/million-pixel-app/src/pages/CanvasPage.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport imageSrc from \"../Banner Hi Rez.png\"; // <-- adjust to your path if needed\n\n// ---- endpoints/socket ----\nconst API_BASE =\n  process.env.REACT_APP_API_BASE ||\n  (import.meta?.env && import.meta.env.VITE_API_BASE) ||\n  \"http://localhost:3001\";\nconst socket = io(API_BASE, { transports: [\"websocket\"] });\n\n// ---- grid/canvas ----\nconst CANVAS_WIDTH = 1495;\nconst CANVAS_HEIGHT = 1024;\nconst GRID_COLUMNS = 200; // 200x200 = 40,000 cells\nconst GRID_ROWS = 200;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\n// ---- utils ----\nconst k = (x, y) => `${x},${y}`;\n\n// cache for grayscale base\nlet cachedGrayCanvas = null;\n\nfunction buildGrayBase(img) {\n  if (cachedGrayCanvas) return cachedGrayCanvas;\n  const off = document.createElement(\"canvas\");\n  off.width = CANVAS_WIDTH;\n  off.height = CANVAS_HEIGHT;\n  const octx = off.getContext(\"2d\");\n  octx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const data = octx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n  const a = data.data;\n  for (let i = 0; i < a.length; i += 4) {\n    const avg = (a[i] + a[i + 1] + a[i + 2]) / 3;\n    a[i] = avg;\n    a[i + 1] = avg;\n    a[i + 2] = avg;\n  }\n  octx.putImageData(data, 0, 0);\n  cachedGrayCanvas = off;\n  return off;\n}\n\nexport default function CanvasPage() {\n  const canvasRef = useRef(null);\n\n  // reveal state (can include optional metadata from backend)\n  const [cells, setCells] = useState([]); // [{x,y, amountCents?, message?, buyer?, ts?}]\n  const cellsMapRef = useRef(new Map()); // k(x,y) -> cell (for O(1) hover)\n  const totalCells = GRID_COLUMNS * GRID_ROWS;\n\n  // image cache\n  const imgRef = useRef(null);\n  const [imgReady, setImgReady] = useState(false);\n\n  // hover tooltip state\n  const [hover, setHover] = useState(null); // { clientX, clientY, cell }\n\n  // ----- init: image -----\n  useEffect(() => {\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      imgRef.current = img;\n      buildGrayBase(img); // prime\n      setImgReady(true);\n      draw(); // first paint\n    };\n  }, []);\n\n  // ----- init: bootstrap + live updates -----\n  useEffect(() => {\n    const merge = (incoming) => {\n      setCells((prev) => {\n        if (!incoming?.length) return prev;\n        const out = [...prev];\n        const seen = new Set(prev.map((c) => k(c.x, c.y)));\n        for (const c of incoming) {\n          const key = k(c.x, c.y);\n          if (!seen.has(key)) {\n            out.push(c);\n            seen.add(key);\n            cellsMapRef.current.set(key, c);\n          } else {\n            // update any new metadata\n            const idx = out.findIndex((p) => p.x === c.x && p.y === c.y);\n            if (idx >= 0) out[idx] = { ...out[idx], ...c };\n            cellsMapRef.current.set(key, {\n              ...cellsMapRef.current.get(key),\n              ...c,\n            });\n          }\n        }\n        return out;\n      });\n    };\n\n    fetch(`${API_BASE}/state`)\n      .then((r) => r.json())\n      .then(({ cells }) => merge(cells))\n      .catch(() => {});\n\n    socket.on(\"bootstrap\", ({ cells }) => merge(cells));\n    socket.on(\"cells_revealed\", ({ cells }) => merge(cells));\n\n    return () => {\n      socket.off(\"bootstrap\");\n      socket.off(\"cells_revealed\");\n    };\n  }, []);\n\n  // ----- draw on changes -----\n  useEffect(() => {\n    draw();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cells, imgReady]);\n\n  // ----- draw -----\n  function draw() {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext(\"2d\");\n    const img = imgRef.current;\n    if (!canvas || !ctx || !img) return;\n\n    // base (grayscale cached)\n    const gray = buildGrayBase(img);\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.drawImage(gray, 0, 0);\n\n    // revealed cells -> draw real image tile\n    for (let i = 0; i < cells.length; i++) {\n      const { x, y } = cells[i];\n      ctx.drawImage(\n        img,\n        x * CELL_WIDTH,\n        y * CELL_HEIGHT,\n        CELL_WIDTH,\n        CELL_HEIGHT,\n        x * CELL_WIDTH,\n        y * CELL_HEIGHT,\n        CELL_WIDTH,\n        CELL_HEIGHT\n      );\n    }\n\n    // grid\n    drawGrid(ctx);\n  }\n\n  function drawGrid(ctx) {\n    ctx.save();\n    ctx.strokeStyle = \"rgba(255,255,255,0.06)\";\n    ctx.lineWidth = 1;\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  // ----- hover handling (DOM tooltip) -----\n  function onMouseMove(e) {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = CANVAS_WIDTH / rect.width;\n    const scaleY = CANVAS_HEIGHT / rect.height;\n\n    const px = (e.clientX - rect.left) * scaleX;\n    const py = (e.clientY - rect.top) * scaleY;\n\n    const x = Math.floor(px / CELL_WIDTH);\n    const y = Math.floor(py / CELL_HEIGHT);\n    if (x < 0 || y < 0 || x >= GRID_COLUMNS || y >= GRID_ROWS) {\n      setHover(null);\n      return;\n    }\n    const cell = cellsMapRef.current.get(k(x, y));\n    if (!cell) {\n      setHover(null);\n      return;\n    }\n    setHover({ clientX: e.clientX, clientY: e.clientY, cell });\n  }\n\n  function onMouseLeave() {\n    setHover(null);\n  }\n\n  const remaining = useMemo(\n    () => Math.max(totalCells - cells.length, 0),\n    [cells.length, totalCells]\n  );\n\n  return (\n    <div className=\"canvas-wrap\">\n      <Style />\n      <div className=\"canvas-shell\">\n        {/* HUD (DOM, so it never gets clipped) */}\n        <div className=\"hud\">\n          <div className=\"hud-title\">Million Pixel Reveal</div>\n          <div className=\"hud-sub\">Remaining: {remaining}</div>\n        </div>\n\n        <canvas\n          ref={canvasRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          className=\"canvas\"\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        />\n\n        {/* Hover tooltip (only for revealed cells, shows message if present) */}\n        {hover?.cell && (\n          <div\n            className=\"tip\"\n            style={{ left: hover.clientX + 14, top: hover.clientY + 14 }}\n          >\n            <div className=\"tip-row\">\n              <b>Cell</b> ({hover.cell.x},{hover.cell.y})\n            </div>\n            {typeof hover.cell.amountCents === \"number\" && (\n              <div className=\"tip-row\">\n                <b>Amount</b> ${(hover.cell.amountCents / 100).toFixed(2)}\n              </div>\n            )}\n            {hover.cell.message && (\n              <div className=\"tip-row msg\">“{hover.cell.message}”</div>\n            )}\n            {hover.cell.buyer && (\n              <div className=\"tip-row\">\n                <b>By</b> {hover.cell.buyer}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/* ---------- scoped styles ---------- */\nfunction Style() {\n  return (\n    <style>{`\n:root{\n  --bg: #0b1220;\n  --line: #334155;\n  --text: #e2e8f0;\n  --muted: #94a3b8;\n  --hud-bg: rgba(2,6,23,.7);\n}\n\n.canvas-wrap{\n  min-height: 100vh;\n  background: radial-gradient(1000px 600px at 20% -10%, #19324b 0%, transparent 40%),\n              radial-gradient(800px 500px at 100% 0%, #1b2d24 0%, transparent 35%),\n              var(--bg);\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 24px 16px 64px;\n}\n@media (min-height: 820px){\n  .canvas-wrap{ align-items: center; }\n}\n\n.canvas-shell{\n  width: min(100%, 1500px);\n  position: relative; /* for HUD & tooltip positioning */\n}\n\n.canvas{\n  display: block;\n  width: 100%;\n  height: auto;\n  margin: 12px auto 0;\n  border: 2px solid var(--line);\n  border-radius: 14px;\n  box-shadow: 0 14px 40px rgba(0,0,0,.35), 0 2px 10px rgba(0,0,0,.25);\n  background: #0e1624;\n}\n\n/* HUD pinned inside shell, not painted on canvas */\n.hud{\n  position: absolute;\n  top: 14px;\n  left: 14px;\n  z-index: 2;\n  background: var(--hud-bg);\n  color: var(--text);\n  border: 1px solid rgba(148,163,184,.35);\n  border-radius: 8px;\n  padding: 10px 12px;\n  backdrop-filter: blur(6px);\n  -webkit-backdrop-filter: blur(6px);\n}\n.hud-title{ font-weight: 800; font-size: 14px; line-height: 1.1; }\n.hud-sub{ color: var(--muted); font-size: 12px; margin-top: 2px; }\n\n/* Hover tooltip */\n.tip{\n  position: fixed; /* follow cursor anywhere on page */\n  z-index: 10;\n  max-width: 320px;\n  background: rgba(15,23,42,.95);\n  color: var(--text);\n  border: 1px solid rgba(51,65,85,.9);\n  border-radius: 10px;\n  padding: 10px 12px;\n  box-shadow: 0 10px 30px rgba(0,0,0,.35);\n  pointer-events: none;\n  font-size: 13px;\n}\n.tip-row{ margin: 2px 0; }\n.tip-row.msg{ color: var(--muted); font-style: italic; }\n    `}</style>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}