{"ast":null,"code":"var _jsxFileName = \"/Users/jonathandowdell/Workstation/React/million-pixel-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport imageSrc from \"./booker-t-washington.jpg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GRID_COLUMNS = 100;\nconst GRID_ROWS = 100;\nconst CANVAS_WIDTH = 1920;\nconst CANVAS_HEIGHT = 1080;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [mockClaims, setMockClaims] = useState(generateMockClaims());\n  useEffect(() => {\n    drawCanvas();\n  }, [mockClaims, hoveredCell]);\n  const drawCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      drawGrid(ctx);\n      drawClaims(ctx);\n      if (hoveredCell) {\n        highlightHoveredCell(ctx, hoveredCell);\n      }\n    };\n  };\n  const drawGrid = ctx => {\n    ctx.strokeStyle = \"rgba(0,0,0,0.05)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n  };\n  const drawClaims = ctx => {\n    mockClaims.forEach(({\n      x,\n      y\n    }) => {\n      ctx.fillStyle = \"rgba(218,165,32,0.5)\";\n      ctx.fillRect(x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    });\n  };\n  const highlightHoveredCell = (ctx, cell) => {\n    if (!cell) return;\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.15)\";\n    ctx.fillRect(cell.x * CELL_WIDTH, cell.y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n  };\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const canvasX = (e.clientX - rect.left) * scaleX;\n    const canvasY = (e.clientY - rect.top) * scaleY;\n    const x = Math.floor(canvasX / CELL_WIDTH);\n    const y = Math.floor(canvasY / CELL_HEIGHT);\n    setHoveredCell({\n      x,\n      y\n    });\n    setMousePosition({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n  const getClaimInfo = cell => {\n    return mockClaims.find(claim => claim.x === cell.x && claim.y === cell.y);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"Arial, sans-serif\",\n      backgroundColor: \"#f9f9f9\",\n      minHeight: \"100vh\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontWeight: \"bold\",\n        color: \"#333\"\n      },\n      children: \"Million Pixel Tribute to Booker T. Washington\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT,\n          onMouseMove: handleMouseMove,\n          style: {\n            borderRadius: \"12px\",\n            boxShadow: \"0 4px 12px rgba(0,0,0,0.1)\",\n            maxWidth: \"100%\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), hoveredCell && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: mousePosition.y + 12,\n            left: mousePosition.x + 12,\n            backgroundColor: \"#fff\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n            padding: \"8px\",\n            pointerEvents: \"none\",\n            fontSize: \"14px\",\n            maxWidth: \"220px\"\n          },\n          children: (() => {\n            const claim = getClaimInfo(hoveredCell);\n            return claim ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Cell:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this), \" (\", hoveredCell.x, \", \", hoveredCell.y, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Claimed by:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this), \" \", claim.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this), claim.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontStyle: \"italic\"\n                },\n                children: [\"\\\"\", claim.message, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Cell: (\", hoveredCell.x, \", \", hoveredCell.y, \") - Available\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"txBbngkIdHtFXSMEKLQrDLakdPU=\");\n_c = App;\nfunction generateMockClaims() {\n  const claims = [];\n  for (let i = 0; i < 300; i++) {\n    claims.push({\n      x: Math.floor(Math.random() * GRID_COLUMNS),\n      y: Math.floor(Math.random() * GRID_ROWS),\n      name: `Donor ${i}`,\n      message: Math.random() > 0.7 ? \"Supporting the legacy!\" : null\n    });\n  }\n  return claims;\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","imageSrc","jsxDEV","_jsxDEV","Fragment","_Fragment","GRID_COLUMNS","GRID_ROWS","CANVAS_WIDTH","CANVAS_HEIGHT","CELL_WIDTH","CELL_HEIGHT","App","_s","canvasRef","hoveredCell","setHoveredCell","mousePosition","setMousePosition","x","y","mockClaims","setMockClaims","generateMockClaims","drawCanvas","canvas","current","ctx","getContext","img","Image","src","onload","clearRect","drawImage","drawGrid","drawClaims","highlightHoveredCell","strokeStyle","i","beginPath","moveTo","lineTo","stroke","j","forEach","fillStyle","fillRect","cell","handleMouseMove","e","rect","getBoundingClientRect","scaleX","width","scaleY","height","canvasX","clientX","left","canvasY","clientY","top","Math","floor","getClaimInfo","find","claim","style","fontFamily","backgroundColor","minHeight","padding","children","textAlign","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginTop","position","ref","onMouseMove","borderRadius","boxShadow","maxWidth","border","pointerEvents","fontSize","name","message","fontStyle","_c","claims","push","random","$RefreshReg$"],"sources":["/Users/jonathandowdell/Workstation/React/million-pixel-app/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport imageSrc from \"./booker-t-washington.jpg\";\n\nconst GRID_COLUMNS = 100;\nconst GRID_ROWS = 100;\nconst CANVAS_WIDTH = 1920;\nconst CANVAS_HEIGHT = 1080;\nconst CELL_WIDTH = CANVAS_WIDTH / GRID_COLUMNS;\nconst CELL_HEIGHT = CANVAS_HEIGHT / GRID_ROWS;\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const [mockClaims, setMockClaims] = useState(generateMockClaims());\n\n  useEffect(() => {\n    drawCanvas();\n  }, [mockClaims, hoveredCell]);\n\n  const drawCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = () => {\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      drawGrid(ctx);\n      drawClaims(ctx);\n      if (hoveredCell) {\n        highlightHoveredCell(ctx, hoveredCell);\n      }\n    };\n  };\n\n  const drawGrid = (ctx) => {\n    ctx.strokeStyle = \"rgba(0,0,0,0.05)\";\n    for (let i = 0; i <= GRID_COLUMNS; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * CELL_WIDTH, 0);\n      ctx.lineTo(i * CELL_WIDTH, CANVAS_HEIGHT);\n      ctx.stroke();\n    }\n\n    for (let j = 0; j <= GRID_ROWS; j++) {\n      ctx.beginPath();\n      ctx.moveTo(0, j * CELL_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, j * CELL_HEIGHT);\n      ctx.stroke();\n    }\n  };\n\n  const drawClaims = (ctx) => {\n    mockClaims.forEach(({ x, y }) => {\n      ctx.fillStyle = \"rgba(218,165,32,0.5)\";\n      ctx.fillRect(x * CELL_WIDTH, y * CELL_HEIGHT, CELL_WIDTH, CELL_HEIGHT);\n    });\n  };\n\n  const highlightHoveredCell = (ctx, cell) => {\n    if (!cell) return;\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.15)\";\n    ctx.fillRect(\n      cell.x * CELL_WIDTH,\n      cell.y * CELL_HEIGHT,\n      CELL_WIDTH,\n      CELL_HEIGHT\n    );\n  };\n\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    const canvasX = (e.clientX - rect.left) * scaleX;\n    const canvasY = (e.clientY - rect.top) * scaleY;\n\n    const x = Math.floor(canvasX / CELL_WIDTH);\n    const y = Math.floor(canvasY / CELL_HEIGHT);\n\n    setHoveredCell({ x, y });\n    setMousePosition({ x: e.clientX - rect.left, y: e.clientY - rect.top });\n  };\n\n  const getClaimInfo = (cell) => {\n    return mockClaims.find((claim) => claim.x === cell.x && claim.y === cell.y);\n  };\n\n  return (\n    <div\n      style={{\n        fontFamily: \"Arial, sans-serif\",\n        backgroundColor: \"#f9f9f9\",\n        minHeight: \"100vh\",\n        padding: \"20px\",\n      }}\n    >\n      <h1 style={{ textAlign: \"center\", fontWeight: \"bold\", color: \"#333\" }}>\n        Million Pixel Tribute to Booker T. Washington\n      </h1>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}\n      >\n        <div style={{ position: \"relative\" }}>\n          <canvas\n            ref={canvasRef}\n            width={CANVAS_WIDTH}\n            height={CANVAS_HEIGHT}\n            onMouseMove={handleMouseMove}\n            style={{\n              borderRadius: \"12px\",\n              boxShadow: \"0 4px 12px rgba(0,0,0,0.1)\",\n              maxWidth: \"100%\",\n              height: \"auto\",\n            }}\n          />\n          {hoveredCell && (\n            <div\n              style={{\n                position: \"absolute\",\n                top: mousePosition.y + 12,\n                left: mousePosition.x + 12,\n                backgroundColor: \"#fff\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"8px\",\n                boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n                padding: \"8px\",\n                pointerEvents: \"none\",\n                fontSize: \"14px\",\n                maxWidth: \"220px\",\n              }}\n            >\n              {(() => {\n                const claim = getClaimInfo(hoveredCell);\n                return claim ? (\n                  <>\n                    <div>\n                      <strong>Cell:</strong> ({hoveredCell.x}, {hoveredCell.y})\n                    </div>\n                    <div>\n                      <strong>Claimed by:</strong> {claim.name}\n                    </div>\n                    {claim.message && (\n                      <div style={{ fontStyle: \"italic\" }}>\n                        \"{claim.message}\"\n                      </div>\n                    )}\n                  </>\n                ) : (\n                  <div>\n                    Cell: ({hoveredCell.x}, {hoveredCell.y}) - Available\n                  </div>\n                );\n              })()}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction generateMockClaims() {\n  const claims = [];\n  for (let i = 0; i < 300; i++) {\n    claims.push({\n      x: Math.floor(Math.random() * GRID_COLUMNS),\n      y: Math.floor(Math.random() * GRID_ROWS),\n      name: `Donor ${i}`,\n      message: Math.random() > 0.7 ? \"Supporting the legacy!\" : null,\n    });\n  }\n  return claims;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}